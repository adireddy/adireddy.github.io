{
"version":3,
"file":"bunnymark.js",
"sourceRoot":"file://",
"sources":["/usr/lib/haxe/std/js/_std/Std.hx","/haxe/haxe-pixi/pixi/plugins/app/Application.hx","/haxe/haxe-pixi/samples/bunnymark/Bunny.hx","/haxe/haxe-pixi/samples/bunnymark/Main.hx","/usr/lib/haxe/std/Math.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/* Helper class that can be used by any pixi application\n *\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\n\npackage pixi.plugins.app;\n\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.core.renderers.canvas.CanvasRenderer;\nimport pixi.core.renderers.SystemRenderer;\nimport pixi.plugins.stats.Stats;\nimport pixi.core.renderers.Detector;\nimport pixi.core.display.Container;\nimport js.html.Event;\nimport js.html.CanvasElement;\nimport js.Browser;\n\nclass Application {\n\n\t/*\n\t * Sets the pixel ratio of the application\n\t * @default 1\n\t */\n\tpublic var pixelRatio(null, default):Float;\n\n\t/*\n\t * Default frame rate is 60 FPS and this can be set to true to get 30 FPS\n\t * @default false\n\t */\n\tpublic var skipFrame(null, default):Bool;\n\n\t/*\n\t * Width of the application\n\t * @default Browser.window.innerWidth\n\t */\n\tpublic var width(null, default):Float;\n\n\t/*\n\t * Height of the application\n\t * @default Browser.window.innerHeight\n\t */\n\tpublic var height(null, default):Float;\n\n\t/*\n\t * Whether you want to resize the canvas and renderer on browser resize\n\t * Should be set to false when custom width and height are used for the application\n\t * @default true\n\t */\n\tpublic var resize(null, default):Bool;\n\n\t/*\n\t * Sets the background color of the stage\n\t * @default 0xFFFFFF\n\t */\n\tpublic var backgroundColor(null, default):Int;\n\n\t/*\n\t * Update listener function\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/*\n\t * Window resize listener function\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/*\n\t * Pixi stage\n\t * Read-only\n\t */\n\tvar _stage(default, null):Container;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tvar _canvas:CanvasElement;\n\tvar _renderer:SystemRenderer;\n\tvar _stats:Stats;\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\tvar _elapsedTime:Float;\n\tvar _skipFrame:Bool;\n\n\tpublic function new() {\n\t\t_lastTime = Date.now();\n\t\t_setDefaultValues();\n\t}\n\n\tfunction _setDefaultValues() {\n\t\tpixelRatio = 1;\n\t\tskipFrame = false;\n\t\tbackgroundColor = 0x000000;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\t_skipFrame = false;\n\t}\n\n\t/*\n\t * Enable/disable stats for the application\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder - <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @default false\n\t */\n\tpublic function start(?renderer:String = AUTO, ?stats:Bool = true) {\n\t\t_canvas = Browser.document.createCanvasElement();\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\t\t_canvas.style.position = \"absolute\";\n\t\tBrowser.document.body.appendChild(_canvas);\n\n\t\t_stage = new Container();\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = _canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\n\t\tif (renderer == AUTO) _renderer = Detector.autoDetectRenderer(width, height, renderingOptions);\n\t\telse if (renderer == RECOMMENDED) _renderer = Detector.autoDetectRecommendedRenderer(width, height, renderingOptions);\n\t\telse if (renderer == CANVAS) _renderer = new CanvasRenderer(width, height, renderingOptions);\n\t\telse _renderer = new WebGLRenderer(width, height, renderingOptions);\n\n\t\tBrowser.document.body.appendChild(_renderer.view);\n\t\tBrowser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\t_lastTime = Date.now();\n\n\t\tif (stats) _addStats();\n\t}\n\n\tfunction _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\t_renderer.resize(width, height);\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\n\t\tif (_stats != null) {\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t}\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\tfunction _onRequestAnimationFrame() {\n\t\tif (skipFrame && _skipFrame) _skipFrame = false;\n\t\telse {\n\t\t\t_skipFrame = true;\n\t\t\t_calculateElapsedTime();\n\t\t\tif (onUpdate != null) onUpdate(_elapsedTime);\n\t\t\t_renderer.render(_stage);\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\tif (_stats != null) _stats.update();\n\t}\n\n\tfunction _calculateElapsedTime() {\n\t\t_currentTime = Date.now();\n\t\t_elapsedTime = _currentTime.getTime() - _lastTime.getTime();\n\t\t_lastTime = _currentTime;\n\t}\n\n\t@:noCompletion function _addStats() {\n\t\tif (untyped __js__(\"window\").Stats != null) {\n\t\t\tvar _container = Browser.document.createElement(\"div\");\n\t\t\tBrowser.document.body.appendChild(_container);\n\t\t\t_stats = new Stats();\n\t\t\t_stats.domElement.style.position = \"absolute\";\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t\t_container.appendChild(_stats.domElement);\n\t\t\t_stats.begin();\n\t\t}\n\t}\n}","package samples.bunnymark;\n\nimport pixi.core.textures.Texture;\nimport pixi.core.sprites.Sprite;\n\nclass Bunny extends Sprite {\n\n\tpublic var speedX(default, default):Float;\n\tpublic var speedY(default, default):Float;\n\tpublic var scaleSpeed(default, default):Float;\n\tpublic var rotationSpeed(default, default):Float;\n\n\tpublic function new(texture:Texture) {\n\t\tsuper(texture);\n\t}\n}","package samples.bunnymark;\n\nimport js.html.DivElement;\nimport pixi.core.math.shapes.Rectangle;\nimport pixi.core.particles.ParticleContainer;\nimport js.Browser;\nimport pixi.core.display.Container;\nimport pixi.core.textures.Texture;\nimport pixi.plugins.app.Application;\n\nclass Main extends Application {\n\n\tvar wabbitTexture:Texture;\n\n\tvar bunnys:Array<Bunny> = [];\n\tvar bunnyTextures:Array<Texture> = [];\n\tvar gravity:Float = 0.5;\n\n\tvar maxX:Float;\n\tvar minX:Float = 0;\n\tvar maxY:Float;\n\tvar minY:Float = 0;\n\n\tvar startBunnyCount:Int = 2;\n\tvar isAdding:Bool = false;\n\tvar count:Int = 0;\n\tvar container:ParticleContainer;\n\n\tvar amount:Int = 100;\n\tvar bunnyType:Int;\n\tvar currentTexture:Texture;\n\tvar counter:DivElement;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_init();\n\t}\n\n\tfunction _init() {\n\t\tbackgroundColor = 0xE0E6F8;\n\t\tonUpdate = _onUpdate;\n\t\tonResize = _onResize;\n\t\tresize = true;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tsuper.start(true);\n\t\t_setup();\n\t}\n\n\tfunction _setup() {\n\t\tmaxX = Browser.window.innerWidth;\n\t\tmaxY = Browser.window.innerHeight;\n\n\t\tcounter = Browser.document.createDivElement();\n\t\tcounter.style.position = \"absolute\";\n\t\tcounter.style.top = \"1px\";\n\t\tcounter.style.left = \"1px\";\n\t\tcounter.style.width = \"90px\";\n\t\tcounter.style.background = \"#CCCCC\";\n\t\tcounter.style.backgroundColor = \"#105CB6\";\n\t\tcounter.style.fontFamily = \"Helvetica,Arial\";\n\t\tcounter.style.padding = \"3px\";\n\t\tcounter.style.color = \"#0FF\";\n\t\tcounter.style.fontSize = \"10px\";\n\t\tcounter.style.fontWeight = \"bold\";\n\t\tcounter.style.textAlign = \"center\";\n\t\tcounter.className = \"counter\";\n\t\tBrowser.document.body.appendChild(counter);\n\n\t\tcount = startBunnyCount;\n\t\tcounter.innerHTML = count + \" BUNNIES\";\n\n\t\twabbitTexture = Texture.fromImage(\"assets/bunnymark/bunnys.png\");\n\n\t\tcontainer = new ParticleContainer(200000, [false, true, false, false, false]);\n\t\t_stage.addChild(container);\n\n\t\tvar bunny1 = new Texture(wabbitTexture.baseTexture, new Rectangle(2, 47, 26, 37));\n\t\tvar bunny2 = new Texture(wabbitTexture.baseTexture, new Rectangle(2, 86, 26, 37));\n\t\tvar bunny3 = new Texture(wabbitTexture.baseTexture, new Rectangle(2, 125, 26, 37));\n\t\tvar bunny4 = new Texture(wabbitTexture.baseTexture, new Rectangle(2, 164, 26, 37));\n\t\tvar bunny5 = new Texture(wabbitTexture.baseTexture, new Rectangle(2, 2, 26, 37));\n\n\t\tbunnyTextures = [bunny1, bunny2, bunny3, bunny4, bunny5];\n\t\tbunnyType = 2;\n\t\tcurrentTexture = bunnyTextures[bunnyType];\n\n\t\tfor (i in 0 ... startBunnyCount) {\n\t\t\tvar bunny = new Bunny(currentTexture);\n\t\t\tbunny.speedX = Math.random() * 10;\n\t\t\tbunny.speedY = (Math.random() * 10) - 5;\n\n\t\t\tbunny.anchor.x = 0.5;\n\t\t\tbunny.anchor.y = 1;\n\n\t\t\tbunnys.push(bunny);\n\t\t\tcontainer.addChild(bunny);\n\t\t}\n\n\t\t_renderer.view.onmousedown = onTouchStart;\n\t\t_renderer.view.onmouseup = onTouchEnd;\n\n\t\tBrowser.document.addEventListener(\"touchstart\", onTouchStart, true);\n\t\tBrowser.document.addEventListener(\"touchend\", onTouchEnd, true);\n\t}\n\n\tfunction onTouchStart(event) {\n\t\tisAdding = true;\n\t}\n\n\tfunction onTouchEnd(event) {\n\t\tbunnyType++;\n\t\tbunnyType %= 5;\n\t\tcurrentTexture = bunnyTextures[bunnyType];\n\n\t\tisAdding = false;\n\t}\n\n\tfunction _onUpdate(elapsedTime:Float) {\n\t\tif (isAdding) {\n\t\t\tif (count < 200000) {\n\n\t\t\t\tfor (i in 0 ... amount) {\n\t\t\t\t\tvar bunny = new Bunny(currentTexture);\n\t\t\t\t\tbunny.speedX = Math.random() * 10;\n\t\t\t\t\tbunny.speedY = (Math.random() * 10) - 5;\n\t\t\t\t\tbunny.anchor.y = 1;\n\t\t\t\t\t//bunny.alpha = 0.3 + Math.random() * 0.7;\n\t\t\t\t\tbunnys.push(bunny);\n\t\t\t\t\tbunny.scale.set(0.5 + Math.random() * 0.5, 0.5 + Math.random() * 0.5);\n\t\t\t\t\tbunny.rotation = (Math.random() - 0.5);\n\n\t\t\t\t\t//bunny.rotation = Math.random() - 0.5;\n\t\t\t\t\tvar random = Std.random(container.children.length - 2);\n\t\t\t\t\tcontainer.addChild(bunny);\n\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcounter.innerHTML = count + \" BUNNIES\";\n\t\t}\n\n\t\tfor (i in 0 ... bunnys.length) {\n\t\t\tvar bunny = bunnys[i];\n\t\t\t//bunny.rotation += 0.1\n\n\t\t\tbunny.position.x += bunny.speedX;\n\t\t\tbunny.position.y += bunny.speedY;\n\t\t\tbunny.speedY += gravity;\n\n\t\t\tif (bunny.position.x > maxX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = maxX;\n\t\t\t}\n\t\t\telse if (bunny.position.x < minX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = minX;\n\t\t\t}\n\n\t\t\tif (bunny.position.y > maxY) {\n\t\t\t\tbunny.speedY *= -0.85;\n\t\t\t\tbunny.position.y = maxY;\n\t\t\t\t//bunny.spin = (Math.random()-0.5) * 0.2\n\t\t\t\tif (Math.random() > 0.5) bunny.speedY -= Math.random() * 6;\n\t\t\t}\n\t\t\telse if (bunny.position.y < minY) {\n\t\t\t\tbunny.speedY = 0;\n\t\t\t\tbunny.position.y = minY;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _onResize() {\n\t\tmaxX = Browser.window.innerWidth;\n\t\tmaxY = Browser.window.innerHeight;\n\n\t\tcounter.style.top = \"1px\";\n\t\tcounter.style.left = \"1px\";\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class defines mathematical functions and constants.\n**/\n#if cpp @:include(\"hxMath\") #end\nextern class Math\n{\n\t/**\n\t\tRepresents the ratio of the circumference of a circle to its diameter, \n\t\tspecified by the constant, π. `PI` is approximately 3.141592653589793.\n\t**/\n\tstatic var PI(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of -1.0 / 0.0.\n\n\t\tOperations with NEGATIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var NEGATIVE_INFINITY(default, null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of 1.0 / 0.0.\n\n\t\tOperations with POSITIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var POSITIVE_INFINITY(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes an invalid number.\n\n\t\tNaN stands for \"Not a Number\". It occurs when a mathematically incorrect\n\t\toperation is executed, such as taking the square root of a negative\n\t\tnumber: Math.sqrt(-1).\n\n\t\tAll further operations with NaN as an operand will result in NaN.\n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\n\t\tIn order to test if a value is NaN, you should use Math.isNaN() function.\n\n\t\t@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected\n\t\tresults when performing arithmetic operations with NaN on Windows, \n\t\tsee [https://bugs.php.net/bug.php?id=42143]\n\t**/\n\tstatic var NaN(default, null) : Float;\n\n\t/**\n\t\tReturns the absolute value of `v`.\n\n\t\tIf `v` is positive or 0, the result is unchanged. Otherwise the result \n\t\tis -`v`.\n\t\t\n\t\tIf `v` is NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is \n\t\tPOSITIVE_INFINITY.\n\t\t\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function abs(v:Float):Float;\n\n\t/**\n\t\tReturns the smaller of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t\tIf `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t**/\n\tstatic function min(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the greater of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function max(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric sine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function sin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric cosine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function cos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric tangent of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function tan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function asin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc cosine of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function acos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function atan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent whose tangent is the quotient of \n\t\ttwo specified numbers, in radians.\n\t\t\n\t\tIf parameter `x` or `y`  is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is NaN.\n\t**/\n\tstatic function atan2(y:Float, x:Float):Float;\n\n\t/**\n\t\tReturns Euler's number, raised to the power of `v`.\n\t\t\n\t\texp(1.0) is approximately 2.718281828459.\n\t\t\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is NEGATIVE_INFINITY, the result is 0.0.\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function exp(v:Float):Float;\n\n\t/**\n\t\tReturns the natural logarithm of `v`.\n\t\t\n\t\tThis is the mathematical inverse operation of exp, \n\t\ti.e. `log(exp(v)) == v` always holds.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function log(v:Float):Float;\n\n\t/**\n\t\tReturns a specified base `v` raised to the specified power `exp`.\n\t**/\n\tstatic function pow(v:Float, exp:Float):Float;\n\n\t/**\n\t\tReturns the square root of `v`.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is 0.0.\n\t**/\n\tstatic function sqrt(v:Float):Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value.\n\t\t\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function round(v:Float):Int;\n\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function floor(v:Float):Int;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function ceil(v:Float):Int;\n\n\t/**\n\t\tReturns a pseudo-random number which is greater than or equal to 0.0, \n\t\tand less than 1.0.\n\t**/\n\tstatic function random() : Float;\n\n\t#if ((flash9 && !as3) || cpp)\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function ffloor( v : Float ) : Float;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fceil( v : Float ) : Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fround( v : Float ) : Float;\n\n\t#else\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t#end\n\n\n\t/**\n\t\tTells if `f` is a finite number.\n\n\t\tIf `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result \n\t\tis false, otherwise the result is true.\n\t**/\n\tstatic function isFinite( f : Float ) : Bool;\n\n\t/**\n\t\tTells if `f` is not a valid number.\n\n\t\tIf `f` is NaN, the result is true, otherwise the result is false. \n\t\tIn particular, both POSITIVE_INFINITY and NEGATIVE_INFINITY are\n\t\tnot considered NaN.\n\t**/\n\tstatic function isNaN( f : Float ) : Bool;\n\n\tprivate static function __init__() : Void untyped {\n\t#if flash9\n\t\tNaN = __global__[\"Number\"].NaN;\n\t\tNEGATIVE_INFINITY = __global__[\"Number\"].NEGATIVE_INFINITY;\n\t\tPOSITIVE_INFINITY = __global__[\"Number\"].POSITIVE_INFINITY;\n\t#else\n\t\t#if !js // genjs.ml will insert this only if necessary.\n\t\t\tMath.__name__ = [\"Math\"];\n\t\t#end\n\t\tMath.NaN = Number[\"NaN\"];\n\t\tMath.NEGATIVE_INFINITY = Number[\"NEGATIVE_INFINITY\"];\n\t\tMath.POSITIVE_INFINITY = Number[\"POSITIVE_INFINITY\"];\n\t#end\n\t#if js\n\t\t__feature__(\"Type.resolveClass\",$hxClasses['Math'] = Math);\n\t#end\n\t\tMath.isFinite = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isFinite\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isFinite\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isFinite\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t\tMath.isNaN = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isNaN\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isNaN\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isNaN\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t}\n\n}\n\n\n"],
"names":[],
"mappings":"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"
}