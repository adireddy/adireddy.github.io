{
"version":3,
"file":"textureswap.js",
"sourceRoot":"file:///",
"sources":["/projects/pixi-haxe/.haxelib/perf,js/1,1,8/src/Perf.hx","/usr/local/lib/haxe/std/js/_std/Reflect.hx","/projects/pixi-haxe/src/pixi/plugins/app/Application.hx","/projects/pixi-haxe/samples/textureswap/Main.hx"],
"sourcesContent":["import js.html.Performance;\nimport js.html.DivElement;\nimport js.Browser;\n\n@:expose class Perf {\n\n\tpublic static var MEASUREMENT_INTERVAL:Int = 1000;\n\n\tpublic static var FONT_FAMILY:String = \"Helvetica,Arial\";\n\n\tpublic static var FPS_BG_CLR:String = \"#00FF00\";\n\tpublic static var FPS_WARN_BG_CLR:String = \"#FF8000\";\n\tpublic static var FPS_PROB_BG_CLR:String = \"#FF0000\";\n\n\tpublic static var MS_BG_CLR:String = \"#FFFF00\";\n\tpublic static var MEM_BG_CLR:String = \"#086A87\";\n\tpublic static var INFO_BG_CLR:String = \"#00FFFF\";\n\tpublic static var FPS_TXT_CLR:String = \"#000000\";\n\tpublic static var MS_TXT_CLR:String = \"#000000\";\n\tpublic static var MEM_TXT_CLR:String = \"#FFFFFF\";\n\tpublic static var INFO_TXT_CLR:String = \"#000000\";\n\n\tpublic static var TOP_LEFT:String = \"TL\";\n\tpublic static var TOP_RIGHT:String = \"TR\";\n\tpublic static var BOTTOM_LEFT:String = \"BL\";\n\tpublic static var BOTTOM_RIGHT:String = \"BR\";\n\n\tstatic var DELAY_TIME:Int = 4000;\n\n\tpublic var fps:DivElement;\n\tpublic var ms:DivElement;\n\tpublic var memory:DivElement;\n\tpublic var info:DivElement;\n\n\tpublic var lowFps:Float;\n\tpublic var avgFps:Float;\n\tpublic var currentFps:Float;\n\tpublic var currentMs:Float;\n\tpublic var currentMem:String;\n\n\tvar _time:Float;\n\tvar _startTime:Float;\n\tvar _prevTime:Float;\n\tvar _ticks:Int;\n\tvar _fpsMin:Float;\n\tvar _fpsMax:Float;\n\tvar _memCheck:Bool;\n\tvar _pos:String;\n\tvar _offset:Float;\n\tvar _measureCount:Int;\n\tvar _totalFps:Float;\n\n\tvar _perfObj:Performance;\n\tvar _memoryObj:Memory;\n\tvar _raf:Int;\n\n\tvar RAF:Dynamic;\n\tvar CAF:Dynamic;\n\n\tpublic function new(?pos = \"TR\", ?offset:Float = 0) {\n\t\t_perfObj = Browser.window.performance;\n\t\tif (Reflect.field(_perfObj, \"memory\") != null) _memoryObj = Reflect.field(_perfObj, \"memory\");\n\t\t_memCheck = (_perfObj != null && _memoryObj != null && _memoryObj.totalJSHeapSize > 0);\n\n\t\t_pos = pos;\n\t\t_offset = offset;\n\n\t\t_init();\n\t\t_createFpsDom();\n\t\t_createMsDom();\n\t\tif (_memCheck) _createMemoryDom();\n\n\t\tif (Browser.window.requestAnimationFrame != null) RAF = Browser.window.requestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").mozRequestAnimationFrame != null) RAF = untyped __js__(\"window\").mozRequestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").webkitRequestAnimationFrame != null) RAF = untyped __js__(\"window\").webkitRequestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").msRequestAnimationFrame != null) RAF = untyped __js__(\"window\").msRequestAnimationFrame;\n\n\t\tif (Browser.window.cancelAnimationFrame != null) CAF = Browser.window.cancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").mozCancelAnimationFrame != null) CAF = untyped __js__(\"window\").mozCancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").webkitCancelAnimationFrame != null) CAF = untyped __js__(\"window\").webkitCancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").msCancelAnimationFrame != null) CAF = untyped __js__(\"window\").msCancelAnimationFrame;\n\n\t\tif (RAF != null) _raf = Reflect.callMethod(Browser.window, RAF, [_tick]);\n\t}\n\n\tinline function _init() {\n\t\tcurrentFps = 60;\n\t\tcurrentMs = 0;\n\t\tcurrentMem = \"0\";\n\n\t\tlowFps = 60;\n\t\tavgFps = 60;\n\n\t\t_measureCount = 0;\n\t\t_totalFps = 0;\n\t\t_time = 0;\n\t\t_ticks = 0;\n\t\t_fpsMin = 60;\n\t\t_fpsMax = 60;\n\t\t_startTime = _now();\n\t\t_prevTime = -MEASUREMENT_INTERVAL;\n\t}\n\n\tinline function _now():Float {\n\t\treturn (_perfObj != null && _perfObj.now != null) ? _perfObj.now() : Date.now().getTime();\n\t}\n\n\tfunction _tick(val:Float) {\n\t\tvar time = _now();\n\t\t_ticks++;\n\n\t\tif (_raf != null && time > _prevTime + MEASUREMENT_INTERVAL) {\n\t\t\tcurrentMs = Math.round(time - _startTime);\n\t\t\tms.innerHTML = \"MS: \" + currentMs;\n\n\t\t\tcurrentFps = Math.round((_ticks * 1000) / (time - _prevTime));\n\t\t\tif (currentFps > 0 && val > DELAY_TIME) {\n\t\t\t\t_measureCount++;\n\t\t\t\t_totalFps += currentFps;\n\t\t\t\tlowFps = _fpsMin = Math.min(_fpsMin, currentFps);\n\t\t\t\t_fpsMax = Math.max(_fpsMax, currentFps);\n\t\t\t\tavgFps = Math.round(_totalFps / _measureCount);\n\t\t\t}\n\n\t\t\tfps.innerHTML =  \"FPS: \" + currentFps + \" (\" + _fpsMin + \"-\" + _fpsMax + \")\";\n\n\t\t\tif (currentFps >= 30) fps.style.backgroundColor = FPS_BG_CLR;\n\t\t\telse if (currentFps >= 15) fps.style.backgroundColor = FPS_WARN_BG_CLR;\n\t\t\telse fps.style.backgroundColor = FPS_PROB_BG_CLR;\n\n\t\t\t_prevTime = time;\n\t\t\t_ticks = 0;\n\n\t\t\tif (_memCheck) {\n\t\t\t\tcurrentMem = _getFormattedSize(_memoryObj.usedJSHeapSize, 2);\n\t\t\t\tmemory.innerHTML = \"MEM: \" + currentMem;\n\t\t\t}\n\t\t}\n\t\t_startTime =  time;\n\n\t\tif (_raf != null) _raf = Reflect.callMethod(Browser.window, RAF, [_tick]);\n\t}\n\n\tfunction _createDiv(id:String, ?top:Float = 0):DivElement {\n\t\tvar div:DivElement = Browser.document.createDivElement();\n\t\tdiv.id = id;\n\t\tdiv.className = id;\n\t\tdiv.style.position = \"absolute\";\n\n\t\tswitch (_pos) {\n\t\t\tcase \"TL\":\n\t\t\t\tdiv.style.left = _offset + \"px\";\n\t\t\t\tdiv.style.top = top + \"px\";\n\t\t\tcase \"TR\":\n\t\t\t\tdiv.style.right = _offset + \"px\";\n\t\t\t\tdiv.style.top = top + \"px\";\n\t\t\tcase \"BL\":\n\t\t\t\tdiv.style.left = _offset + \"px\";\n\t\t\t\tdiv.style.bottom = ((_memCheck) ? 48 : 32) - top + \"px\";\n\t\t\tcase \"BR\":\n\t\t\t\tdiv.style.right = _offset + \"px\";\n\t\t\t\tdiv.style.bottom = ((_memCheck) ? 48 : 32) - top + \"px\";\n\t\t}\n\n\t\tdiv.style.width = \"80px\";\n\t\tdiv.style.height = \"12px\";\n\t\tdiv.style.lineHeight = \"12px\";\n\t\tdiv.style.padding = \"2px\";\n\t\tdiv.style.fontFamily = FONT_FAMILY;\n\t\tdiv.style.fontSize = \"9px\";\n\t\tdiv.style.fontWeight = \"bold\";\n\t\tdiv.style.textAlign = \"center\";\n\t\tBrowser.document.body.appendChild(div);\n\t\treturn div;\n\t}\n\n\tfunction _createFpsDom() {\n\t\tfps = _createDiv(\"fps\");\n\t\tfps.style.backgroundColor = FPS_BG_CLR;\n\t\tfps.style.zIndex = \"995\";\n\t\tfps.style.color = FPS_TXT_CLR;\n\t\tfps.innerHTML = \"FPS: 0\";\n\t}\n\n\tfunction _createMsDom() {\n\t\tms = _createDiv(\"ms\", 16);\n\t\tms.style.backgroundColor = MS_BG_CLR;\n\t\tms.style.zIndex = \"996\";\n\t\tms.style.color = MS_TXT_CLR;\n\t\tms.innerHTML = \"MS: 0\";\n\t}\n\n\tfunction _createMemoryDom() {\n\t\tmemory = _createDiv(\"memory\", 32);\n\t\tmemory.style.backgroundColor = MEM_BG_CLR;\n\t\tmemory.style.color = MEM_TXT_CLR;\n\t\tmemory.style.zIndex = \"997\";\n\t\tmemory.innerHTML = \"MEM: 0\";\n\t}\n\n\tfunction _getFormattedSize(bytes:Float, ?frac:Int = 0):String {\n\t\tvar sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\t\tif (bytes == 0) return \"0\";\n\t\tvar precision = Math.pow(10, frac);\n\t\tvar i = Math.floor(Math.log(bytes) / Math.log(1024));\n\t\treturn Math.round(bytes * precision / Math.pow(1024, i)) / precision + \" \" + sizes[i];\n\t}\n\n\tpublic function addInfo(val:String) {\n\t\tinfo = _createDiv(\"info\", (_memCheck) ? 48 : 32);\n\t\tinfo.style.backgroundColor = INFO_BG_CLR;\n\t\tinfo.style.color = INFO_TXT_CLR;\n\t\tinfo.style.zIndex = \"998\";\n\t\tinfo.innerHTML = val;\n\t}\n\n\tpublic function clearInfo() {\n\t\tif (info != null) {\n\t\t\tBrowser.document.body.removeChild(info);\n\t\t\tinfo = null;\n\t\t}\n\t}\n\n\tpublic function destroy() {\n\t\t_cancelRAF();\n\t\t_perfObj = null;\n\t\t_memoryObj = null;\n\t\tif (fps != null) {\n\t\t\tBrowser.document.body.removeChild(fps);\n\t\t\tfps = null;\n\t\t}\n\t\tif (ms != null) {\n\t\t\tBrowser.document.body.removeChild(ms);\n\t\t\tms = null;\n\t\t}\n\t\tif (memory != null) {\n\t\t\tBrowser.document.body.removeChild(memory);\n\t\t\tmemory = null;\n\t\t}\n\t\tclearInfo();\n\t\t_init();\n\t}\n\n\tinline function _cancelRAF() {\n\t\tReflect.callMethod(Browser.window, CAF, [_raf]);\n\t\t_raf = null;\n\t}\n}\n\ntypedef Memory = {\n\tvar usedJSHeapSize:Float;\n\tvar totalJSHeapSize:Float;\n\tvar jsHeapSizeLimit:Float;\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\t@:pure\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","package pixi.plugins.app;\n\nimport pixi.core.renderers.SystemRenderer;\nimport js.html.Event;\nimport pixi.core.RenderOptions;\nimport pixi.core.display.Container;\nimport js.html.Element;\nimport js.html.CanvasElement;\nimport js.Browser;\n\n/**\n * Pixi Boilerplate Helper class that can be used by any application\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\nclass Application {\n\n\t/**\n     * Sets the pixel ratio of the application.\n     * default - 1\n     */\n\tpublic var pixelRatio:Float;\n\n\t/**\n\t * Width of the application.\n\t * default - Browser.window.innerWidth\n\t */\n\tpublic var width:Float;\n\n\t/**\n\t * Height of the application.\n\t * default - Browser.window.innerHeight\n\t */\n\tpublic var height:Float;\n\n\t/**\n\t * Position of canvas element\n\t * default - static\n\t */\n\tpublic var position:String;\n\n\t/**\n\t * Renderer transparency property.\n\t * default - false\n\t */\n\tpublic var transparent:Bool;\n\n\t/**\n\t * Graphics antialias property.\n\t * default - false\n\t */\n\tpublic var antialias:Bool;\n\n\t/**\n\t * Force FXAA shader antialias instead of native (faster).\n\t * default - false\n\t */\n\tpublic var forceFXAA:Bool;\n\n\t/**\n\t * Force round pixels.\n\t * default - false\n\t */\n\tpublic var roundPixels:Bool;\n\n\t/**\n\t * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n     * If the scene is NOT transparent Pixi will use a canvas sized fillRect operation every frame to set the canvas background color.\n     * If the scene is transparent Pixi will use clearRect to clear the canvas every frame.\n     * Disable this by setting this to false. For example if your game has a canvas filling background image you often don't need this set.\n\t * default - true\n\t */\n\tpublic var clearBeforeRender:Bool;\n\n\t/**\n\t * enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context\n\t * default - false\n\t */\n\tpublic var preserveDrawingBuffer:Bool;\n\n\t/**\n\t * Whether you want to resize the canvas and renderer on browser resize.\n\t * Should be set to false when custom width and height are used for the application.\n\t * default - true\n\t */\n\tpublic var autoResize:Bool;\n\n\t/**\n\t * Sets the background color of the stage.\n\t * default - 0xFFFFFF\n\t */\n\tpublic var backgroundColor:Int;\n\n\t/**\n\t * Update listener \tfunction\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/**\n\t * Window resize listener \tfunction\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/**\n\t * Canvas Element\n\t * Read-only\n\t */\n\tpublic var canvas(default, null):CanvasElement;\n\n\t/**\n\t * Renderer\n\t * Read-only\n\t */\n\tpublic var renderer(default, null):SystemRenderer;\n\n\t/**\n\t * Global Container.\n\t * Read-only\n\t */\n\tpublic var stage(default, null):Container;\n\n\t/**\n\t * Pixi Application\n\t * Read-only\n\t */\n\tpublic var app(default, null):pixi.core.Application;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tpublic static inline var POSITION_STATIC:String = \"static\";\n\tpublic static inline var POSITION_ABSOLUTE:String = \"absolute\";\n\tpublic static inline var POSITION_FIXED:String = \"fixed\";\n\tpublic static inline var POSITION_RELATIVE:String = \"relative\";\n\tpublic static inline var POSITION_INITIAL:String = \"initial\";\n\tpublic static inline var POSITION_INHERIT:String = \"inherit\";\n\n\tvar _frameCount:Int;\n\tvar _animationFrameId:Null<Int>;\n\n\tpublic function new() {\n\t\t_setDefaultValues();\n\t}\n\n\tinline function _setDefaultValues() {\n\t\t_animationFrameId = null;\n\t\tpixelRatio = 1;\n\t\tautoResize = true;\n\t\ttransparent = false;\n\t\tantialias = false;\n\t\tforceFXAA = false;\n\t\troundPixels = false;\n\t\tclearBeforeRender = true;\n\t\tpreserveDrawingBuffer = false;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tposition = \"static\";\n\t}\n\n\t/**\n\t * Starts pixi application setup using the properties set or default values\n\t * @param [rendererType] - Renderer type to use AUTO (default) | CANVAS | WEBGL\n\t * @param [stats] - Enable/disable stats for the application.\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder. \"libs/stats.min.js\" <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @param [parentDom] - By default canvas will be appended to body or it can be appended to custom element if passed\n\t */\n\n\tpublic function start(?rendererType:String = \"auto\", ?parentDom:Element, ?canvasElement:CanvasElement) {\n\t\tif (canvasElement == null) {\n\t\t\tcanvas = Browser.document.createCanvasElement();\n\t\t\tcanvas.style.width = width + \"px\";\n\t\t\tcanvas.style.height = height + \"px\";\n\t\t\tcanvas.style.position = position;\n\t\t}\n\t\telse canvas = canvasElement;\n\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\n\t\tvar renderingOptions:RenderOptions = {};\n\t\trenderingOptions.view = canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\t\trenderingOptions.antialias = antialias;\n\t\trenderingOptions.forceFXAA = forceFXAA;\n\t\trenderingOptions.autoResize = autoResize;\n\t\trenderingOptions.transparent = transparent;\n\t\trenderingOptions.clearBeforeRender = clearBeforeRender;\n\t\trenderingOptions.preserveDrawingBuffer = preserveDrawingBuffer;\n\t\trenderingOptions.roundPixels = roundPixels;\n\n\t\tswitch (rendererType) {\n\t\t\tcase CANVAS: app = new pixi.core.Application(width, height, renderingOptions, true);\n\t\t\tdefault: app = new pixi.core.Application(width, height, renderingOptions);\n\t\t}\n\n\t\tstage = app.stage;\n\t\trenderer = app.renderer;\n\n\t\tif (parentDom == null) Browser.document.body.appendChild(app.view);\n\t\telse parentDom.appendChild(app.view);\n\n\t\tapp.ticker.add(_onRequestAnimationFrame);\n\n\t\t#if stats addStats(); #end\n\t}\n\n\tpublic function pauseRendering() {\n\t\tapp.stop();\n\t}\n\n\tpublic function resumeRendering() {\n\t\tapp.start();\n\t}\n\n\t@:noCompletion function _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tapp.renderer.resize(width, height);\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\t@:noCompletion function _onRequestAnimationFrame() {\n\t\tif (onUpdate != null) onUpdate(app.ticker.deltaTime);\n\t}\n\n\tpublic function addStats() {\n\t\tif (untyped __js__(\"window\").Perf != null) {\n\t\t\tnew Perf().addInfo([\"UNKNOWN\", \"WEBGL\", \"CANVAS\"][app.renderer.type] + \" - \" + pixelRatio);\n\t\t}\n\t}\n}","package textureswap;\n\nimport js.Browser;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.textures.Texture;\nimport pixi.interaction.InteractionEvent;\nimport pixi.plugins.app.Application;\n\nclass Main extends Application {\n\n\tvar _texture1:Texture;\n\tvar _texture2:Texture;\n\n\tvar _bunny:Sprite;\n\tvar _swap:Bool;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_init();\n\t}\n\n\tfunction _init() {\n\t\tbackgroundColor = 0xE0E6F8;\n\t\tonUpdate = _onUpdate;\n\t\tsuper.start();\n\n\t\t_swap = false;\n\t\t_texture1 = Texture.fromImage(\"assets/bunnymark/bunny2.png\");\n\t\t_texture2 = Texture.fromImage(\"assets/bunnymark/bunny4.png\");\n\n\t\t_bunny = new Sprite(_texture1);\n\t\t_bunny.anchor.set(0.5);\n\t\t_bunny.scale.set(3);\n\t\t_bunny.position.set(Browser.window.innerWidth / 2, Browser.window.innerHeight / 2);\n\t\t_bunny.interactive = true;\n\t\t_bunny.on(\"click\", _onClick);\n\t\t_bunny.on(\"tap\", _onClick);\n\t\tstage.addChild(_bunny);\n\t}\n\n\tfunction _onClick(target:InteractionEvent) {\n\t\t_swap = !_swap;\n\t\t_bunny.texture = (_swap) ? _texture2 : _texture1;\n\t}\n\n\tfunction _onUpdate(elapsedTime:Float) {\n\t\t_bunny.rotation += 0.1;\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}"],
"names":[],
"mappings":";;;;;;;;iCA2DQ;AAAA;;;;;;CACN,gBAAW;CACX,EAAI,eAAc,cAAU,aAAa,MAAM;AAAA,oBAAa,cAAc,cAAU;;CACpF,iBAAY,AAAC,iBAAY,QAAQ,mBAAc,QAAQ,kCAA6B;CAEpF,YAAO;CACP,eAAU;CAEV;;;;;;;;;;;;;CACA;CACA;CACA,EAAI,iBAAW;AAAA;;CAEf,EAAI,mDAAwC,MAAM;AAAA,aAAM;QACnD,EAAY,oCAA6C,MAAM;AAAA,aAAc;QAC7E,EAAY,uCAAgD,MAAM;AAAA,aAAc;QAChF,EAAY,mCAA4C,MAAM;AAAA,aAAc;;CAEjF,EAAI,kDAAuC,MAAM;AAAA,aAAM;QAClD,EAAY,mCAA4C,MAAM;AAAA,aAAc;QAC5E,EAAY,sCAA+C,MAAM;AAAA,aAAc;QAC/E,EAAY,kCAA2C,MAAM;AAAA,aAAc;;CAEhF,EAAI,aAAO,MAAM;AAAA,cAAO,AAAmC,eAAnC,AAAmB,OAAqB,CAAC;;;;QAyBlE,cAA0B;AAAA,EACzB,WAAW;EACX;EAEA,EAAI,cAAQ,QAAQ,OAAO,iBAAY,2BAAsB;AAAA,GAC5D,iBAAY,WAAW,OAAO;GAC9B,oBAAe,SAAS;GAExB,kBAAa,WAAW,AAAC,cAAS,OAAQ,CAAC,OAAO;GAClD,EAAI,mBAAa,KAAK,MAAM,iBAAY;AAAA,IACvC;IACA,kBAAa;IACb,cAAS,eAAU,SAAS,aAAS;IACrC,eAAU,SAAS,aAAS;IAC5B,cAAS,WAAW,iBAAY;;GAGjC,qBAAiB,UAAU,kBAAa,OAAO,eAAU,MAAM,eAAU;GAEzE,EAAI,oBAAc,IAAI;AAAA,qCAA4B;UAC7C,EAAI,oBAAc,IAAI;AAAA,qCAA4B;UAClD;AAAA,qCAA4B;;GAEjC,iBAAY;GACZ,cAAS;GAET,EAAI,iBAAW;AAAA,IACd,kBAAa,uBAAkB,+BAA2B;IAC1D,wBAAmB,UAAU;;;EAG/B,kBAAc;EAEd,EAAI,cAAQ,MAAM;AAAA,eAAO,AAAmC,eAAnC,AAAmB,OAAqB,CAAC;;;cAGnE;AAAA;;;EACC,UAAqB;EACrB,SAAS;EACT,gBAAgB;EAChB,qBAAqB;EAEb;;OAOP;GACC,iBAAiB,eAAU;GAC3B,mBAAmB,CAAC,AAAC,iBAAa,KAAK,MAAM,MAAM;;OACpD;GACC,kBAAkB,eAAU;GAC5B,mBAAmB,CAAC,AAAC,iBAAa,KAAK,MAAM,MAAM;;OAXpD;GACC,iBAAiB,eAAU;GAC3B,gBAAgB,MAAM;;OACvB;GACC,kBAAkB,eAAU;GAC5B,gBAAgB,MAAM;;;EASxB,kBAAkB;EAClB,mBAAmB;EACnB,uBAAuB;EACvB,oBAAoB;EACpB,uBAAuB;EACvB,qBAAqB;EACrB,uBAAuB;EACvB,sBAAsB;EACtB,iCAAkC;EAClC,OAAO;;iBAGR,WAAyB;AAAA,EACxB,WAAM,gBAAW;EACjB,iCAA4B;EAC5B,wBAAmB;EACnB,uBAAkB;EAClB,qBAAgB;;gBAGjB,WAAwB;AAAA,EACvB,UAAK,gBAAW,KAAM;EACtB,gCAA2B;EAC3B,uBAAkB;EAClB,sBAAiB;EACjB,oBAAe;;oBAGhB,WAA4B;AAAA,EAC3B,cAAS,gBAAW,SAAU;EAC9B,oCAA+B;EAC/B,0BAAqB;EACrB,2BAAsB;EACtB,wBAAmB;;qBAGpB;AAAA;;;EACC,YAAY,CAAC,QAAS,KAAM,KAAM,KAAM;EACxC,EAAI,UAAS,GAAG;AAAA,UAAO;;EACvB,gBAAgB,SAAS,GAAI;EAC7B,QAAQ,WAAW,SAAS,SAAS,SAAS;EAC9C,OAAO,WAAW,QAAQ,YAAY,SAAS,KAAM,MAAM,YAAY,MAAM,MAAM;;WAG7E,cAA6B;AAAA,EACnC,YAAO,gBAAW,OAAQ,AAAC,iBAAa,KAAK;EAC7C,kCAA6B;EAC7B,wBAAmB;EACnB,yBAAoB;EACpB,sBAAiB;;;;gBCzLJ,kBACb;AAAA,KAAI;AAAA,SAAe,EAAE;;EAA4B,OAAO;;;mCCmHlD,WACN;AAAA;;;;;;;;;;;;;;;QA4BM;AAAA;;;EACN,EAAI,kBAAiB,MAAM;AAAA,GAC1B,cAAS;GACT,0BAAqB,aAAQ;GAC7B,2BAAsB,cAAS;GAC/B,6BAAwB;SAEpB;AAAA,iBAAS;;EAEd,EAAI,kBAAY;AAAA,qBAA0B;;EAE1C,uBAAqC;EACrC,wBAAwB;EACxB,mCAAmC;EACnC,8BAA8B;EAC9B,6BAA6B;EAC7B,6BAA6B;EAC7B,8BAA8B;EAC9B,+BAA+B;EAC/B,qCAAqC;EACrC,yCAAyC;EACzC,+BAA+B;EAE/B,EAAQ,uBAEE;AAAA,cAAM,qBAA0B,WAAO,YAAQ;SAFjD,mBACP,UAAa;AAAA,cAAM,qBAA0B,WAAO,YAAQ,iBAAkB;SACrE;AAAA,cAAM,qBAA0B,WAAO,YAAQ;;EAGzD,aAAQ;EACR,gBAAW;EAEX,EAAI,cAAa,MAAM;AAAA,oCAAkC;SACpD;AAAA,yBAAsB;;EAE3B,oBAAe;EAEL;;mBAWI,gBAAsC;AAAA,EACpD,aAAQ;EACR,cAAS;EACT,yBAAoB,WAAO;EAC3B,0BAAqB,aAAQ;EAC7B,2BAAsB,cAAS;EAE/B,EAAI,kBAAY,MAAM;AAAA;;;4BAGR,WACd;AAAA,IAAI,kBAAY,MAAM;AAAA,iBAAS;;;YAGzB,WACN;AAAA,IAAY,gBAAyB,MACpC;AAAA,sBAAmB,CAAC,UAAW,QAAS,UAAU,0BAAqB,QAAQ;;;;uBC5N1E,WAAe;AAAA,CACrB;CACA;;wBA+BM,WACN;AAAA;;;;QA7BD,WAAiB;AAAA,EAChB,uBAAkB;EAClB,gBAAW;EACX;EAEA,aAAQ;EACR,iBAAY,uBAAkB;EAC9B,iBAAY,uBAAkB;EAE9B,cAAS,gBAAW;EACpB,uBAAkB;EAClB,sBAAiB;EACjB,yBAAoB,oBAA4B,EAAG,qBAA6B;EAChF,0BAAqB;EACrB,eAAU,QAAS;EACnB,eAAU,MAAO;EACjB,oBAAe;;YAGhB,iBAA2C;AAAA,EAC1C,aAAQ,CAAC;EACT,sBAAiB,AAAC,aAAS,iBAAY;;aAGxC,sBACC;AAAA,0BAAmB;;;;;4BHxCyB;mBAEN;kBAED;uBACK;uBACA;iBAEN;kBACC;mBACC;mBACA;kBACD;mBACC;oBACC;kBAOZ;;;;"
}