{
"version":3,
"file":"rope.js",
"sourceRoot":"file:///",
"sources":["/haxe/pixi-haxe/pixi/plugins/app/Application.hx","/haxe/pixi-haxe/samples/rope/Main.hx"],
"sourcesContent":["package pixi.plugins.app;\n\nimport js.html.Element;\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.core.renderers.canvas.CanvasRenderer;\nimport pixi.core.renderers.SystemRenderer;\nimport pixi.plugins.stats.Stats;\nimport pixi.core.renderers.Detector;\nimport pixi.core.display.Container;\nimport js.html.Event;\nimport js.html.CanvasElement;\nimport js.Browser;\n\n/**\n * Pixi Boilerplate Helper class that can be used by any application\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\nclass Application {\n\n\t/**\n     * Sets the pixel ratio of the application.\n     * default - 1\n     */\n\tpublic var pixelRatio:Float;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to true to get 30 FPS.\n\t * default - false\n\t */\n\tpublic var skipFrame(default, set):Bool;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to anything between 1 - 60.\n\t * default - 60\n\t */\n\tpublic var fps(default, set):Int;\n\n\t/**\n\t * Width of the application.\n\t * default - Browser.window.innerWidth\n\t */\n\tpublic var width:Float;\n\n\t/**\n\t * Height of the application.\n\t * default - Browser.window.innerHeight\n\t */\n\tpublic var height:Float;\n\n\t/**\n\t * Renderer transparency property.\n\t * default - false\n\t */\n\tpublic var transparent:Bool;\n\n\t/**\n\t * Graphics antialias property.\n\t * default - false\n\t */\n\tpublic var antialias:Bool;\n\n\t/**\n\t * Force FXAA shader antialias instead of native (faster)\n\t * default - false\n\t */\n\tpublic var forceFXAA:Bool;\n\n\t/**\n\t * Whether you want to resize the canvas and renderer on browser resize.\n\t * Should be set to false when custom width and height are used for the application.\n\t * default - true\n\t */\n\tpublic var autoResize:Bool;\n\n\t/**\n\t * Sets the background color of the stage.\n\t * default - 0xFFFFFF\n\t */\n\tpublic var backgroundColor:Int;\n\n\t/**\n\t * Update listener \tfunction\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/**\n\t * Window resize listener \tfunction\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/**\n\t * Global Container.\n\t * Read-only\n\t */\n\tpublic var stage(default, null):Container;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tvar _canvas:CanvasElement;\n\tvar _renderer:SystemRenderer;\n\tvar _stats:Stats;\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\tvar _elapsedTime:Float;\n\n\tvar _frameCount:Int;\n\n\tpublic function new() {\n\t\t_lastTime = Date.now();\n\t\t_setDefaultValues();\n\t}\n\n\tfunction set_fps(val:Int):Int {\n\t\t_frameCount = 0;\n\t\treturn fps = (val >= 1 && val < 60) ? Std.int(val) : 60;\n\t}\n\n\tfunction set_skipFrame(val:Bool):Bool {\n\t\tif (val) {\n\t\t\ttrace(\"pixi.plugins.app.Application > Deprecated: skipFrame - use fps property and set it to 30 instead\");\n\t\t\tfps = 30;\n\t\t}\n\t\treturn skipFrame = val;\n\t}\n\n\tfunction _setDefaultValues() {\n\t\tpixelRatio = 1;\n\t\tskipFrame = false;\n\t\tautoResize = true;\n\t\ttransparent = false;\n\t\tantialias = false;\n\t\tforceFXAA = false;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tfps = 60;\n\t}\n\n\t/**\n\t * Starts pixi application setup using the properties set or default values\n\t * @param [renderer] - Renderer type to use AUTO (default) | CANVAS | WEBGL\n\t * @param [stats] - Enable/disable stats for the application.\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder. \"libs/stats.min.js\" <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @param [parentDom] - By default canvas will be appended to body or it can be appended to custom element if passed\n\t */\n\tpublic function start(?renderer:String = AUTO, ?stats:Bool = true, ?parentDom:Element) {\n\t\t_canvas = Browser.document.createCanvasElement();\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\t\t_canvas.style.position = \"absolute\";\n\t\tif (parentDom == null) Browser.document.body.appendChild(_canvas);\n\t\telse parentDom.appendChild(_canvas);\n\n\t\tstage = new Container();\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = _canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\t\trenderingOptions.antialias = antialias;\n\t\trenderingOptions.forceFXAA = forceFXAA;\n\t\trenderingOptions.autoResize = autoResize;\n\t\trenderingOptions.transparent = transparent;\n\n\t\tif (renderer == AUTO) _renderer = Detector.autoDetectRenderer(width, height, renderingOptions);\n\t\telse if (renderer == CANVAS) _renderer = new CanvasRenderer(width, height, renderingOptions);\n\t\telse _renderer = new WebGLRenderer(width, height, renderingOptions);\n\n\t\tBrowser.document.body.appendChild(_renderer.view);\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\t_lastTime = Date.now();\n\n\t\tif (stats) _addStats();\n\t}\n\n\t@:noCompletion function _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\t_renderer.resize(width, height);\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\n\t\tif (_stats != null) {\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t}\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\t@:noCompletion function _onRequestAnimationFrame() {\n\t\t_frameCount++;\n\t\tif (_frameCount == Std.int(60 / fps)) {\n\t\t\t_frameCount = 0;\n\t\t\t_calculateElapsedTime();\n\t\t\tif (onUpdate != null) onUpdate(_elapsedTime);\n\t\t\t_renderer.render(stage);\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\tif (_stats != null) _stats.update();\n\t}\n\n\t@:noCompletion function _calculateElapsedTime() {\n\t\t_currentTime = Date.now();\n\t\t_elapsedTime = _currentTime.getTime() - _lastTime.getTime();\n\t\t_lastTime = _currentTime;\n\t}\n\n\t@:noCompletion function _addStats() {\n\t\tif (untyped __js__(\"window\").Stats != null) {\n\t\t\tvar _container = Browser.document.createElement(\"div\");\n\t\t\tBrowser.document.body.appendChild(_container);\n\t\t\t_stats = new Stats();\n\t\t\t_stats.domElement.style.position = \"absolute\";\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t\t_container.appendChild(_stats.domElement);\n\t\t\t_stats.begin();\n\t\t}\n\t}\n}\n","package samples.rope;\n\nimport pixi.mesh.Rope;\nimport pixi.core.display.Container;\nimport pixi.core.math.Point;\nimport pixi.plugins.app.Application;\nimport pixi.core.textures.Texture;\nimport pixi.plugins.app.Application;\n\nclass Main extends Application {\n\n\tvar _count:Float;\n\tvar _points:Array<Point>;\n\tvar _length:Float;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_init();\n\t}\n\n\tfunction _init() {\n\t\tbackgroundColor = 0xFFFFFF;\n\t\tonUpdate = _onUpdate;\n\t\tsuper.start(Application.AUTO);\n\n\t\t_count = 0;\n\t\t_points = [];\n\t\t_length = 918 / 20;\n\n\t\tfor (i in 0 ... 20) {\n\t\t\tvar segSize = _length;\n\t\t\t_points.push(new Point(i * _length, 0));\n\t\t};\n\n\t\tvar strip = new Rope(Texture.fromImage(\"assets/rope/snake.png\"), _points);\n\t\tstrip.x = -918 / 2;\n\n\t\tvar snakeContainer:Container = new Container();\n\t\tsnakeContainer.position.x = width / 2;\n\t\tsnakeContainer.position.y = height / 2;\n\n\t\tsnakeContainer.scale.x = width / 1100;\n\t\tstage.addChild(snakeContainer);\n\n\t\tsnakeContainer.addChild(strip);\n\t}\n\n\tfunction _onUpdate(elapsedTime:Float) {\n\t\t_count += 0.1;\n\n\t\tfor (i in 0 ... _points.length) {\n\t\t\t_points[i].y = Math.sin(i * 0.5 + _count) * 30;\n\t\t\t_points[i].x = i * _length + Math.cos(i * 0.3 + _count) * 20;\n\t\t}\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}"],
"names":[],
"mappings":";;;;;;;+BAiHO,pBAAe;CACrB,EAAY;CACZ;;;SAGD,KAA8B;EAC7B,CAAc;EACd,KAAa,AAAC,HAAO,AAAK,DAAM,FAAzB,EAA+B,AAAQ,AAAR,FAA/B,EAA8C;;eAGtD,DAAsC;EACrC,AAAI,DAAK;GACR,SAAM;GACN,FAAM;;EAEP,KAAO,JAAY;;mBAGpB,RAA6B;EAC5B,CAAa;EACb,DAAY;EACZ,CAAa;EACb,CAAc;EACd,CAAY;EACZ,CAAY;EACZ,CAAkB;EAClB,CAAQ;EACR,CAAS;EACT,DAAM;;OAWA;;;EACI;EAAV,CAAU;EACV,CAAsB,AAAQ;EAC9B,CAAuB,AAAS;EAChC,CAAyB;EACzB,AAAI,EAAa,HAAM,AAAkC,KACpD,LAAsB;EAE3B,CAAQ;EAEgC;EACxC,CAAwB;EACxB,CAAmC;EACnC,CAA8B;EAC9B,CAA6B;EAC7B,CAA6B;EAC7B,CAA8B;EAC9B,CAA+B;EAE/B,AAAI,EAAY,HAAM,EAAY,FAA4B,AAAO,AAAQ,KACxE,JAAI,EAAY,HAAQ,EAAY,iBAAmB,nBAAO,AAAQ,KACtE,HAAY,gBAAkB,lBAAO,AAAQ;EAElD,DAAkC;EAClC,AAAI,DAAY,EAA0B;EAC1C,DAAqC,AAAK;EAC1C,CAAY;EAEZ,AAAI,DAAO;;iBAGG,DAAsC;EACpD,CAAQ;EACR,CAAS;EACT,DAAiB,AAAO;EACxB,CAAsB,AAAQ;EAC9B,CAAuB,AAAS;EAEhC,AAAI,EAAU,HAAM;GACnB,AAA8B;GAC9B,AAAgC;;EAGjC,AAAI,EAAY,HAAM;;0BAGR,fAAoC;EAClD;EACA,AAAI,EAAe,HAAQ,EAAK,AAAb,FAAmB;GACrC,AAAc;GACd;GACA,DAAI,EAAY,HAAM,AAAS;GAC/B,FAAiB;;EAElB,DAAqC,AAAK;EAC1C,AAAI,EAAU,HAAM;;uBAGN,ZAAiC;EAC/C,CAAe;EACf,CAAe,AAAyB;EACxC,CAAY;;WAGE,AACd;EAAY,EAA0B,HAAM;GAC1B,FAA+B;GAChD,FAAkC;GAClC,AAAS;GACT,AAAmC;GACnC,AAA8B;GAC9B,AAAgC;GAChC,FAAuB;GACvB;;;;oBClNK,TAAe;CACrB;CACA;;yBAuCM,dACN;;;;;OArCD,IAAiB;EAChB,CAAkB;EAClB,CAAW;EACX,DAAY;EAEZ,CAAS;EACT,CAAU;EACV,CAAU;EAEA;EAAV,CAAgB,FAAI;GAApB;GACe;GACd,FAAa,UAAU,RAAI,FAAS;;EAGzB,aAAS,dAAkB,AAA0B;EACjE,CAAU;EAEqB;EAC/B,CAA4B,AAAQ;EACpC,CAA4B,AAAS;EAErC,CAAyB,AAAQ;EACjC,DAAe;EAEf,DAAwB;;WAGzB,WAAsC;EACrC,EAAU;EAEA;EAAM;EAAhB,DAAgC;GAAhC;GACC,FAAQ,EAAO,FAAS,EAAI,AAAM,AAAU;GAC5C,FAAQ,EAAO,AAAI,AAAU,FAAS,EAAI,AAAM,AAAU;;;;;;;;;"
}