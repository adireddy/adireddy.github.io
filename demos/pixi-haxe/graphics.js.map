{
"version":3,
"file":"graphics.js",
"sourceRoot":"file:///",
"sources":["/usr/lib/haxe/std/js/_std/Std.hx","/haxe/pixi-haxe/pixi/plugins/app/Application.hx","/haxe/pixi-haxe/samples/graphics/Main.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","package pixi.plugins.app;\n\nimport js.html.Element;\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.core.renderers.canvas.CanvasRenderer;\nimport pixi.core.renderers.SystemRenderer;\nimport pixi.plugins.stats.Stats;\nimport pixi.core.renderers.Detector;\nimport pixi.core.display.Container;\nimport js.html.Event;\nimport js.html.CanvasElement;\nimport js.Browser;\n\n/**\n * Pixi Boilerplate Helper class that can be used by any application\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\nclass Application {\n\n\t/**\n     * Sets the pixel ratio of the application.\n     * default - 1\n     */\n\tpublic var pixelRatio(null, default):Float;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to true to get 30 FPS.\n\t * default - false\n\t */\n\tpublic var skipFrame(null, default):Bool;\n\n\t/**\n\t * Width of the application.\n\t * default - Browser.window.innerWidth\n\t */\n\tpublic var width(null, default):Float;\n\n\t/**\n\t * Height of the application.\n\t * default - Browser.window.innerHeight\n\t */\n\tpublic var height(null, default):Float;\n\n\t/**\n\t * Renderer transparency property.\n\t * default - false\n\t */\n\tpublic var transparent(null, default):Bool;\n\n\t/**\n\t * Graphics antialias property.\n\t * default - false\n\t */\n\tpublic var antialias(null, default):Bool;\n\n\t/**\n\t * Force FXAA shader antialias instead of native (faster)\n\t * default - false\n\t */\n\tpublic var forceFXAA(null, default):Bool;\n\n\t/**\n\t * Whether you want to resize the canvas and renderer on browser resize.\n\t * Should be set to false when custom width and height are used for the application.\n\t * default - true\n\t */\n\tpublic var autoResize(null, default):Bool;\n\n\t/**\n\t * Sets the background color of the stage.\n\t * default - 0xFFFFFF\n\t */\n\tpublic var backgroundColor(null, default):Int;\n\n\t/**\n\t * Update listener \tfunction\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/**\n\t * Window resize listener \tfunction\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/**\n\t * Global Container.\n\t * Read-only\n\t */\n\tvar _stage(default, null):Container;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tvar _canvas:CanvasElement;\n\tvar _renderer:SystemRenderer;\n\tvar _stats:Stats;\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\tvar _elapsedTime:Float;\n\tvar _skipFrame:Bool;\n\n\tpublic function new() {\n\t\t_lastTime = Date.now();\n\t\t_setDefaultValues();\n\t}\n\n\tfunction _setDefaultValues() {\n\t\tpixelRatio = 1;\n\t\tskipFrame = false;\n\t\tautoResize = true;\n\t\ttransparent = false;\n\t\tantialias = false;\n\t\tforceFXAA = false;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\t_skipFrame = false;\n\t}\n\n\t/**\n\t * Starts pixi application setup using the properties set or default values\n\t * @param [renderer] - Renderer type to use AUTO (default) | CANVAS | WEBGL\n\t * @param [stats] - Enable/disable stats for the application.\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder. \"libs/stats.min.js\" <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @param [parentDom] - By default canvas will be appended to body or it can be appended to custom element if passed\n\t */\n\n\tpublic function start(?renderer:String = AUTO, ?stats:Bool = true, ?parentDom:Element) {\n\t\t_canvas = Browser.document.createCanvasElement();\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\t\t_canvas.style.position = \"absolute\";\n\t\tif (parentDom == null) Browser.document.body.appendChild(_canvas);\n\t\telse parentDom.appendChild(_canvas);\n\n\t\t_stage = new Container();\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = _canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\t\trenderingOptions.antialias = antialias;\n\t\trenderingOptions.forceFXAA = forceFXAA;\n\t\trenderingOptions.autoResize = autoResize;\n\t\trenderingOptions.transparent = transparent;\n\n\t\tif (renderer == AUTO) _renderer = Detector.autoDetectRenderer(width, height, renderingOptions);\n\t\telse if (renderer == CANVAS) _renderer = new CanvasRenderer(width, height, renderingOptions);\n\t\telse _renderer = new WebGLRenderer(width, height, renderingOptions);\n\n\t\tBrowser.document.body.appendChild(_renderer.view);\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\t_lastTime = Date.now();\n\n\t\tif (stats) _addStats();\n\t}\n\n\t@:noCompletion function _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\t_renderer.resize(width, height);\n\t\t_canvas.style.width = width + \"px\";\n\t\t_canvas.style.height = height + \"px\";\n\n\t\tif (_stats != null) {\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t}\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\t@:noCompletion function _onRequestAnimationFrame() {\n\t\tif (skipFrame && _skipFrame) _skipFrame = false;\n\t\telse {\n\t\t\t_skipFrame = true;\n\t\t\t_calculateElapsedTime();\n\t\t\tif (onUpdate != null) onUpdate(_elapsedTime);\n\t\t\t_renderer.render(_stage);\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\tif (_stats != null) _stats.update();\n\t}\n\n\t@:noCompletion function _calculateElapsedTime() {\n\t\t_currentTime = Date.now();\n\t\t_elapsedTime = _currentTime.getTime() - _lastTime.getTime();\n\t\t_lastTime = _currentTime;\n\t}\n\n\t@:noCompletion function _addStats() {\n\t\tif (untyped __js__(\"window\").Stats != null) {\n\t\t\tvar _container = Browser.document.createElement(\"div\");\n\t\t\tBrowser.document.body.appendChild(_container);\n\t\t\t_stats = new Stats();\n\t\t\t_stats.domElement.style.position = \"absolute\";\n\t\t\t_stats.domElement.style.top = \"2px\";\n\t\t\t_stats.domElement.style.right = \"2px\";\n\t\t\t_container.appendChild(_stats.domElement);\n\t\t\t_stats.begin();\n\t\t}\n\t}\n}","package samples.graphics;\n\nimport pixi.interaction.EventTarget;\nimport pixi.core.graphics.Graphics;\nimport pixi.plugins.app.Application;\nimport js.Browser;\n\nclass Main extends Application {\n\n\tvar _graphics:Graphics;\n\tvar _thing:Graphics;\n\tvar _count:Float;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_init();\n\t}\n\n\tfunction _init() {\n\t\tbackgroundColor = 0x000000;\n\t\tantialias = true;\n\t\tonUpdate = _onUpdate;\n\t\tsuper.start();\n\n\t\t_graphics = new Graphics();\n\t\t_graphics.beginFill(0xFF3300);\n\t\t_graphics.lineStyle(10, 0xffd900, 1);\n\n\t\t_graphics.moveTo(50, 50);\n\t\t_graphics.lineTo(250, 50);\n\t\t_graphics.lineTo(100, 100);\n\t\t_graphics.lineTo(250, 220);\n\t\t_graphics.lineTo(50, 220);\n\t\t_graphics.lineTo(50, 50);\n\t\t_graphics.endFill();\n\n\t\t_graphics.lineStyle(10, 0xFF0000, 0.8);\n\t\t_graphics.beginFill(0xFF700B, 1);\n\n\t\t_graphics.moveTo(210, 300);\n\t\t_graphics.lineTo(450, 320);\n\t\t_graphics.lineTo(570, 350);\n\t\t_graphics.lineTo(580, 20);\n\t\t_graphics.lineTo(330, 120);\n\t\t_graphics.lineTo(410, 200);\n\t\t_graphics.lineTo(210, 300);\n\t\t_graphics.endFill();\n\n\t\t_graphics.lineStyle(2, 0x0000FF, 1);\n\t\t_graphics.drawRect(50, 250, 100, 100);\n\n\t\t_graphics.lineStyle(0);\n\t\t_graphics.beginFill(0xFFFF0B, 0.5);\n\t\t_graphics.drawCircle(470, 200, 100);\n\n\t\t_graphics.lineStyle(20, 0x33FF00);\n\t\t_graphics.moveTo(30, 30);\n\t\t_graphics.lineTo(600, 300);\n\n\t\t_stage.addChild(_graphics);\n\n\t\t_thing = new Graphics();\n\t\t_stage.addChild(_thing);\n\t\t_thing.position.x = Browser.window.innerWidth / 2;\n\t\t_thing.position.y = Browser.window.innerHeight / 2;\n\n\t\t_count = 0;\n\n\t\t_stage.interactive = true;\n\t\t_stage.on(\"click\", _onStageClick);\n\t\t_stage.on(\"tap\", _onStageClick);\n\t}\n\n\tfunction _onUpdate(elapsedTime:Float) {\n\t\t_count += 0.1;\n\n\t\t_thing.clear();\n\t\t_thing.lineStyle(30, 0xFF0000, 1);\n\t\t_thing.beginFill(0xFF0000, 0.5);\n\n\t\t_thing.moveTo(-120 + Math.sin(_count) * 20, -100 + Math.cos(_count) * 20);\n\t\t_thing.lineTo(120 + Math.cos(_count) * 20, -100 + Math.sin(_count) * 20);\n\t\t_thing.lineTo(120 + Math.sin(_count) * 20, 100 + Math.cos(_count) * 20);\n\t\t_thing.lineTo(-120 + Math.cos(_count) * 20, 100 + Math.sin(_count) * 20);\n\t\t_thing.lineTo(-120 + Math.sin(_count) * 20, -100 + Math.cos(_count) * 20);\n\n\t\t_thing.rotation = _count * 0.1;\n\t}\n\n\tfunction _onStageClick(target:EventTarget) {\n\t\t_graphics.lineStyle(Math.random() * 30, Std.int(Math.random() * 0xFFFFFF), 1);\n\t\t_graphics.moveTo(Math.random() * 620, Math.random() * 380);\n\t\t_graphics.lineTo(Math.random() * 620, Math.random() * 380);\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}"],
"names":[],
"mappings":"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"
}