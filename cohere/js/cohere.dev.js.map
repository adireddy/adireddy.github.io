{
"version":3,
"file":"cohere.dev.js",
"sourceRoot":"file:///",
"sources":["/haxe/cohere/utils/AssetsList.hx","/haxe/cohere/.haxelib/compiletime/2,5,1/src/CompileTimeClassList.hx","/usr/lib/haxe/std/js/_std/EReg.hx","/usr/lib/haxe/std/js/_std/HxOverrides.hx","/haxe/cohere/utils/JConsole.hx","/usr/lib/haxe/std/List.hx","/usr/lib/haxe/std/js/_std/Reflect.hx","/usr/lib/haxe/std/js/_std/Std.hx","/usr/lib/haxe/std/js/_std/Type.hx","/haxe/cohere/.haxelib/pixijs/3,0,25/pixi/plugins/app/Application.hx","/haxe/cohere/src/arm/cohere/Main.hx","/haxe/cohere/src/arm/cohere/core/components/ComponentController.hx","/haxe/cohere/src/arm/cohere/components/bitmapfont/BitmapfontController.hx","/haxe/cohere/.haxelib/bindx2/2,5,2/src/bindx/macro/BindSignalProvider.hx","/haxe/cohere/src/arm/cohere/core/components/ComponentView.hx","/haxe/cohere/src/arm/cohere/components/bitmapfont/BitmapfontView.hx","/haxe/cohere/src/arm/cohere/components/bunnymark/Bunny.hx","/haxe/cohere/src/arm/cohere/components/bunnymark/BunnymarkController.hx","/haxe/cohere/src/arm/cohere/components/bunnymark/BunnymarkView.hx","/haxe/cohere/src/arm/cohere/components/menu/MenuController.hx","/haxe/cohere/src/arm/cohere/components/menu/MenuView.hx","/haxe/cohere/src/arm/cohere/components/preloader/PreloaderController.hx","/haxe/cohere/src/arm/cohere/components/preloader/PreloaderView.hx","/haxe/cohere/src/arm/cohere/components/retina/RetinaController.hx","/haxe/cohere/src/arm/cohere/components/retina/RetinaView.hx","/haxe/cohere/src/arm/cohere/components/spritesheet/SpritesheetController.hx","/haxe/cohere/src/arm/cohere/components/spritesheet/SpritesheetView.hx","/haxe/cohere/src/arm/cohere/controller/Controller.hx","/haxe/cohere/.haxelib/compiletime/2,5,1/src/CompileTime.hx","/haxe/cohere/src/arm/cohere/core/components/ComponentModel.hx","/haxe/cohere/src/arm/cohere/core/loader/AssetLoader.hx","/haxe/cohere/src/arm/cohere/core/loader/AudioAsset.hx","/haxe/cohere/src/arm/cohere/core/loader/MultipackParser.hx","/haxe/cohere/src/arm/cohere/core/utils/BrowserUtils.hx","/haxe/cohere/src/arm/cohere/core/utils/StageProperties.hx","/haxe/cohere/src/arm/cohere/model/Model.hx","/haxe/cohere/.haxelib/bindx2/2,5,2/src/bindx/macro/BindableMacros.hx","/haxe/cohere/src/arm/cohere/view/View.hx","/haxe/cohere/.haxelib/bindx2/2,5,2/src/bindx/BindSignal.hx","/usr/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/usr/lib/haxe/std/haxe/rtti/Meta.hx","/usr/lib/haxe/std/js/Boot.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/ClassMap.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/InjectionConfig.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/Injector.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/MethodInjectionPoint.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/ConstructorInjectionPoint.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/NoParamsConstructorInjectionPoint.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/PostConstructInjectionPoint.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/PropertyInjectionPoint.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/result/InjectionResult.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/result/InjectValueResult.hx","/haxe/cohere/.haxelib/msignal/1,2,2/msignal/Signal.hx","/haxe/cohere/.haxelib/msignal/1,2,2/msignal/Slot.hx","/haxe/cohere/.haxelib/msignal/1,2,2/msignal/SlotList.hx","/usr/lib/haxe/std/js/_std/Math.hx","/haxe/cohere/.haxelib/bindx2/2,5,2/src/bindx/IBindable.hx","/usr/lib/haxe/std/haxe/Constraints.hx","/haxe/cohere/.haxelib/minject/1,6,1/minject/point/InjectionPoint.hx"],
"sourcesContent":["class AssetsList {\n\n\tstatic var LIST:Array<String> = [\"resources/sounds/loop.mp3\",\n\t\t\t\"resources/sounds/sound1.wav\",\n\t\t\t\"resources/sounds/sound2.wav\",\n\t\t\t\"resources/sounds/sound3.wav\",\n\t\t\t\"resources/sounds/sound4.wav\",\n\t\t\t\"resources/@1x/alphamask/bkg.jpg\",\n\t\t\t\"resources/@1x/alphamask/cells.png\",\n\t\t\t\"resources/@1x/alphamask/flowerTop.png\",\n\t\t\t\"resources/@1x/bunnymark/.DS_Store\",\n\t\t\t\"resources/@1x/bunnymark/bunny1.png\",\n\t\t\t\"resources/@1x/bunnymark/bunny2.png\",\n\t\t\t\"resources/@1x/bunnymark/bunny3.png\",\n\t\t\t\"resources/@1x/bunnymark/bunny4.png\",\n\t\t\t\"resources/@1x/bunnymark/bunny5.png\",\n\t\t\t\"resources/@1x/common/button.png\",\n\t\t\t\"resources/@1x/filters/BGrotate.jpg\",\n\t\t\t\"resources/@1x/filters/depth_blur_BG.jpg\",\n\t\t\t\"resources/@1x/filters/depth_blur_dudes.jpg\",\n\t\t\t\"resources/@1x/filters/depth_blur_moby.jpg\",\n\t\t\t\"resources/@1x/filters/LightRotate1.png\",\n\t\t\t\"resources/@1x/filters/LightRotate2.png\",\n\t\t\t\"resources/@1x/filters/panda.png\",\n\t\t\t\"resources/@1x/filters/SceneRotate.jpg\",\n\t\t\t\"resources/@1x/fonts/desyrel.png\",\n\t\t\t\"resources/@1x/fonts/desyrel.ttf\",\n\t\t\t\"resources/@1x/fonts/desyrel.xml\",\n\t\t\t\"resources/@1x/graphics/spinObj_01.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_02.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_03.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_04.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_05.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_06.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_07.png\",\n\t\t\t\"resources/@1x/graphics/spinObj_08.png\",\n\t\t\t\"resources/@1x/movieclip/.DS_Store\",\n\t\t\t\"resources/@1x/movieclip/SpriteSheet.json\",\n\t\t\t\"resources/@1x/movieclip/SpriteSheet.png\",\n\t\t\t\"resources/@1x/nape/ball.png\",\n\t\t\t\"resources/@1x/preloader/logo.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_01.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_02.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_03.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_04.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_05.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_06.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_07.png\",\n\t\t\t\"resources/@1x/rendertexture/spinObj_08.png\",\n\t\t\t\"resources/@1x/retina/img.jpg\",\n\t\t\t\"resources/@1x/rope/snake.png\",\n\t\t\t\"resources/@1x/spine/.DS_Store\",\n\t\t\t\"resources/@1x/spine/dragon.atlas\",\n\t\t\t\"resources/@1x/spine/dragon.json\",\n\t\t\t\"resources/@1x/spine/dragon.png\",\n\t\t\t\"resources/@1x/spine/dragon2.png\",\n\t\t\t\"resources/@1x/spine/goblins.atlas\",\n\t\t\t\"resources/@1x/spine/goblins.json\",\n\t\t\t\"resources/@1x/spine/goblins.png\",\n\t\t\t\"resources/@1x/spine/iP4_BGtile.jpg\",\n\t\t\t\"resources/@1x/spine/iP4_ground.png\",\n\t\t\t\"resources/@1x/spine/Pixie.atlas\",\n\t\t\t\"resources/@1x/spine/Pixie.json\",\n\t\t\t\"resources/@1x/spine/Pixie.png\",\n\t\t\t\"resources/@1x/spine/spineboy.atlas\",\n\t\t\t\"resources/@1x/spine/spineboy.json\",\n\t\t\t\"resources/@1x/spine/spineboy.png\",\n\t\t\t\"resources/@1x/spritesheet/.DS_Store\",\n\t\t\t\"resources/@1x/spritesheet/fighter.json\",\n\t\t\t\"resources/@1x/spritesheet/fighter.png\",\n\t\t\t\"resources/@1x/spritesheet/SpriteSheet.json\",\n\t\t\t\"resources/@1x/spritesheet/SpriteSheet.png\",\n\t\t\t\"resources/@1x/tiling/p2.jpeg\",\n\t\t\t\"resources/@2x/preloader/logo.png\",\n\t\t\t\"resources/@2x/retina/img.jpg\",\n\t\t\t\"\"];\n\n\tpublic static inline var ALPHAMASK_BKG_JPG:String = \"alphamask/bkg.jpg\";\n\tpublic static inline var GRAPHICS_SPINOBJ_06_PNG:String = \"graphics/spinObj_06.png\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_08_PNG:String = \"rendertexture/spinObj_08.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_05_PNG:String = \"graphics/spinObj_05.png\";\n\tpublic static inline var SPINE_IP4_BGTILE_JPG:String = \"spine/iP4_BGtile.jpg\";\n\tpublic static inline var SPINE_DRAGON_JSON:String = \"spine/dragon.json\";\n\tpublic static inline var SPINE_GOBLINS_ATLAS:String = \"spine/goblins.atlas\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_BG_JPG:String = \"filters/depth_blur_BG.jpg\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_MOBY_JPG:String = \"filters/depth_blur_moby.jpg\";\n\tpublic static inline var FILTERS_LIGHTROTATE2_PNG:String = \"filters/LightRotate2.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_PNG:String = \"movieclip/SpriteSheet.png\";\n\tpublic static inline var SOUNDS_LOOP_MP3:String = \"sounds/loop.mp3\";\n\tpublic static inline var COMMON_BUTTON_PNG:String = \"common/button.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_08_PNG:String = \"graphics/spinObj_08.png\";\n\tpublic static inline var ALPHAMASK_FLOWERTOP_PNG:String = \"alphamask/flowerTop.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_07_PNG:String = \"graphics/spinObj_07.png\";\n\tpublic static inline var SPINE_PIXIE_ATLAS:String = \"spine/Pixie.atlas\";\n\tpublic static inline var FILTERS_LIGHTROTATE1_PNG:String = \"filters/LightRotate1.png\";\n\tpublic static inline var SPINE_SPINEBOY_JSON:String = \"spine/spineboy.json\";\n\tpublic static inline var SOUNDS_SOUND4_WAV:String = \"sounds/sound4.wav\";\n\tpublic static inline var FONTS_DESYREL_XML:String = \"fonts/desyrel.xml\";\n\tpublic static inline var BUNNYMARK_BUNNY2_PNG:String = \"bunnymark/bunny2.png\";\n\tpublic static inline var BUNNYMARK_BUNNY4_PNG:String = \"bunnymark/bunny4.png\";\n\tpublic static inline var FILTERS_SCENEROTATE_JPG:String = \"filters/SceneRotate.jpg\";\n\tpublic static inline var SOUNDS_SOUND3_WAV:String = \"sounds/sound3.wav\";\n\tpublic static inline var SPINE_PIXIE_JSON:String = \"spine/Pixie.json\";\n\tpublic static inline var SPINE_DRAGON_PNG:String = \"spine/dragon.png\";\n\tpublic static inline var PRELOADER_LOGO_PNG:String = \"preloader/logo.png\";\n\tpublic static inline var SPINE_IP4_GROUND_PNG:String = \"spine/iP4_ground.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_JSON:String = \"spritesheet/fighter.json\";\n\tpublic static inline var FILTERS_PANDA_PNG:String = \"filters/panda.png\";\n\tpublic static inline var RETINA_IMG_JPG:String = \"retina/img.jpg\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_PNG:String = \"spritesheet/SpriteSheet.png\";\n\tpublic static inline var SPINE_SPINEBOY_PNG:String = \"spine/spineboy.png\";\n\tpublic static inline var SOUNDS_SOUND2_WAV:String = \"sounds/sound2.wav\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_JSON:String = \"spritesheet/SpriteSheet.json\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_01_PNG:String = \"rendertexture/spinObj_01.png\";\n\tpublic static inline var SPINE_GOBLINS_JSON:String = \"spine/goblins.json\";\n\tpublic static inline var BUNNYMARK_BUNNY1_PNG:String = \"bunnymark/bunny1.png\";\n\tpublic static inline var SPINE_SPINEBOY_ATLAS:String = \"spine/spineboy.atlas\";\n\tpublic static inline var SPINE_GOBLINS_PNG:String = \"spine/goblins.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_PNG:String = \"spritesheet/fighter.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_JSON:String = \"movieclip/SpriteSheet.json\";\n\tpublic static inline var NAPE_BALL_PNG:String = \"nape/ball.png\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_02_PNG:String = \"rendertexture/spinObj_02.png\";\n\tpublic static inline var TILING_P2_JPEG:String = \"tiling/p2.jpeg\";\n\tpublic static inline var SOUNDS_SOUND1_WAV:String = \"sounds/sound1.wav\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_03_PNG:String = \"rendertexture/spinObj_03.png\";\n\tpublic static inline var FILTERS_BGROTATE_JPG:String = \"filters/BGrotate.jpg\";\n\tpublic static inline var FONTS_DESYREL_TTF:String = \"fonts/desyrel.ttf\";\n\tpublic static inline var BUNNYMARK_BUNNY3_PNG:String = \"bunnymark/bunny3.png\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_DUDES_JPG:String = \"filters/depth_blur_dudes.jpg\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_05_PNG:String = \"rendertexture/spinObj_05.png\";\n\tpublic static inline var BUNNYMARK_BUNNY5_PNG:String = \"bunnymark/bunny5.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_02_PNG:String = \"graphics/spinObj_02.png\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_04_PNG:String = \"rendertexture/spinObj_04.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_01_PNG:String = \"graphics/spinObj_01.png\";\n\tpublic static inline var SPINE_DRAGON2_PNG:String = \"spine/dragon2.png\";\n\tpublic static inline var SPINE_PIXIE_PNG:String = \"spine/Pixie.png\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_06_PNG:String = \"rendertexture/spinObj_06.png\";\n\tpublic static inline var SPINE_DRAGON_ATLAS:String = \"spine/dragon.atlas\";\n\tpublic static inline var GRAPHICS_SPINOBJ_04_PNG:String = \"graphics/spinObj_04.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_03_PNG:String = \"graphics/spinObj_03.png\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_07_PNG:String = \"rendertexture/spinObj_07.png\";\n\tpublic static inline var ROPE_SNAKE_PNG:String = \"rope/snake.png\";\n\tpublic static inline var ALPHAMASK_CELLS_PNG:String = \"alphamask/cells.png\";\n\tpublic static inline var FONTS_DESYREL_PNG:String = \"fonts/desyrel.png\";\n\tpublic static inline var GRAPHICS_SPINOBJ_05:String = \"graphics_spinObj_05\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET:String = \"movieclip_SpriteSheet\";\n\tpublic static inline var SPINE_IP4_GROUND:String = \"spine_iP4_ground\";\n\tpublic static inline var SPINE_PIXIE:String = \"spine_Pixie\";\n\tpublic static inline var SPINE_SPINEBOY:String = \"spine_spineboy\";\n\tpublic static inline var COMMON_BUTTON:String = \"common_button\";\n\tpublic static inline var GRAPHICS_SPINOBJ_04:String = \"graphics_spinObj_04\";\n\tpublic static inline var NAPE_BALL:String = \"nape_ball\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_02:String = \"rendertexture_spinObj_02\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_04:String = \"rendertexture_spinObj_04\";\n\tpublic static inline var SPRITESHEET_FIGHTER:String = \"spritesheet_fighter\";\n\tpublic static inline var TILING_P2:String = \"tiling_p2\";\n\tpublic static inline var GRAPHICS_SPINOBJ_07:String = \"graphics_spinObj_07\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_03:String = \"rendertexture_spinObj_03\";\n\tpublic static inline var SPINE_DRAGON:String = \"spine_dragon\";\n\tpublic static inline var SOUNDS_SOUND4:String = \"sounds_sound4\";\n\tpublic static inline var FILTERS_BGROTATE:String = \"filters_BGrotate\";\n\tpublic static inline var GRAPHICS_SPINOBJ_06:String = \"graphics_spinObj_06\";\n\tpublic static inline var SOUNDS_SOUND3:String = \"sounds_sound3\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_DUDES:String = \"filters_depth_blur_dudes\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_05:String = \"rendertexture_spinObj_05\";\n\tpublic static inline var FILTERS_LIGHTROTATE1:String = \"filters_LightRotate1\";\n\tpublic static inline var SPINE_DRAGON2:String = \"spine_dragon2\";\n\tpublic static inline var GRAPHICS_SPINOBJ_08:String = \"graphics_spinObj_08\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_06:String = \"rendertexture_spinObj_06\";\n\tpublic static inline var ALPHAMASK_BKG:String = \"alphamask_bkg\";\n\tpublic static inline var ALPHAMASK_FLOWERTOP:String = \"alphamask_flowerTop\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_BG:String = \"filters_depth_blur_BG\";\n\tpublic static inline var FILTERS_DEPTH_BLUR_MOBY:String = \"filters_depth_blur_moby\";\n\tpublic static inline var RETINA_IMG:String = \"retina_img\";\n\tpublic static inline var FILTERS_LIGHTROTATE2:String = \"filters_LightRotate2\";\n\tpublic static inline var GRAPHICS_SPINOBJ_01:String = \"graphics_spinObj_01\";\n\tpublic static inline var SOUNDS_SOUND2:String = \"sounds_sound2\";\n\tpublic static inline var FILTERS_PANDA:String = \"filters_panda\";\n\tpublic static inline var BUNNYMARK_BUNNY1:String = \"bunnymark_bunny1\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_07:String = \"rendertexture_spinObj_07\";\n\tpublic static inline var ROPE_SNAKE:String = \"rope_snake\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET:String = \"spritesheet_SpriteSheet\";\n\tpublic static inline var ALPHAMASK_CELLS:String = \"alphamask_cells\";\n\tpublic static inline var BUNNYMARK_BUNNY2:String = \"bunnymark_bunny2\";\n\tpublic static inline var BUNNYMARK_BUNNY3:String = \"bunnymark_bunny3\";\n\tpublic static inline var FILTERS_SCENEROTATE:String = \"filters_SceneRotate\";\n\tpublic static inline var FONTS_DESYREL:String = \"fonts_desyrel\";\n\tpublic static inline var BUNNYMARK_BUNNY4:String = \"bunnymark_bunny4\";\n\tpublic static inline var BUNNYMARK_BUNNY5:String = \"bunnymark_bunny5\";\n\tpublic static inline var GRAPHICS_SPINOBJ_03:String = \"graphics_spinObj_03\";\n\tpublic static inline var GRAPHICS_SPINOBJ_02:String = \"graphics_spinObj_02\";\n\tpublic static inline var PRELOADER_LOGO:String = \"preloader_logo\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_08:String = \"rendertexture_spinObj_08\";\n\tpublic static inline var SOUNDS_LOOP:String = \"sounds_loop\";\n\tpublic static inline var RENDERTEXTURE_SPINOBJ_01:String = \"rendertexture_spinObj_01\";\n\tpublic static inline var SPINE_IP4_BGTILE:String = \"spine_iP4_BGtile\";\n\tpublic static inline var SOUNDS_SOUND1:String = \"sounds_sound1\";\n\tpublic static inline var SPINE_GOBLINS:String = \"spine_goblins\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_14:String = \"Explosion_Sequence_A 14.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_13:String = \"Explosion_Sequence_A 13.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0026:String = \"rollSequence0026.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0016:String = \"rollSequence0016.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0006:String = \"rollSequence0006.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_24:String = \"Explosion_Sequence_A 24.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0025:String = \"rollSequence0025.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_23:String = \"Explosion_Sequence_A 23.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0015:String = \"rollSequence0015.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0005:String = \"rollSequence0005.png\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_HELMLOK:String = \"helmlok.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_12:String = \"Explosion_Sequence_A 12.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_11:String = \"Explosion_Sequence_A 11.png\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_FLOWERTOP:String = \"flowerTop.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_22:String = \"Explosion_Sequence_A 22.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_21:String = \"Explosion_Sequence_A 21.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0024:String = \"rollSequence0024.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_20:String = \"Explosion_Sequence_A 20.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0014:String = \"rollSequence0014.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0004:String = \"rollSequence0004.png\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_EGGHEAD:String = \"eggHead.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_1:String = \"Explosion_Sequence_A 1.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_10:String = \"Explosion_Sequence_A 10.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0003:String = \"rollSequence0003.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_2:String = \"Explosion_Sequence_A 2.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_4:String = \"Explosion_Sequence_A 4.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0023:String = \"rollSequence0023.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0013:String = \"rollSequence0013.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_3:String = \"Explosion_Sequence_A 3.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0022:String = \"rollSequence0022.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0012:String = \"rollSequence0012.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_5:String = \"Explosion_Sequence_A 5.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0002:String = \"rollSequence0002.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0029:String = \"rollSequence0029.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0019:String = \"rollSequence0019.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_19:String = \"Explosion_Sequence_A 19.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0009:String = \"rollSequence0009.png\";\n\tpublic static inline var SPRITESHEET_SPRITESHEET_SKULLY:String = \"skully.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_18:String = \"Explosion_Sequence_A 18.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0028:String = \"rollSequence0028.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_17:String = \"Explosion_Sequence_A 17.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_6:String = \"Explosion_Sequence_A 6.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0018:String = \"rollSequence0018.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0008:String = \"rollSequence0008.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_8:String = \"Explosion_Sequence_A 8.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0021:String = \"rollSequence0021.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_27:String = \"Explosion_Sequence_A 27.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_7:String = \"Explosion_Sequence_A 7.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0011:String = \"rollSequence0011.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0001:String = \"rollSequence0001.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_9:String = \"Explosion_Sequence_A 9.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0010:String = \"rollSequence0010.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_16:String = \"Explosion_Sequence_A 16.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0000:String = \"rollSequence0000.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_15:String = \"Explosion_Sequence_A 15.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0027:String = \"rollSequence0027.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0017:String = \"rollSequence0017.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0007:String = \"rollSequence0007.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_26:String = \"Explosion_Sequence_A 26.png\";\n\tpublic static inline var MOVIECLIP_SPRITESHEET_EXPLOSION_SEQUENCE_A_25:String = \"Explosion_Sequence_A 25.png\";\n\tpublic static inline var SPRITESHEET_FIGHTER_ROLLSEQUENCE0020:String = \"rollSequence0020.png\";\n\n\tpublic static function exists(val:String):Bool {\n\t\treturn (AssetsList.LIST.indexOf(val) > -1);\n\t}\n}","/****\n* Copyright (c) 2013 Jason O'Neil\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n* \n****/\n\nclass CompileTimeClassList \n{\n\tstatic var lists:Map<String, List<Class<Dynamic>>> = null;\n\t\n\tpublic static function get(id:String):List<Class<Dynamic>>\n\t{\n\t\tif (lists == null) initialise();\n\t\treturn lists.get(id);\n\t}\n\n\tpublic static inline function getTyped<T>(id:String, type:Class<T>):List<Class<T>>\n\t{\n\t\treturn cast get(id);\n\t}\n\n\tstatic function initialise()\n\t{\n\t\tlists = new Map();\n\t\tvar m = haxe.rtti.Meta.getType(CompileTimeClassList);\n\t\tif (m.classLists != null)\n\t\t{\n\t\t\tfor (item in m.classLists)\n\t\t\t{\n\t\t\t\tvar array:Array<String> = cast item;\n\t\t\t\tvar listID = array[0];\n\t\t\t\tvar list = new List();\n\t\t\t\tfor ( typeName in array[1].split(',') ) {\n\t\t\t\t\tvar type = Type.resolveClass(typeName);\n\t\t\t\t\tif ( type!=null ) list.push( type );\n\t\t\t\t}\n\t\t\t\tlists.set(listID, list);\n\t\t\t}\n\t\t}\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","class JConsole {\n\n\t#if debug\n\tstatic var lastFileName:String;\n\tstatic var clrs:Array<String> = [\"green\", \"blue\", \"hotpink\", \"darkorange\", \"indigo\", \"brown\", \"olive\", \"blueviolet\", \"teal\", \"darkmagenta\", \"darkcyan\"];\n\tstatic var index:Int = 0;\n\t#end\n\n\tpublic static function log(msg:Dynamic) {\n\t\t#if debug untyped __js__(\"console\").log(msg); #end\n\t}\n\n\tpublic static function info(msg:Dynamic) {\n\t\t#if debug untyped __js__(\"console\").info(msg); #end\n\t}\n\n\tpublic static function warn(msg:Dynamic) {\n\t\t#if debug untyped __js__(\"console\").warn(msg); #end\n\t}\n\n\tpublic static function error(msg:Dynamic) {\n\t\t#if debug untyped __js__(\"console\").error(msg); #end\n\t}\n\n\tpublic static function trace(msg:Dynamic, ?inf:haxe.PosInfos) {\n\t\t#if debug\n\t\tif (lastFileName != inf.fileName) index++;\n\t\tif (index == clrs.length) index = 0;\n\t\tlastFileName = inf.fileName;\n\t\tif (inf != null && inf.customParams != null) for(v in inf.customParams ) msg += \" \" + v;\n\t\tuntyped __js__(\"console\").log(\"%c\" + inf.fileName + \"(\" + inf.methodName + \":\" + inf.lineNumber + \") \" + msg, \"color: \" + clrs[index]+ \";font-weight:bold;\");\n\t\t#end\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","package pixi.plugins.app;\n\nimport js.html.DivElement;\nimport js.html.Element;\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.core.renderers.canvas.CanvasRenderer;\nimport pixi.core.renderers.Detector;\nimport pixi.core.display.Container;\nimport js.html.Event;\nimport js.html.CanvasElement;\nimport js.Browser;\n\n#if fps import jsfps.simplefps.Fps; #end\n#if fpsmeter import jsfps.fpsmeter.FPSMeter; #end\n#if stats import jsfps.stats.Stats; #end\n\n/**\n * Pixi Boilerplate Helper class that can be used by any application\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\nclass Application {\n\n\t/**\n     * Sets the pixel ratio of the application.\n     * default - 1\n     */\n\tpublic var pixelRatio:Float;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to true to get 30 FPS.\n\t * default - false\n\t */\n\tpublic var skipFrame(default, set):Bool;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to anything between 1 - 60.\n\t * default - 60\n\t */\n\tpublic var fps(default, set):Int;\n\n\t/**\n\t * Width of the application.\n\t * default - Browser.window.innerWidth\n\t */\n\tpublic var width:Float;\n\n\t/**\n\t * Height of the application.\n\t * default - Browser.window.innerHeight\n\t */\n\tpublic var height:Float;\n\n\t/**\n\t * Renderer transparency property.\n\t * default - false\n\t */\n\tpublic var transparent:Bool;\n\n\t/**\n\t * Graphics antialias property.\n\t * default - false\n\t */\n\tpublic var antialias:Bool;\n\n\t/**\n\t * Force FXAA shader antialias instead of native (faster).\n\t * default - false\n\t */\n\tpublic var forceFXAA:Bool;\n\n\t/**\n\t * Force round pixels.\n\t * default - false\n\t */\n\tpublic var roundPixels:Bool;\n\n\t/**\n\t * Whether you want to resize the canvas and renderer on browser resize.\n\t * Should be set to false when custom width and height are used for the application.\n\t * default - true\n\t */\n\tpublic var autoResize:Bool;\n\n\t/**\n\t * Sets the background color of the stage.\n\t * default - 0xFFFFFF\n\t */\n\tpublic var backgroundColor:Int;\n\n\t/**\n\t * Update listener \tfunction\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/**\n\t * Window resize listener \tfunction\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/**\n\t * Canvas Element\n\t * Read-only\n\t */\n\tpublic var canvas(default, null):CanvasElement;\n\n\t/**\n\t * Renderer\n\t * Read-only\n\t */\n\tpublic var renderer(default, null):Dynamic;\n\n\t/**\n\t * Global Container.\n\t * Read-only\n\t */\n\tpublic var stage(default, null):Container;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\tvar _elapsedTime:Float;\n\tvar _frameCount:Int;\n\n\t#if fps\n\tvar _fps:Fps;\n\tvar _fpsDiv:DivElement;\n\t#end\n\n\t#if stats var _stats:Stats; #end\n\t#if fpsmeter var _fpsMeter:FPSMeter; #end\n\n\tpublic function new() {\n\t\t_lastTime = Date.now();\n\t\t_setDefaultValues();\n\t}\n\n\tfunction set_fps(val:Int):Int {\n\t\t_frameCount = 0;\n\t\treturn fps = (val >= 1 && val < 60) ? Std.int(val) : 60;\n\t}\n\n\tfunction set_skipFrame(val:Bool):Bool {\n\t\tif (val) {\n\t\t\ttrace(\"pixi.plugins.app.Application > Deprecated: skipFrame - use fps property and set it to 30 instead\");\n\t\t\tfps = 30;\n\t\t}\n\t\treturn skipFrame = val;\n\t}\n\n\tinline function _setDefaultValues() {\n\t\tpixelRatio = 1;\n\t\tskipFrame = false;\n\t\tautoResize = true;\n\t\ttransparent = false;\n\t\tantialias = false;\n\t\tforceFXAA = false;\n\t\troundPixels = false;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tfps = 60;\n\t}\n\n\t/**\n\t * Starts pixi application setup using the properties set or default values\n\t * @param [rendererType] - Renderer type to use AUTO (default) | CANVAS | WEBGL\n\t * @param [stats] - Enable/disable stats for the application.\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder. \"libs/stats.min.js\" <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @param [parentDom] - By default canvas will be appended to body or it can be appended to custom element if passed\n\t */\n\n\tpublic function start(?rendererType:String = \"auto\", ?parentDom:Element) {\n\t\tcanvas = Browser.document.createCanvasElement();\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\t\tcanvas.style.position = \"absolute\";\n\t\tif (parentDom == null) Browser.document.body.appendChild(canvas);\n\t\telse parentDom.appendChild(canvas);\n\n\t\tstage = new Container();\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\t\trenderingOptions.antialias = antialias;\n\t\trenderingOptions.forceFXAA = forceFXAA;\n\t\trenderingOptions.autoResize = autoResize;\n\t\trenderingOptions.transparent = transparent;\n\n\t\tif (rendererType == AUTO) renderer = Detector.autoDetectRenderer(width, height, renderingOptions);\n\t\telse if (rendererType == CANVAS) renderer = new CanvasRenderer(width, height, renderingOptions);\n\t\telse renderer = new WebGLRenderer(width, height, renderingOptions);\n\n\t\tif (roundPixels) renderer.roundPixels = true;\n\n\t\tBrowser.document.body.appendChild(renderer.view);\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\t_lastTime = Date.now();\n\n\t\t_addStats();\n\t}\n\n\tpublic function pauseRendering() {\n\t\tBrowser.window.onresize = null;\n\t\tBrowser.window.requestAnimationFrame(cast function(){});\n\t}\n\n\tpublic function resumeRendering() {\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t}\n\n\t@:noCompletion function _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\trenderer.resize(width, height);\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\t@:noCompletion function _onRequestAnimationFrame() {\n\t\t_frameCount++;\n\t\tif (_frameCount == Std.int(60 / fps)) {\n\t\t\t_frameCount = 0;\n\t\t\t_calculateElapsedTime();\n\t\t\tif (onUpdate != null) onUpdate(_elapsedTime);\n\t\t\trenderer.render(stage);\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\n\t\t#if fps _fps.tick(); #end\n\t\t#if stats if (_stats != null) _stats.update(); #end\n\t\t#if fpsmeter if (_fpsMeter != null) _fpsMeter.tick(); #end\n\t}\n\n\t@:noCompletion function _calculateElapsedTime() {\n\t\t_currentTime = Date.now();\n\t\t_elapsedTime = _currentTime.getTime() - _lastTime.getTime();\n\t\t_lastTime = _currentTime;\n\t}\n\n\t@:noCompletion function _addStats() {\n\t\t#if fps\n\t\t_fps = new Fps(_updateFps);\n\t\t_fpsDiv = Browser.document.createDivElement();\n\t\t_fpsDiv.id = \"fps\";\n\t\t_fpsDiv.className = \"fps\";\n\t\t_fpsDiv.style.position = \"absolute\";\n\t\t_fpsDiv.style.right = \"0px\";\n\t\t_fpsDiv.style.top = \"14px\";\n\t\t_fpsDiv.style.width = \"76px\";\n\t\t_fpsDiv.style.background = \"#CCCCC\";\n\t\t_fpsDiv.style.backgroundColor = \"#00FF00\";\n\t\t_fpsDiv.style.fontFamily = \"Helvetica,Arial\";\n\t\t_fpsDiv.style.padding = \"2px\";\n\t\t_fpsDiv.style.color = \"#000000\";\n\t\t_fpsDiv.style.fontSize = \"9px\";\n\t\t_fpsDiv.style.fontWeight = \"bold\";\n\t\t_fpsDiv.style.textAlign = \"center\";\n\t\t_fpsDiv.innerHTML = \"FPS: 60\";\n\t\tBrowser.document.body.appendChild(_fpsDiv);\n\t\t_addRenderStats();\n\t\t#end\n\n\t\t#if stats\n\t\tif (untyped __js__(\"window\").Stats != null) {\n\t\t\tvar container = Browser.document.createDivElement();\n\t\t\tBrowser.document.body.appendChild(container);\n\t\t\t_stats = new Stats();\n\t\t\t_stats.domElement.style.position = \"absolute\";\n\t\t\t_stats.domElement.style.top = \"14px\";\n\t\t\t_stats.domElement.style.right = \"0px\";\n\t\t\tcontainer.appendChild(_stats.domElement);\n\t\t\t_stats.begin();\n\t\t\t_addRenderStats();\n\t\t}\n\t\telse trace(\"Unable to find stats.js\");\n\t\t#end\n\n\t\t#if fpsmeter\n\t\tif (untyped __js__(\"window\").FPSMeter != null) {\n\t\t\t_fpsMeter = new FPSMeter( {theme: \"colorful\", top: \"14px\", right: \"0px\", left: \"auto\"});\n\t\t\t_addRenderStats();\n\t\t}\n\t\telse trace(\"Unable to find fpsmeter.js\");\n\t\t#end\n\t}\n\n\tinline function _addRenderStats(?top:Int = 0) {\n\t\tvar ren:DivElement = Browser.document.createDivElement();\n\t\tren.style.position = \"absolute\";\n\t\tren.style.width = \"76px\";\n\t\tren.style.top = top + \"px\";\n\t\tren.style.right = \"0px\";\n\t\tren.style.background = \"#CCCCC\";\n\t\tren.style.backgroundColor = \"#105CB6\";\n\t\tren.style.fontFamily = \"Helvetica,Arial\";\n\t\tren.style.padding = \"2px\";\n\t\tren.style.color = \"#0FF\";\n\t\tren.style.fontSize = \"9px\";\n\t\tren.style.fontWeight = \"bold\";\n\t\tren.style.textAlign = \"center\";\n\t\tBrowser.document.body.appendChild(ren);\n\t\tren.innerHTML = [\"UNKNOWN\", \"WEBGL\", \"CANVAS\"][renderer.type] + \" - \" + pixelRatio;\n\t}\n\n\t#if fps\n\tfunction _updateFps(val:Float) {\n\t\t_fpsDiv.innerHTML = \"FPS: \" + val;\n\t}\n\t#end\n}","package arm.cohere;\n\nimport minject.Injector;\nimport arm.cohere.core.utils.BrowserUtils;\nimport arm.cohere.controller.Controller;\nimport arm.cohere.view.View;\nimport arm.cohere.model.Model;\nimport arm.cohere.core.utils.StageProperties;\nimport pixi.plugins.app.Application;\nimport js.Browser;\nimport pixi.core.Pixi;\nimport msignal.Signal.Signal0;\nimport msignal.Signal.Signal1;\n\nclass Main extends Application {\n\n\tpublic static var resize:Signal0;\n\tpublic static var update:Signal1<Float>;\n\n\tvar _stageProperties:StageProperties;\n\tvar _model:Model;\n\tvar _view:View;\n\tvar _controller:Controller;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_setStageProperties();\n\t\t_setScreenDimensions();\n\t\t_init();\n\n\t\tPixi.RESOLUTION = _stageProperties.pixelRatio;\n\t\tsuper.start();\n\t\t_setupApplication();\n\t}\n\n\tinline function _setStageProperties() {\n\t\t_stageProperties = new StageProperties();\n\t\t_stageProperties.actualPixelRatio = Browser.window.devicePixelRatio;\n\t\t_stageProperties.pixelRatio = BrowserUtils.getPixelRatio();\n\t}\n\n\tinline function _setScreenDimensions() {\n\t\t_stageProperties.screenWidth = Browser.window.innerWidth;\n\t\t_stageProperties.screenHeight = Browser.window.innerHeight;\n\t\t_stageProperties.orientation = (_stageProperties.screenWidth > _stageProperties.screenHeight) ? StageProperties.LANDSCAPE : StageProperties.PORTRAIT;\n\t}\n\n\tinline function _init() {\n\t\tresize = new Signal0();\n\t\tupdate = new Signal1(Float);\n\n\t\tpixelRatio = _stageProperties.pixelRatio;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\troundPixels = true;\n\t\tonUpdate = _onUpdate;\n\t\tonResize = _onResize;\n\t\ttransparent = true;\n\t}\n\n\tinline function _setupApplication() {\n\t\tstage.interactive = true;\n\n\t\t_model = new Model();\n\t\t_model.updateFps.add(_onUpdateFps);\n\t\t_view = new View(stage);\n\t\t_controller = new Controller();\n\n\t\tvar injector = new Injector();\n\t\tinjector.mapValue(StageProperties, _stageProperties);\n\t\tinjector.mapValue(Model, _model);\n\t\tinjector.mapValue(View, _view);\n\t\tinjector.injectInto(_controller);\n\n\t\t_controller.init();\n\t}\n\n\tfunction _onUpdateFps(val:Int) {\n\t\tif (val > 0) fps = val;\n\t}\n\n\tfunction _onUpdate(time:Float) {\n\t\tupdate.dispatch(time);\n\t}\n\n\tfunction _onResize() {\n\t\t_setScreenDimensions();\n\t\tresize.dispatch();\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}","package arm.cohere.core.components;\n\nimport arm.cohere.model.Model;\n\n@:keepSub class ComponentController {\n\n\t@inject public var model:Model;\n\n\tpublic function new() {}\n\n\tpublic function init() {}\n\n\tpublic function setup() {}\n\n\tpublic function reset() {}\n}","package arm.cohere.components.bitmapfont;\n\nimport arm.cohere.model.Model;\nimport arm.cohere.core.components.ComponentController;\nimport bindx.Bind;\n\nclass BitmapfontController extends ComponentController {\n\n\t@inject public var view:BitmapfontView;\n\n\toverride public function setup() {\n\t\tBind.bind(model.currentDemo, _onCurrentDemoChange);\n\t}\n\n\tfunction _onCurrentDemoChange(from:String, to:String) {\n\t\tif (to == Model.BITMAPFONT) view.start();\n\t\telse view.end();\n\t}\n}","package bindx.macro;\n\nimport bindx.BindSignal.Signal;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\nimport bindx.BindSignal;\n\nusing bindx.macro.MacroUtils;\nusing haxe.macro.Tools;\n\nclass BindSignalProvider implements IBindingSignalProvider {\n\n    /**\n     * default value: true\n     */\n    static inline var LAZY_SIGNAL = \"lazySignal\";\n    /**\n     * default value: false\n     */\n    static inline var INLINE_SIGNAL_GETTER = \"inlineSignalGetter\";\n    \n    public function new() {}\n\n    @:extern static inline function signalName(fieldName:String):String return fieldName + SignalTools.SIGNAL_POSTFIX;\n    @:extern static inline function signalGetterName(fieldName:String):String return \"get_\" + signalName(fieldName);\n    @:extern static inline function signalPrivateName(fieldName:String):String return \"_\" + signalName(fieldName);\n\n    public function getFieldDispatcher(field:Field, res:Array<Field>):Void {\n        switch (field.kind) {\n            case FFun(_):\n                generateSignal(field, macro : bindx.BindSignal.MethodSignal, macro new bindx.BindSignal.MethodSignal(), res);\n            case FProp(_, _, type, _) | FVar(type, _):\n                generateSignal(field, macro : bindx.BindSignal.FieldSignal<$type>, macro new bindx.BindSignal.FieldSignal<$type>(), res);\n        }\n    }\n\n    public function getFieldChangedExpr(field:Field, oldValue:Expr, newValue:Expr):Expr {\n        var args = switch (field.kind) { case FFun(_): []; case _: [oldValue, newValue]; }\n        return dispatchSignal(macro this, field.name, args, hasLazy(field.bindableMeta()));\n    }\n\n    public function getClassFieldBindExpr(expr:Expr, field:ClassField, listener:Expr):Expr {\n        var signalName = signalName(field.name);\n        return macro @:privateAccess $expr.$signalName.add($listener);\n    }\n\n    public function getClassFieldBindToExpr(expr:Expr, field:ClassField, target:Expr):Expr {\n        var signalName = signalName(field.name);\n        return switch (field.kind) {\n            case FMethod(_):\n                var fieldName = field.name;\n                macro @:privateAccess {\n                    var listener = function () $target = $expr.$fieldName();\n                    $expr.$signalName.add(listener);\n                    function __unbind__() $expr.$signalName.remove(listener);\n                }\n            case FVar(_, _):\n                var type = field.type.follow().toComplexType();\n                macro @:privateAccess {\n                    var listener = function (from:$type, to:$type) $target = to;\n                    $expr.$signalName.add(listener);\n                    function __unbind__() $expr.$signalName.remove(listener);\n                }\n            }\n    }\n\n    public function getClassFieldUnbindExpr(expr:Expr, field:ClassField, listener:Expr):Expr {\n        var signalName = signalName(field.name);\n        return if (!listener.isNullOrEmpty())\n            macro @:privateAccess $expr.$signalName.remove($listener);\n        else\n            macro @:privateAccess $expr.$signalName.removeAll();\n    }\n\n    public function getClassFieldChangedExpr(expr:Expr, field:ClassField, oldValue:Expr, newValue:Expr):Expr {\n        var args = switch (field.kind) {\n            case FMethod(_): \n                if (!oldValue.isNullOrEmpty())\n                    Context.error(\"method notify doesn't require oldValue\", oldValue.pos);\n                if (!newValue.isNullOrEmpty())\n                    Context.error(\"method notify doesn't require newValue\", newValue.pos);\n                [];\n            case FVar(_, _):\n                if (oldValue.isNullOrEmpty() && newValue.isNullOrEmpty())\n                    Context.error(\"method notify require oldValue and newValue\", oldValue.pos);\n                [oldValue, newValue];\n        }\n        return dispatchSignal(expr, field.name, args, hasLazy(field.bindableMeta()));\n    }\n    \n    public function getUnbindAllExpr(expr:ExprOf<IBindable>, type:Type):Expr {\n        return macro bindx.BindSignal.SignalTools.unbindAll($expr);\n    }\n\n    public function getBindAllExpr(expr:ExprOf<IBindable>, type:Type, listener:Expr, force:Bool = true):Expr {\n        return macro bindx.BindSignal.SignalTools.bindAll($expr, $listener, $v{force});\n    }\n\n    function generateSignal(field:Field, type:ComplexType, builder:Expr, res:Array<Field>):Void {\n        var fieldName = field.name;\n        var signalName = signalName(fieldName);\n        var meta = field.bindableMeta();\n        var inlineSignalGetter = meta.findParam(INLINE_SIGNAL_GETTER);\n\n        if (hasLazy(meta)) {\n            var signalPrivateName = signalPrivateName(field.name);\n            res.push({\n                name: signalPrivateName,\n                kind: FVar(type, null),\n                pos: field.pos,\n                meta: [ { name:SignalTools.BIND_SIGNAL_META, pos:field.pos, params: [macro $v{fieldName}, macro true] } ],\n                access: [APrivate]\n            });\n\n            res.push({\n                name: signalName,\n                kind: FProp(\"get\", \"never\", type, null),\n                pos: field.pos,\n                access: [APrivate]\n            });\n\n            var getter = macro function foo() {\n                if (this.$signalPrivateName == null)\n                    this.$signalPrivateName = ${builder};\n                return $i{signalPrivateName};\n            };\n            var getterAccess = [APrivate];\n            if (inlineSignalGetter.isNotNullAndTrue()) getterAccess.push(AInline);\n\n            res.push({\n                name: signalGetterName(field.name),\n                kind: FFun(switch (getter.expr) { case EFunction (_, func): func; case _: throw false; }),\n                pos: field.pos,\n                access: getterAccess\n            });\n        } else {\n            if (inlineSignalGetter != null)\n                Context.warning('$INLINE_SIGNAL_GETTER works only with lazy signals', inlineSignalGetter.pos);\n\n            res.push({\n                name: signalName,\n                kind: FProp(\"default\", \"null\", type, builder),\n                pos: field.pos,\n                access: [APrivate],\n                meta: [ { name:SignalTools.BIND_SIGNAL_META, pos:field.pos, params: [macro $v{fieldName}, macro false] } ]\n            });\n        }\n    }\n\n    inline function dispatchSignal(expr:Expr, fieldName:String, args:Array<Expr>, lazy:Bool):Expr {\n        return \n            if (lazy) {\n                var signalPrivateName = signalPrivateName(fieldName);\n                macro @:privateAccess {\n                    if ($expr.$signalPrivateName != null)\n                        $expr.$signalPrivateName.dispatch($a { args } );\n                }\n            } else {\n                var signalName = signalName(fieldName);\n                macro @:privateAccess $expr.$signalName.dispatch($a { args } );\n            }\n    }\n\n    @:extern inline function hasLazy(meta:MetadataEntry):Bool {\n        return meta.findParam(LAZY_SIGNAL).isNullOrTrue();\n    }\n}","package arm.cohere.core.components;\n\nimport arm.cohere.view.View;\nimport arm.cohere.core.utils.StageProperties;\nimport arm.cohere.core.loader.AssetLoader;\nimport pixi.core.display.Container;\n\n@SuppressWarnings(\"checkstyle:Dynamic\")\n@:keepSub class ComponentView {\n\n\t@inject public var loader:AssetLoader;\n\t@inject public var stageProperties:StageProperties;\n\n\tvar _container:Container;\n\n\tpublic var componentName:String;\n\n\tpublic var view(default, null):View;\n\n\tpublic var index(default, default):Int;\n\n\tpublic function new(mainView:View, viewName:String) {\n\t\tview = mainView;\n\n\t\t_container = new Container();\n\t\t_container.name = viewName + \"Container\";\n\n\t\tcomponentName = viewName.substring(0, viewName.indexOf(\"View\")).toLowerCase();\n\n\t\tif (Main.resize != null) Main.resize.add(resize);\n\t\tif (Main.update != null) Main.update.add(update);\n\t}\n\n\tpublic inline function show() {\n\t\t_container.visible = true;\n\t}\n\n\tpublic inline function hide() {\n\t\t_container.visible = false;\n\t}\n\n\tpublic function init() {\n\t\tview.stage.addChild(_container);\n\t}\n\n\tpublic function addAssetsToLoad() {}\n\n\tpublic function resize() {}\n\n\tpublic function destroy() {\n\t\t_container.destroy(true);\n\t\tview.stage.removeChild(_container);\n\t\t_container = null;\n\t}\n\n\tpublic function update(t:Float) {}\n\n\tpublic function applyIndex() {\n\t\tif (index != null && index <= view.stage.children.length - 1) view.stage.setChildIndex(_container, index);\n\t\telse {\n\t\t\tindex = view.stage.children.length - 1;\n\t\t\tview.stage.setChildIndex(_container, index);\n\t\t}\n\t}\n}","package arm.cohere.components.bitmapfont;\n\nimport pixi.extras.BitmapText;\nimport arm.cohere.core.components.ComponentView;\n\nclass BitmapfontView extends ComponentView {\n\n\tvar _bitmapFont:BitmapText;\n\n\toverride public function addAssetsToLoad() {\n\t\tloader.addAsset(AssetsList.FONTS_DESYREL, AssetsList.FONTS_DESYREL_XML);\n\t}\n\n\tpublic function start() {\n\t\t_bitmapFont = new BitmapText(\"bitmap fonts are\\n now supported!\", {font: \"60px Desyrel\"});\n\t\t_container.addChild(_bitmapFont);\n\n\t\tresize();\n\t}\n\n\tpublic function end() {\n\t\t_container.removeChildren();\n\t\t_bitmapFont = null;\n\t}\n\n\toverride public function resize() {\n\t\t_container.position.set((stageProperties.screenWidth - _container.width) / 2, (stageProperties.screenHeight - _container.height) / 2);\n\t}\n}","package arm.cohere.components.bunnymark;\n\nimport pixi.core.textures.Texture;\nimport pixi.core.sprites.Sprite;\n\nclass Bunny extends Sprite {\n\n\tpublic var speedX(default, default):Float;\n\tpublic var speedY(default, default):Float;\n\tpublic var scaleSpeed(default, default):Float;\n\tpublic var rotationSpeed(default, default):Float;\n\n\tpublic function new(texture:Texture) {\n\t\tsuper(texture);\n\t}\n}","package arm.cohere.components.bunnymark;\n\nimport arm.cohere.model.Model;\nimport bindx.Bind;\nimport arm.cohere.core.components.ComponentController;\n\nclass BunnymarkController extends ComponentController {\n\n\t@inject public var view:BunnymarkView;\n\n\toverride public function setup() {\n\t\tBind.bind(model.currentDemo, _onCurrentDemoChange);\n\t}\n\n\tfunction _onCurrentDemoChange(from:String, to:String) {\n\t\tif (to == Model.BUNNYMARK) view.start();\n\t\telse view.end();\n\t}\n}","package arm.cohere.components.bunnymark;\n\nimport pixi.core.text.Text;\nimport js.html.Event;\nimport js.Browser;\nimport pixi.core.particles.ParticleContainer;\nimport pixi.core.textures.Texture;\nimport arm.cohere.core.components.ComponentView;\n\nclass BunnymarkView extends ComponentView {\n\n\tvar _bunnyTexture:Texture;\n\tvar _bunnys:Array<Bunny> = [];\n\tvar _bunnyTextures:Array<Texture> = [];\n\n\tvar _gravity:Float = 0.5;\n\n\tvar _maxX:Float;\n\tvar _minX:Float = 0;\n\tvar _maxY:Float;\n\tvar _minY:Float = 0;\n\n\tvar _startBunnyCount:Int = 2;\n\tvar _isAdding:Bool = false;\n\tvar _count:Int = 0;\n\tvar _bunnyContainer:ParticleContainer;\n\n\tvar _amount:Int = 100;\n\tvar _bunnyType:Int;\n\tvar _currentTexture:Texture;\n\tvar _counter:Text;\n\n\toverride public function addAssetsToLoad() {\n\t\tloader.addAsset(AssetsList.BUNNYMARK_BUNNY1, AssetsList.BUNNYMARK_BUNNY1_PNG);\n\t\tloader.addAsset(AssetsList.BUNNYMARK_BUNNY2, AssetsList.BUNNYMARK_BUNNY2_PNG);\n\t\tloader.addAsset(AssetsList.BUNNYMARK_BUNNY3, AssetsList.BUNNYMARK_BUNNY3_PNG);\n\t\tloader.addAsset(AssetsList.BUNNYMARK_BUNNY4, AssetsList.BUNNYMARK_BUNNY4_PNG);\n\t\tloader.addAsset(AssetsList.BUNNYMARK_BUNNY5, AssetsList.BUNNYMARK_BUNNY5_PNG);\n\t}\n\n\tpublic function start() {\n\t\t_maxX = Browser.window.innerWidth;\n\t\t_maxY = Browser.window.innerHeight;\n\n\t\t_count = _startBunnyCount;\n\t\t_counter = new Text(_count + \" BUNNIES\", { fill: \"#105CB6\", font: \"bold 12px Courier\" });\n\t\t_container.addChild(_counter);\n\n\t\t_bunnyContainer = new ParticleContainer();\n\t\t_bunnyContainer.addChild(_bunnyContainer);\n\t\t_container.addChild(_bunnyContainer);\n\n\t\t_bunnyTextures = [\n\t\t\tloader.getTexture(AssetsList.BUNNYMARK_BUNNY1),\n\t\t\tloader.getTexture(AssetsList.BUNNYMARK_BUNNY2),\n\t\t\tloader.getTexture(AssetsList.BUNNYMARK_BUNNY3),\n\t\t\tloader.getTexture(AssetsList.BUNNYMARK_BUNNY4),\n\t\t\tloader.getTexture(AssetsList.BUNNYMARK_BUNNY5)\n\t\t];\n\t\t_bunnyType = 1;\n\t\t_currentTexture = _bunnyTextures[_bunnyType];\n\n\t\tfor (i in 0 ... _startBunnyCount) {\n\t\t\tvar bunny = new Bunny(_currentTexture);\n\t\t\tbunny.speedX = Math.random() * 5;\n\t\t\tbunny.speedY = (Math.random() * 5) - 3;\n\t\t\tbunny.anchor.set(0.5, 1);\n\t\t\t_bunnys.push(bunny);\n\t\t\t_bunnyContainer.addChild(bunny);\n\t\t}\n\n\t\tBrowser.document.addEventListener(\"touchstart\", _onTouchStart, true);\n\t\tBrowser.document.addEventListener(\"touchend\", _onTouchEnd, true);\n\t\tBrowser.document.addEventListener(\"mousedown\", _onTouchStart, true);\n\t\tBrowser.document.addEventListener(\"mouseup\", _onTouchEnd, true);\n\t}\n\n\tfunction _onTouchStart(event:Event) {\n\t\t_isAdding = true;\n\t}\n\n\tfunction _onTouchEnd(event:Event) {\n\t\t_bunnyType++;\n\t\t_bunnyType %= 5;\n\t\t_currentTexture = _bunnyTextures[_bunnyType];\n\t\t_isAdding = false;\n\t}\n\n\toverride public function update(elapsedTime:Float) {\n\t\tif (_isAdding) {\n\t\t\tif (_count < 200000) {\n\t\t\t\tfor (i in 0 ... _amount) {\n\t\t\t\t\tvar bunny = new Bunny(_currentTexture);\n\t\t\t\t\tbunny.speedX = Math.random() * 5;\n\t\t\t\t\tbunny.speedY = (Math.random() * 5) - 3;\n\t\t\t\t\tbunny.anchor.y = 1;\n\t\t\t\t\tbunny.alpha = 0.3 + Math.random() * 0.7;\n\t\t\t\t\t_bunnys.push(bunny);\n\t\t\t\t\tbunny.scale.set(0.5 + Math.random() * 0.5, 0.5 + Math.random() * 0.5);\n\t\t\t\t\tbunny.rotation = (Math.random() - 0.5);\n\n\t\t\t\t\tbunny.rotation = Math.random() - 0.5;\n\t\t\t\t\tvar random = Std.random(_bunnyContainer.children.length - 2);\n\t\t\t\t\t_bunnyContainer.addChild(bunny);\n\n\t\t\t\t\t_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_counter.text = _count + \" BUNNIES\";\n\t\t}\n\n\t\tfor (i in 0 ... _bunnys.length) {\n\t\t\tvar bunny = _bunnys[i];\n\t\t\tbunny.rotation += 0.1;\n\n\t\t\tbunny.position.x += bunny.speedX;\n\t\t\tbunny.position.y += bunny.speedY;\n\t\t\tbunny.speedY += _gravity;\n\n\t\t\tif (bunny.position.x > _maxX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = _maxX;\n\t\t\t}\n\t\t\telse if (bunny.position.x < _minX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = _minX;\n\t\t\t}\n\n\t\t\tif (bunny.position.y > _maxY) {\n\t\t\t\tbunny.speedY *= -0.85;\n\t\t\t\tbunny.position.y = _maxY;\n\t\t\t\tif (Math.random() > 0.5) bunny.speedY -= Math.random() * 6;\n\t\t\t}\n\t\t\telse if (bunny.position.y < _minY) {\n\t\t\t\tbunny.speedY = 0;\n\t\t\t\tbunny.position.y = _minY;\n\t\t\t}\n\t\t}\n\t}\n\n\toverride public function resize() {\n\t\t_maxX = Browser.window.innerWidth;\n\t\t_maxY = Browser.window.innerHeight;\n\t}\n\n\tpublic function end() {\n\t\t_isAdding = false;\n\t\t_container.removeChildren();\n\t\t_counter = null;\n\t\t_bunnyContainer = null;\n\t\t_count = 0;\n\t\t_bunnyTextures = [];\n\n\t\tBrowser.document.removeEventListener(\"touchstart\", _onTouchStart, true);\n\t\tBrowser.document.removeEventListener(\"touchend\", _onTouchEnd, true);\n\t\tBrowser.document.removeEventListener(\"mousedown\", _onTouchStart, true);\n\t\tBrowser.document.removeEventListener(\"mouseup\", _onTouchEnd, true);\n\t}\n}","package arm.cohere.components.menu;\n\nimport arm.cohere.core.components.ComponentController;\n\nclass MenuController extends ComponentController {\n\n\t@inject public var view:MenuView;\n\n\toverride public function setup() {\n\t\tview.setup();\n\t\tview.demo.add(_onDemoChange);\n\t\tview.fps.add(_onFpsChange);\n\t}\n\n\tfunction _onDemoChange(val:String) {\n\t\tmodel.currentDemo = val.toLowerCase();\n\t}\n\n\tfunction _onFpsChange(val:Int) {\n\t\tmodel.fps = val;\n\t}\n}","package arm.cohere.components.menu;\n\nimport dat.controllers.Controller;\nimport msignal.Signal.Signal1;\nimport dat.gui.GUI;\n\nimport arm.cohere.core.components.ComponentView;\n\nclass MenuView extends ComponentView {\n\n\tpublic var demo:Signal1<String>;\n\tpublic var fps:Signal1<Int>;\n\n\tvar _menu:GUI;\n\tvar _demoList:Controller;\n\tvar _fps:Controller;\n\tvar _data:Dynamic;\n\n\tpublic function setup() {\n\t\tdemo = new Signal1(String);\n\t\tfps = new Signal1(Int);\n\n\t\t_data = { demo: \"\", fps: 60 }\n\n\t\t_menu = new GUI();\n\t\t_demoList = _menu.add(_data, \"demo\", [\"none\", \"Retina\", \"Bunnymark\", \"Spritesheet\", \"Bitmapfont\"]);\n\t\t_demoList.onChange(_changeDemo);\n\n\t\t_fps = _menu.add(_data, \"fps\", 1, 60);\n\t\t_fps.onChange(_changeFps);\n\t}\n\n\tfunction _changeDemo(val:String) {\n\t\tdemo.dispatch(val);\n\t}\n\n\tfunction _changeFps(val:Int) {\n\t\tfps.dispatch(val);\n\t}\n}","package arm.cohere.components.preloader;\n\nimport arm.cohere.core.components.ComponentController;\n\nclass PreloaderController extends ComponentController {\n\n\t@inject public var view:PreloaderView;\n\n\toverride public function init() {\n\t\tsuper.init();\n\t\tview.setup();\n\t\tview.ready.addOnce(_onReady);\n\t}\n\n\toverride public function setup() {\n\t\tview.reset();\n\t\tview = null;\n\t}\n\n\tfunction _onReady() {\n\t\tmodel.preloaderReady = true;\n\t}\n}","package arm.cohere.components.preloader;\n\nimport pixi.core.graphics.Graphics;\nimport msignal.Signal.Signal0;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.display.Container;\nimport arm.cohere.core.components.ComponentView;\n\nclass PreloaderView extends ComponentView {\n\n\tpublic var ready:Signal0;\n\n\tvar _logo:Sprite;\n\tvar _loadingBarContainer:Container;\n\tvar _loadingBar:Graphics;\n\tvar _loadingBarBG:Graphics;\n\n\toverride public function init() {\n\t\tsuper.init();\n\t\tready = new Signal0();\n\t}\n\n\tpublic function setup() {\n\t\tloader.addAsset(AssetsList.PRELOADER_LOGO, AssetsList.PRELOADER_LOGO_PNG);\n\t\tloader.start(_onLoaded);\n\t}\n\n\tfunction _onLoaded() {\n\t\t_logo = new Sprite(loader.getTexture(AssetsList.PRELOADER_LOGO));\n\t\t_logo.anchor.set(0.5);\n\t\t_container.addChild(_logo);\n\n\t\t_createLoadingBar();\n\n\t\tresize();\n\t\tloader.reset();\n\t\tready.dispatch();\n\t}\n\n\tfunction _createLoadingBar() {\n\t\t_loadingBarContainer = new Container();\n\t\t_container.addChild(_loadingBarContainer);\n\n\t\t_loadingBarBG = new Graphics();\n\t\t_loadingBarBG.beginFill(0xD8D8D8);\n\t\t_loadingBarBG.drawRect(0, 0, 204, 26);\n\t\t_loadingBarBG.endFill();\n\n\t\t_loadingBar = new Graphics();\n\t\t_loadingBar.beginFill(0x088A08);\n\t\t_loadingBar.drawRect(0, 0, 200, 22);\n\t\t_loadingBar.endFill();\n\n\t\t_loadingBarContainer.addChild(_loadingBarBG);\n\t\t_loadingBarContainer.addChild(_loadingBar);\n\t\t_loadingBar.x = _loadingBar.y = 2;\n\t\t_loadingBar.scale.x = 0.02;\n\n\t\t_loadingBarContainer.position.set(_logo.x - _loadingBarBG.width / 2, _logo.y + _logo.height / 2 + 25);\n\t}\n\n\tpublic function reset() {\n\t\t_container.removeChild(_logo);\n\t\t_container.removeChild(_loadingBarContainer);\n\t\t_loadingBarContainer = null;\n\t\t_logo = null;\n\t}\n\n\toverride public function update(elapsed:Float) {\n\t\tif (_loadingBar != null) _loadingBar.scale.x = loader.loadProgress / 100;\n\t}\n\n\toverride public function resize() {\n\t\t_container.position.set(stageProperties.screenWidth / 2, stageProperties.screenHeight / 2 - 25);\n\t}\n}","package arm.cohere.components.retina;\n\nimport arm.cohere.model.Model;\nimport arm.cohere.core.components.ComponentController;\nimport bindx.Bind;\n\nclass RetinaController extends ComponentController {\n\n\t@inject public var view:RetinaView;\n\n\toverride public function setup() {\n\t\tBind.bind(model.currentDemo, _onCurrentDemoChange);\n\t}\n\n\tfunction _onCurrentDemoChange(from:String, to:String) {\n\t\tif (to == Model.RETINA) view.start();\n\t\telse view.end();\n\t}\n}","package arm.cohere.components.retina;\n\nimport pixi.core.textures.Texture;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.text.Text;\nimport js.Browser;\nimport arm.cohere.core.components.ComponentView;\n\nclass RetinaView extends ComponentView {\n\n\tvar _img:Sprite;\n\tvar _label:Text;\n\n\toverride public function addAssetsToLoad() {\n\t\tloader.addAsset(AssetsList.RETINA_IMG, AssetsList.RETINA_IMG_JPG);\n\t}\n\n\tfunction _getPixelRatio():Float {\n\t\treturn (Browser.window.devicePixelRatio >= 2) ? 2 : 1;\n\t}\n\n\tpublic function start() {\n\t\t_img = new Sprite(loader.getTexture(AssetsList.RETINA_IMG));\n\t\t_img.anchor.set(0.5);\n\t\t_img.name = \"img\";\n\t\t_img.position.set(Browser.window.innerWidth / 2, Browser.window.innerHeight / 2);\n\t\t_container.addChild(_img);\n\n\t\t_label = new Text(\"Pixel Ratio: \" + _getPixelRatio(), { fill: \"#105CB6\", font: \"bold 12px Courier\" });\n\t\t_container.addChild(_label);\n\t}\n\n\tpublic function end() {\n\t\t_container.removeChildren();\n\t\t_img = null;\n\t\t_label = null;\n\t}\n}","package arm.cohere.components.spritesheet;\n\nimport arm.cohere.model.Model;\nimport arm.cohere.core.components.ComponentController;\nimport bindx.Bind;\n\nclass SpritesheetController extends ComponentController {\n\n\t@inject public var view:SpritesheetView;\n\n\toverride public function setup() {\n\t\tBind.bind(model.currentDemo, _onCurrentDemoChange);\n\t}\n\n\tfunction _onCurrentDemoChange(from:String, to:String) {\n\t\tif (to == Model.SPRITESHEET) view.start();\n\t\telse view.end();\n\t}\n}","package arm.cohere.components.spritesheet;\n\nimport pixi.extras.MovieClip;\nimport js.html.Event;\nimport pixi.core.textures.Texture;\nimport pixi.core.text.Text;\nimport js.Browser;\nimport arm.cohere.core.components.ComponentView;\n\nclass SpritesheetView extends ComponentView {\n\n\tvar _counter:Text;\n\tvar _fighterTextures:Array<Texture>;\n\tvar _count:Int;\n\tvar _isAdding:Bool;\n\n\toverride public function addAssetsToLoad() {\n\t\tloader.addAsset(AssetsList.SPRITESHEET_FIGHTER, AssetsList.SPRITESHEET_FIGHTER_JSON);\n\t}\n\n\tpublic function start() {\n\t\t_count = 0;\n\t\t_isAdding = false;\n\t\t_fighterTextures = [];\n\n\t\tfor (i in 0 ... 29) {\n\t\t\tvar frame:String = \"\" + i;\n\t\t\tif (i < 10) frame = \"0\" + frame;\n\t\t\t_fighterTextures.push(loader.getTexture(\"rollSequence00\" + frame + \".png\"));\n\t\t}\n\n\t\t_counter = new Text(_count + \" SPRITES\", { fill: \"#105CB6\", font: \"bold 12px Courier\" });\n\t\t_container.addChild(_counter);\n\n\t\t_addFighter(Browser.window.innerWidth / 2, Browser.window.innerHeight / 2);\n\n\t\tBrowser.document.addEventListener(\"touchstart\", _onTouchStart, true);\n\t\tBrowser.document.addEventListener(\"touchend\", _onTouchEnd, true);\n\t\tBrowser.document.addEventListener(\"mousedown\", _onTouchStart, true);\n\t\tBrowser.document.addEventListener(\"mouseup\", _onTouchEnd, true);\n\t}\n\n\tfunction _onTouchStart(event:Event) {\n\t\t_isAdding = true;\n\t}\n\n\tfunction _onTouchEnd(event:Event) {\n\t\t_isAdding = false;\n\t}\n\n\tfunction _addFighter(x:Float, y:Float) {\n\t\tvar fighter:MovieClip = new MovieClip(_fighterTextures);\n\t\tfighter.anchor.set(0.5);\n\t\tfighter.position.set(x, y);\n\t\tfighter.play();\n\n\t\t_container.addChild(fighter);\n\t\t_count++;\n\t\t_counter.text = _count + \" SPRITES\";\n\t}\n\n\toverride public function update(elapsedTime:Float) {\n\t\tif (_isAdding) _addFighter(Std.random(Browser.window.innerWidth), Std.random(Browser.window.innerHeight));\n\t}\n\n\tpublic function end() {\n\t\t_container.removeChildren();\n\t\t_count = 0;\n\t\t_isAdding = false;\n\t\t_fighterTextures = [];\n\n\t\tBrowser.document.removeEventListener(\"touchstart\", _onTouchStart, true);\n\t\tBrowser.document.removeEventListener(\"touchend\", _onTouchEnd, true);\n\t\tBrowser.document.removeEventListener(\"mousedown\", _onTouchStart, true);\n\t\tBrowser.document.removeEventListener(\"mouseup\", _onTouchEnd, true);\n\t}\n}","package arm.cohere.controller;\n\nimport minject.Injector;\nimport arm.cohere.core.components.ComponentModel;\nimport arm.cohere.core.components.ComponentView;\nimport arm.cohere.core.utils.StageProperties;\nimport arm.cohere.core.components.ComponentController;\nimport arm.cohere.core.loader.AssetLoader;\nimport arm.cohere.view.View;\nimport arm.cohere.model.Model;\n\nclass Controller {\n\n\t@inject public var model:Model;\n\t@inject public var view:View;\n\t@inject public var stageProperties:StageProperties;\n\n\tpublic var componentControllers:Array<ComponentController>;\n\n\tvar _loader:AssetLoader;\n\tvar _componentViews:Array<ComponentView>;\n\n\tpublic function new() {\n\t\tCompileTime.importPackage(\"arm.cohere.components\");\n\t\tcomponentControllers = [];\n\t\t_componentViews = [];\n\t}\n\n\tpublic function init() {\n\t\tmodel.init();\n\t\tview.init();\n\n\t\tmodel.addAssets.addOnce(_onAddAssets);\n\n\t\t_setupLoader();\n\t\t_setupComponents();\n\t}\n\n\tinline function _setupLoader() {\n\t\t_loader = new AssetLoader();\n\t\t_loader.baseUrl = \"resources/\";\n\t\t_loader.pixelRatio = stageProperties.pixelRatio;\n\t\t//_loader.resolution = stageProperties.bucketWidth + \"x\" + stageProperties.bucketHeight;\n\t}\n\n\tfunction _onAddAssets() {\n\t\tview.addAssetsToLoad();\n\t\tfor (view in _componentViews) view.addAssetsToLoad();\n\t\t_loader.start(_onPreloadingComplete);\n\t}\n\n\tfunction _onPreloadingComplete() {\n\t\tfor (controller in componentControllers) controller.setup();\n\t\t_componentViews = null;\n\t}\n\n\tfunction _setupComponents() {\n\t\tvar models:List<Class<ComponentModel>> = CompileTime.getAllClasses(ComponentModel);\n\t\tvar views:List<Class<ComponentView>> = CompileTime.getAllClasses(ComponentView);\n\t\tvar controllers:List<Class<ComponentController>> = CompileTime.getAllClasses(ComponentController);\n\n\t\tvar viewInjector = new Injector();\n\t\tviewInjector.mapValue(AssetLoader, _loader);\n\t\tviewInjector.injectInto(view);\n\n\t\tvar modelMap:Map<String, Class<ComponentModel>> = new Map();\n\t\tfor (modelClass in models) modelMap.set(Type.getClassName(modelClass).split(\".\").pop(), modelClass);\n\n\t\tvar viewMap:Map<String, Class<ComponentView>> = new Map();\n\t\tfor (viewClass in views) viewMap.set(Type.getClassName(viewClass).split(\".\").pop(), viewClass);\n\n\t\tfor (controllerClass in controllers) {\n\t\t\tvar controllerName = Type.getClassName(controllerClass).split(\".\").pop();\n\t\t\tcontrollerName = controllerName.substring(0, controllerName.indexOf(\"Controller\"));\n\t\t\tvar modelClass = modelMap.get(controllerName + \"Model\");\n\t\t\tvar viewClass = viewMap.get(controllerName + \"View\");\n\t\t\t_setupComponent(modelClass, viewClass, controllerClass);\n\t\t}\n\n\t\t_componentViews.sort(function(comp1:ComponentView, comp2:ComponentView):Int {\n\t\t\treturn Reflect.compare(comp1.index, comp2.index);\n\t\t});\n\n\t\tfor (view in _componentViews) view.applyIndex();\n\t}\n\n\tfunction _setupComponent(modelClass:Class<ComponentModel>, viewClass:Class<ComponentView>, controllerClass:Class<ComponentController>) {\n\t\tvar componentInjector = new Injector();\n\t\tcomponentInjector.mapValue(Model, model);\n\n\t\tvar componentModel:ComponentModel = null;\n\t\tvar componentView:ComponentView = null;\n\n\t\tif (modelClass != null) {\n\t\t\tcomponentModel = Type.createInstance(modelClass, []);\n\t\t\tcomponentInjector.mapValue(modelClass, componentModel);\n\n\t\t\tvar modelInjector = new Injector();\n\t\t\tmodelInjector.mapValue(Model, model);\n\t\t\tmodelInjector.injectInto(componentModel);\n\n\t\t\tcomponentModel.init();\n\t\t}\n\n\t\tif (viewClass != null) {\n\t\t\tvar viewName = Type.getClassName(viewClass).split(\".\").pop();\n\t\t\tcomponentView = Type.createInstance(viewClass, [view, viewName]);\n\t\t\tcomponentInjector.mapValue(viewClass, componentView);\n\n\t\t\tvar viewInjector = new Injector();\n\t\t\tviewInjector.mapValue(AssetLoader, _loader);\n\t\t\tviewInjector.mapValue(StageProperties, stageProperties);\n\t\t\tviewInjector.injectInto(componentView);\n\n\t\t\tcomponentView.init();\n\t\t\t_componentViews.push(cast(componentView, ComponentView));\n\t\t}\n\n\t\tvar componentController:ComponentController = Type.createInstance(controllerClass, []);\n\t\tcomponentInjector.injectInto(componentController);\n\t\tcomponentController.init();\n\t\tcomponentControllers.push(componentController);\n\t}\n\n\tpublic function reset() {\n\t\tmodel.reset();\n\t\tview.reset();\n\t}\n}","/****\n* Copyright (c) 2013 Jason O'Neil\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n* \n****/\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Format;\nimport haxe.Json;\nusing StringTools;\nusing Lambda;\n\nclass CompileTime \n{\n    /** Inserts a date object of the date and time that this was compiled */\n    macro public static function buildDate():ExprOf<Date> {\n        var date = Date.now();\n        var year = toExpr(date.getFullYear());\n        var month = toExpr(date.getMonth());\n        var day = toExpr(date.getDate());\n        var hours = toExpr(date.getHours());\n        var mins = toExpr(date.getMinutes());\n        var secs = toExpr(date.getSeconds());\n        return macro new Date($year, $month, $day, $hours, $mins, $secs);\n    }\n\n    /** Returns a string of the date and time that this was compiled */\n    macro public static function buildDateString():ExprOf<String> {\n        return toExpr(Date.now().toString());\n    }\n\n    /** Reads a file at compile time, and inserts the contents into your code as a string.  The file path is resolved using `Context.resolvePath`, so it will search all your class paths */\n    macro public static function readFile(path:String):ExprOf<String> {\n        return toExpr(loadFileAsString(path));\n    }\n\n    /** Reads a file at compile time, and inserts the contents into your code as an interpolated string, similar to using 'single $quotes'.  */\n    macro public static function interpolateFile(path:String):ExprOf<String> {\n        return Format.format( toExpr(loadFileAsString(path)) );\n    }\n\n    /** Same as readFile, but checks that the file is valid Json */\n    macro public static function readJsonFile(path:String):ExprOf<String> {\n        var content = loadFileAsString(path);\n        try Json.parse(content) catch (e:Dynamic) {\n            haxe.macro.Context.error('Json from $path failed to validate: $e', Context.currentPos());\n        }\n        return toExpr(content);\n    }\n\n    /** Same as readFile, but checks that the file is valid Json */\n    macro public static function parseJsonFile(path:String):ExprOf<{}> {\n        var content = loadFileAsString(path);\n        var obj = try Json.parse(content) catch (e:Dynamic) {\n            haxe.macro.Context.error('Json from $path failed to validate: $e', Context.currentPos());\n        }\n        return toExpr(obj);\n    }\n\n    /** Same as readFile, but checks that the file is valid Xml */\n    macro public static function readXmlFile(path:String):ExprOf<String> {\n        var content = loadFileAsString(path);\n        try Xml.parse(content) catch (e:Dynamic) {\n            haxe.macro.Context.error('Xml from $path failed to validate: $e', Context.currentPos());\n        }\n        return toExpr(content);\n    }\n\n    #if markdown\n        /** Same as readFile, but checks that the file is valid Xml */\n        macro public static function readMarkdownFile(path:String):ExprOf<String> {\n            var content = loadFileAsString(path);\n            try {\n                content = Markdown.markdownToHtml( content );\n                Xml.parse(content); \n            } catch (e:Dynamic) {\n                haxe.macro.Context.error('Markdown from $path did not produce valid XML: $e', Context.currentPos());\n            }\n            return toExpr(content);\n        }\n    #end\n\n    /** Import a package at compile time.  Is a simple mapping to haxe.macro.Compiler.include(), but means you don't have to wrap your code in conditionals. */\n    macro public static function importPackage(path:String, ?recursive:Bool = true, ?ignore : Array<String>, ?classPaths : Array<String>) {\n        haxe.macro.Compiler.include(path, recursive, ignore, classPaths);\n        return toExpr(0);\n    }\n\n    /** Returns an Array of Classes.  By default it will return all classes, but you can also search for classes in a particular package, \n    classes that extend a particular type, and you can choose whether to look for classes recursively or not. */\n    macro public static function getAllClasses<T>(?inPackage:String, ?includeChildPackages:Bool = true, ?extendsBaseClass:ExprOf<Class<T>>):ExprOf<Iterable<Class<T>>> {\n        var p = Context.currentPos();\n        var baseClass:ClassType = getClassTypeFromExpr(extendsBaseClass);\n        var baseClassName:String = (baseClass == null) ? \"\" : baseClass.pack.join('.') + '.' + baseClass.name;\n        var listIDExpr = toExpr(inPackage + \",\" + includeChildPackages + \",\" + baseClassName);\n        Context.onGenerate(checkForMatchingClasses.bind(inPackage, includeChildPackages, baseClass, listIDExpr, p));\n        if (extendsBaseClass!=null)\n            return macro CompileTimeClassList.getTyped($listIDExpr, $extendsBaseClass);\n        else\n            return macro CompileTimeClassList.get($listIDExpr);\n    }\n\n    #if macro\n        static function toExpr(v:Dynamic) {\n            return Context.makeExpr(v, Context.currentPos());\n        }\n\n        static function loadFileAsString(path:String) {\n            try {\n                var p = Context.resolvePath(path);\n                Context.registerModuleDependency(Context.getLocalModule(),p);\n                return sys.io.File.getContent(p);\n            } \n            catch(e:Dynamic) {\n                return haxe.macro.Context.error('Failed to load file $path: $e', Context.currentPos());\n            }\n        }\n\n        static function isSameClass(a:ClassType, b:ClassType):Bool {\n            return (\n                a.pack.join(\".\") == b.pack.join(\".\")\n                && a.name == b.name \n            );\n        }\n\n        static function implementsInterface(cls:ClassType, interfaceToMatch:ClassType):Bool {\n            while (cls!=null) {\n                for ( i in cls.interfaces ) {\n                    if (isSameClass(i.t.get(), interfaceToMatch)) {\n                        return true;\n                    }\n                }\n                if (cls.superClass!=null) {\n                    cls = cls.superClass.t.get();\n                }\n                else cls = null;\n            }\n            return false;\n        }\n\n        static function isSubClassOfBaseClass(subClass:ClassType, baseClass:ClassType):Bool {\n            var cls = subClass;\n            while (cls.superClass != null)\n            {\n                cls = cls.superClass.t.get();\n                if (isSameClass(baseClass, cls)) { return true; }\n            }\n            return false;\n        }\n\n        static function getClassTypeFromExpr(e:Expr):ClassType {\n            var ct:ClassType = null;\n            var fullClassName = null;\n            var parts = new Array<String>();\n            var nextSection = e.expr;\n            while (nextSection != null) {\n                // Break the loop unless we explicitly encounter a next section...\n                var s = nextSection;\n                nextSection = null;\n\n                switch (s) {\n                    // Might be a direct class name, no packages\n                    case EConst(c):\n                        switch (c) {\n                            case CIdent(s):\n                                if (s != \"null\") parts.unshift(s);\n                            default:\n                        }\n                    // Might be a fully qualified package name\n                    // { expr => EField({ expr => EField({ expr => EConst(CIdent(sys)), pos => #pos(src/server/Server.hx:35: characters 53-56) },db), pos => #pos(src/server/Server.hx:35: characters 53-59) },Object), pos => #pos(src/server/Server.hx:35: characters 53-66) }\n                    case EField(e, field):\n                        parts.unshift(field);\n                        nextSection = e.expr;\n                    default:\n                }\n            }\n            fullClassName = parts.join(\".\");\n            if (fullClassName != \"\") {\n                switch (Context.getType(fullClassName)) {\n                    case TInst(classType, _):\n                        ct = classType.get();\n                    default:\n                        throw \"Currently CompileTime.getAllClasses() can only search by package name or base class, not interface, typedef etc.\";\n                }\n            }\n            return ct;\n        }\n\n        static function checkForMatchingClasses(?inPackage:String, ?includeChildPackages:Bool = true, ?baseClass:ClassType, listIDExpr:Expr, p:Position, arr:Array<haxe.macro.Type>) {\n            var classesFound:Array<String> = [];\n            for (type in arr) {\n                switch (type) {\n                    // We only care for Classes \n                    case TInst(t, _):\n                        var include = true;\n\n                        if (t.get().isInterface)\n                            include = false;\n\n                        // Check if it belongs to a certain package or subpackage\n                        if (inPackage != null) {\n                            if (includeChildPackages) {\n                                if (t.toString().startsWith(inPackage) == false) \n                                    include = false;\n                            }\n                            else {\n                                var re = new EReg(\"^\" + inPackage + \"\\\\.([A-Z][a-zA-Z0-9]*)$\", \"\");\n                                if (re.match(t.toString()) == false)\n                                    include = false;\n                            }\n                        }\n\n                        // Check if it is a subclass of a certain type\n                        if (baseClass != null) {\n                            if (baseClass.isInterface) {\n                                if (implementsInterface(t.get(), baseClass) == false)\n                                    include = false;\n                            }\n                            else {\n                                if (isSubClassOfBaseClass(t.get(), baseClass) == false)\n                                    include = false;\n                            }\n                        }\n\n                        if (include) \n                            classesFound.push(t.toString()); \n                    default:\n                }\n            }\n\n            // Create a list of all the qualified class names\n            var classNames = classesFound.map(function (c) { return c.toString(); });\n            var classNamesExpr = toExpr(classNames.join(\",\"));\n\n            // Get the CompileTimeClassList class\n            var ct:ClassType = null;\n            switch (Context.getType(\"CompileTimeClassList\")) {\n                case TInst(classType, _):\n                    ct = classType.get();\n                default:\n            }\n\n            // If the @classLists metadata already exists, get a copy of it and remove it\n            // (We'll re-add it in a minute)\n            var classListsMetaArray:Array<Expr>;\n            if (ct.meta.has('classLists')) {\n                classListsMetaArray = ct.meta.get().filter(function (i) { return i.name == \"classLists\"; })[0].params;\n                ct.meta.remove('classLists');\n            }\n            else {\n                classListsMetaArray = [];\n            }\n            \n            // Add the class names to CompileTimeClassList as metadata\n            var itemAsArray = macro [$listIDExpr, $classNamesExpr];\n            classListsMetaArray.push(itemAsArray);\n            ct.meta.add('classLists', classListsMetaArray, Context.currentPos());\n\n            return;\n        }\n    #end\n}\n","package arm.cohere.core.components;\n\nimport arm.cohere.model.Model;\n\n@:keepSub class ComponentModel  {\n\n\t@inject public var model:Model;\n\n\tpublic function new() {}\n\n\tpublic function init() {}\n\n\tpublic function reset() {}\n}","package arm.cohere.core.loader;\n\nimport howler.Howler;\nimport pixi.loaders.Resource;\nimport pixi.core.textures.Texture;\nimport pixi.loaders.Loader;\n\nclass AssetLoader extends Loader {\n\n\tpublic var pixelRatio(null, default):Float;\n\tpublic var count(default, null):Int;\n\tpublic var loadProgress:Float;\n\tpublic var resolution(default, default):String;\n\tpublic var muteAudio(default, set):Bool;\n\n\tvar _onComplete:Void -> Void;\n\tvar _onProgress:Void -> Void;\n\tvar _loadCount:Int;\n\tvar _audioCount:Int;\n\tvar _audioKeys:Array<String>;\n\tvar _audioAssets:Map<String, AudioAsset>;\n\tvar _audioAssetPaths:Map<String, String>;\n\n\tpublic function new() {\n\t\tsuper();\n\t\tcount = 0;\n\t\tloadProgress = 0;\n\t\tpixelRatio = 1;\n\t\t_loadCount = 0;\n\t\t_audioCount = 0;\n\t\t_audioKeys = [];\n\t\t_audioAssets = new Map();\n\t\t_audioAssetPaths = new Map();\n\t\tMultipackParser.loader = this;\n\t\tuse(MultipackParser.parse);\n\t}\n\n\tpublic function start(?onComplete:Void -> Void, ?onProgress:Void -> Void) {\n\t\t_onComplete = onComplete;\n\t\t_onProgress = onProgress;\n\n\t\tif (_audioCount > 0) _loadAudioAsset();\n\t\telse load(_onComplete);\n\t}\n\n\tfunction _loadAudioAsset() {\n\t\tvar id = _audioKeys.pop();\n\t\t_audioAssets.set(id, new AudioAsset(baseUrl + _audioAssetPaths.get(id), false, false, _onAudioAssetLoaded, _onAudioAssetLoadError));\n\t}\n\n\tfunction _onAudioAssetLoaded() {\n\t\t_checkAudioLoadCount();\n\t}\n\n\tfunction _onAudioAssetLoadError() {\n\t\t_checkAudioLoadCount();\n\t}\n\n\tinline function _checkAudioLoadCount() {\n\t\t_loadCount++;\n\t\tif (_loadCount == _audioCount) {\n\t\t\tif (count - _audioCount > 0) load(_onComplete);\n\t\t\telse _onComplete();\n\t\t}\n\t\telse if (_audioKeys.length > 0) _loadAudioAsset();\n\t\t_checkProgress();\n\t}\n\n\tfunction _onAssetLoaded(resource:Resource) {\n\t\t_loadCount++;\n\t\t_checkProgress();\n\t}\n\n\tfunction _checkProgress() {\n\t\tloadProgress = (_loadCount / count) * 100;\n\t\tif (_onProgress != null) _onProgress();\n\t}\n\n\tpublic inline function addAudioAsset(id:String, path:String) {\n\t\tcount++;\n\t\t_audioCount++;\n\t\t_audioAssetPaths.set(id, path);\n\t\t_audioKeys.push(id);\n\t}\n\n\tpublic function addAsset(id:String, path:String, ?usePixelRatio:Bool = true) {\n\t\tif (!exists(id)) {\n\t\t\tvar url:String = \"\";\n\t\t\tif (usePixelRatio) {\n\t\t\t\tif (AssetsList.exists(baseUrl + getResoultionPath() + getPixelRatioPath() + path)) {\n\t\t\t\t\turl = getResoultionPath() + getPixelRatioPath() + path;\n\t\t\t\t}\n\t\t\t\telse if (AssetsList.exists(baseUrl + getResoultionPath() + getPixelRatioPath(1) + path)) {\n\t\t\t\t\turl = getResoultionPath() + getPixelRatioPath(1) + path;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (AssetsList.exists(baseUrl + getResoultionPath() + path)) url = getResoultionPath() + path;\n\t\t\telse if (AssetsList.exists(baseUrl + path)) url = path;\n\n\t\t\tif (url != \"\") {\n\t\t\t\tadd(id, url, { loadType: _getLoadtype(path) }, _onAssetLoaded);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse JConsole.info(\"'\" + baseUrl + path + \"' not availabble in AssetList. Make sure the asset is available or run the build to update AssetsList\");\n\t\t}\n\t}\n\n\tpublic inline function getUrl(id:String):String {\n\t\treturn Reflect.field(resources, id) != null ? Reflect.field(resources, id).url : null;\n\t}\n\n\t@SuppressWarnings(\"checkstyle:Dynamic\")\n\tpublic function getJson(id:String):Dynamic {\n\t\tvar resource:Resource = Reflect.field(resources, id);\n\t\tif (resource != null && ~/(json|text|txt)/i.match(resource.xhrType)) return resource.data;\n\t\telse JConsole.error(\"JSON wth index '\" + id + \"' not found\");\n\t\treturn null;\n\t}\n\n\tpublic function getTexture(id:String):Texture {\n\t\tvar resource:Resource = Reflect.field(resources, id);\n\t\tif (resource != null && resource.texture != null) return resource.texture;\n\t\telse if (Texture.fromFrame(id) != null) return Texture.fromFrame(id);\n\t\telse JConsole.error(\"Texture with id '\" + id + \"' not found\");\n\t\treturn null;\n\t}\n\n\tpublic function getTextureFromSpritesheet(id:String, frame:String):Texture {\n\t\tvar resource:Resource = Reflect.field(resources, id);\n\t\tif (resource != null && resource.isJson && resource.textures != null) {\n\t\t\tvar texture = Reflect.field(resource.textures, frame);\n\t\t\tif (texture != null) return texture;\n\t\t\telse JConsole.error(\"Texture with frame'\" + frame + \"' not found in \" + id);\n\t\t}\n\t\telse JConsole.error(\"Spritesheet with id '\" + id + \"' not found\");\n\t\treturn null;\n\t}\n\n\tpublic inline function exists(id:String):Bool {\n\t\treturn (Reflect.field(resources, id) != null);\n\t}\n\n\tpublic function playAudio(id:String, ?loop:Bool = false, ?onend:Void -> Void) {\n\t\tvar snd:AudioAsset = _audioAssets.get(id);\n\t\tsnd.play(loop, onend);\n\t}\n\n\tpublic function playAudioOnDemand(id:String, url:String, ?loop:Bool = false, ?onend:Void -> Void) {\n\t\tJConsole.log(\"ID: \" + id);\n\t\tvar snd:AudioAsset;\n\t\tif (_audioAssets.get(id) == null) {\n\t\t\tsnd = new AudioAsset(baseUrl + url, true, loop);\n\t\t\t_audioAssets.set(id, snd);\n\t\t}\n\t\telse {\n\t\t\tsnd = _audioAssets.get(id);\n\t\t\tsnd.play(loop, onend);\n\t\t}\n\t}\n\n\tpublic function getAudio(id:String):AudioAsset {\n\t\tif (_audioAssets.get(id) != null) return _audioAssets.get(id);\n\t\telse JConsole.error(\"Audio with id '\" + id + \"' not found\");\n\t\treturn null;\n\t}\n\n\toverride public function reset() {\n\t\tremoveAllListeners();\n\t\tcount = 0;\n\t\t_loadCount = 0;\n\t\t_audioCount = 0;\n\t\tloadProgress = 0;\n\t\t_audioKeys = [];\n\t\tresources = {};\n\t\tsuper.reset();\n\t}\n\n\tpublic inline function getResoultionPath():String {\n\t\treturn (resolution != null) ? resolution + \"/\" : \"\";\n\t}\n\n\tpublic inline function getPixelRatioPath(?val:Float):String {\n\t\treturn (val != null) ? \"@\" + val + \"x/\" : \"@\" + pixelRatio + \"x/\";\n\t}\n\n\tfunction set_muteAudio(val:Bool):Bool {\n\t\tHowler.mute(val);\n\t\treturn muteAudio = val;\n\t}\n\n\tfunction _getLoadtype(asset:String):Int {\n\t\t//type: XHR: 1, IMAGE: 2, AUDIO: 3, VIDEO: 4\n\t\tif (~/(.png|.gif|.svg|.jpg|.jpeg|.bmp)/i.match(asset)) return 2;\n\t\telse if (~/(.mp3|.wav|.ogg|.aac|.m4a|.oga|.webma)/i.match(asset)) return 3;\n\t\telse if (~/(.mp4|.webm|.m3u8)/i.match(asset)) return 4;\n\t\treturn 1;\n\t}\n}","package arm.cohere.core.loader;\n\nimport howler.Howl;\n\nclass AudioAsset {\n\n\tpublic var volume(default, set):Float;\n\n\tvar _snd:Howl;\n\n\tpublic function new(path:String, ?autoPlay:Bool = false, ?loop:Bool = false, ?loadComplete:Void -> Void, ?loadError:Void -> Void) {\n\t\tvar options:HowlOptions = {};\n\t\toptions.src = [path];\n\t\toptions.autoplay = autoPlay;\n\t\toptions.loop = loop;\n\t\tif (loadComplete != null) options.onload = loadComplete;\n\t\tif (loadError != null) options.onloaderror = loadError;\n\t\t_snd = new Howl(options);\n\t}\n\n\tpublic function play(?loop:Bool = false, ?onend:Void -> Void) {\n\t\tif (_snd.playing()) _snd.stop();\n\t\t_snd.play();\n\t\t_snd.loop(loop);\n\t\tif (onend != null) _snd.once(\"end\", onend);\n\t}\n\n\tpublic function stop() {\n\t\t_snd.stop();\n\t}\n\n\tpublic function pause() {\n\t\t_snd.pause();\n\t}\n\n\tfunction set_volume(val:Float):Float {\n\t\t_snd.volume(val);\n\t\treturn volume = val;\n\t}\n}","package arm.cohere.core.loader;\n\nimport pixi.loaders.Resource;\nimport pixi.core.utils.Utils;\nimport pixi.core.math.shapes.Rectangle;\nimport pixi.core.textures.Texture;\n\nclass MultipackParser {\n\n\tpublic static var loader:AssetLoader;\n\n\tpublic static function parse(resource:Resource, next:Void -> Void) {\n\t\tvar data:MultipackSpriteSheet = resource.data;\n\t\tif (data != null && data.multipack) {\n\t\t\tvar textures:Array<MultipackTexture> = data.textures;\n\t\t\tvar imgCount:Int = textures.length;\n\t\t\tvar imgLoadedCount:Int = 0;\n\t\t\tvar resolution:Float = Utils.getResolutionOfUrl(resource.url);\n\n\t\t\tvar baseURL:String = resource.url.split(loader.baseUrl)[1];\n\t\t\tbaseURL = baseURL.substring(0, baseURL.lastIndexOf(\"/\") + 1);\n\n\t\t\tfor (texture in textures) {\n\t\t\t\tvar url:String = baseURL + texture.meta.image;\n\t\t\t\tloader.add(texture.meta.image, url, { loadType: 2, crossOrigin:resource.crossOrigin }, function(image:Resource) {\n\n\t\t\t\t\tvar frames:Array<FrameData> = texture.frames;\n\t\t\t\t\tfor (n in Reflect.fields(frames)) {\n\t\t\t\t\t\tvar frameData:FrameData = Reflect.field(frames, n);\n\t\t\t\t\t\tvar rect = frameData.frame;\n\t\t\t\t\t\tif (rect != null) {\n\t\t\t\t\t\t\tvar size:Rectangle = new Rectangle(rect.x, rect.y, rect.w, rect.h);\n\t\t\t\t\t\t\tvar trim:Rectangle = null;\n\n\t\t\t\t\t\t\tif (frameData.trimmed) {\n\t\t\t\t\t\t\t\tvar actualSize = frameData.sourceSize;\n\t\t\t\t\t\t\t\tvar realSize = frameData.spriteSourceSize;\n\t\t\t\t\t\t\t\ttrim = new Rectangle(realSize.x / resolution, realSize.y / resolution, actualSize.w / resolution, actualSize.h / resolution);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsize.x /= resolution;\n\t\t\t\t\t\t\tsize.y /= resolution;\n\t\t\t\t\t\t\tsize.width /= resolution;\n\t\t\t\t\t\t\tsize.height /= resolution;\n\n\t\t\t\t\t\t\tTexture.addTextureToCache(new Texture(image.texture.baseTexture, size, size.clone(), trim), n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tnext();\n\t\t}\n\t\telse next();\n\t}\n}\n\ntypedef MultipackSpriteSheet = {\n\tvar multipack:Bool;\n\tvar textures:Array<MultipackTexture>;\n}\n\ntypedef MultipackTexture = {\n\tvar frames:Array<FrameData>;\n\tvar meta:MetaData;\n}\n\ntypedef FrameData = {\n\tvar frame:Frame;\n\tvar rotated:Bool;\n\tvar trimmed:Bool;\n\tvar format:String;\n\tvar spriteSourceSize:SpriteSourceSize;\n\tvar sourceSize:SourceSize;\n}\n\ntypedef Frame = {\n\tvar x:Float;\n\tvar y:Float;\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef SpriteSourceSize = {\n\tvar x:Float;\n\tvar y:Float;\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef SourceSize = {\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef MetaData = {\n\tvar app:String;\n\tvar version:String;\n\tvar image:String;\n\tvar format:String;\n\tvar size:String;\n\tvar scale:String;\n\tvar smartupdate:String;\n}","package arm.cohere.core.utils;\n\nimport js.Browser;\n\nclass BrowserUtils {\n\n\tpublic static function getPixelRatio():Float {\n\t\tvar pixelRatio:Int = (Browser.window.devicePixelRatio <= 2) ? Math.floor(Browser.window.devicePixelRatio) : 2;\n\t\tif (isiOS() && (Browser.window.screen.width == 320 && Browser.window.screen.height == 480)) pixelRatio = 1;\n\t\tif (pixelRatio < 1) pixelRatio = 1;\n\t\t//if (isiOS() && pixelRatio > 1 && getiOSVersion()[0] < 8) pixelRatio = 1;\n\t\tJConsole.info(\"Pixel Ratio: \" + pixelRatio);\n\t\treturn pixelRatio;\n\t}\n\n\tpublic static function isAndroid():Bool {\n\t\treturn ~/Android/i.match(Browser.navigator.userAgent);\n\t}\n\n\tpublic static function isiOS():Bool {\n\t\treturn ~/(iPad|iPhone|iPod)/i.match(Browser.navigator.userAgent);\n\t}\n\n\tpublic static function getiOSVersion():Array<Int> {\n\t\tvar v:EReg = ~/[0-9_]+?[0-9_]+?[0-9_]+/i;\n\t\tvar matched:Array<Int> = [];\n\t\tif (v.match(Browser.navigator.userAgent)) {\n\t\t\tvar match:Array<String> = v.matched(0).split(\"_\");\n\t\t\tmatched = [for (i in match) Std.parseInt(i)];\n\t\t}\n\t\tJConsole.info(\"iOS v\" + matched);\n\t\treturn matched;\n\t}\n\n\tpublic static function isMobile():Bool {\n\t\tvar ua = Browser.navigator.userAgent;\n\t\treturn (~/Android/i.match(ua) || ~/webOS/i.match(ua)\n\t\t|| ~/iPhone/i.match(ua) || ~/iPad/i.match(ua) || ~/iPod/i.match(ua)\n\t\t|| ~/BlackBerry/i.match(ua) || ~/Windows Phone/i.match(ua));\n\t}\n\n\tpublic static function isChrome():Bool{\n\t\treturn Browser.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1;\n\t}\n\n\tpublic static function refreshWindow() {\n\t\tJConsole.log(Browser.window.document.location.href);\n\t\tBrowser.window.document.location.href = Browser.window.document.location.href;\n\t}\n}","package arm.cohere.core.utils;\n\nclass StageProperties {\n\n\tpublic static inline var LANDSCAPE:String = \"LANDSCAPE\";\n\tpublic static inline var PORTRAIT:String = \"PORTRAIT\";\n\n\tpublic static inline var BUCKET_OVERLAP_FULL:String = \"BUCKET_OVERLAP_FULL\";\n\tpublic static inline var BUCKET_OVERLAP_HORIZONTAL:String = \"BUCKET_OVERLAP_HORIZONTAL\";\n\tpublic static inline var BUCKET_OVERLAP_VERTICAL:String = \"BUCKET_OVERLAP_VERTICAL\";\n\n\tpublic var actualPixelRatio:Float;\n\tpublic var pixelRatio:Float;\n\tpublic var screenWidth:Float;\n\tpublic var screenHeight:Float;\n\tpublic var bucketWidth:Float;\n\tpublic var bucketHeight:Float;\n\tpublic var screenX:Float;\n\tpublic var screenY:Float;\n\tpublic var orientation:String;\n\tpublic var bucketOverlapType:String;\n\n\tpublic function new() {\n\t\tpixelRatio = 1;\n\t\tscreenWidth = 1024;\n\t\tscreenHeight = 768;\n\t\tbucketWidth = 1024;\n\t\tbucketHeight = 768;\n\t\tscreenX = 0;\n\t\tscreenY = 0;\n\t}\n}","package arm.cohere.model;\n\nimport msignal.Signal.Signal0;\nimport msignal.Signal.Signal1;\nimport bindx.Bind;\nimport bindx.IBindable;\n\nusing bindx.Bind;\n\nclass Model implements IBindable {\n\n\tpublic static inline var BUNNYMARK:String = \"bunnymark\";\n\tpublic static inline var RETINA:String = \"retina\";\n\tpublic static inline var SPRITESHEET:String = \"spritesheet\";\n\tpublic static inline var BITMAPFONT:String = \"bitmapfont\";\n\n\tpublic var addAssets:Signal0;\n\tpublic var updateFps:Signal1<Int>;\n\n\tpublic var preloaderReady(default, set):Bool;\n\tpublic var fps(default, set):Int;\n\n\t@:bindable public var currentDemo:String;\n\n\tpublic function new() {\n\t\taddAssets = new Signal0();\n\t\tupdateFps = new Signal1(Int);\n\t}\n\n\tpublic function init() {}\n\n\tpublic function reset() {}\n\n\tfunction set_preloaderReady(val:Bool):Bool {\n\t\tif (val) addAssets.dispatch();\n\t\treturn preloaderReady = val;\n\t}\n\n\tfunction set_fps(val:Int):Int {\n\t\tupdateFps.dispatch(val);\n\t\treturn fps = val;\n\t}\n}","package bindx.macro;\n\nimport bindx.macro.GenericError;\nimport haxe.macro.Type;\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\n\nusing haxe.macro.Tools;\nusing Lambda;\nusing StringTools;\nusing bindx.macro.MacroUtils;\n\nclass BindableMacros {\n\n    static inline var OLD_VALUE = \"__oldValue__\";\n    static inline var NEW_VALUE = \"__newValue__\";\n\n    /**\n     * default value: false\n     */\n    static public inline var INLINE_SETTER = \"inlineSetter\";\n    /**\n     * default value: false\n     */\n    static public inline var FORCE = \"force\";\n    \n    static public inline var BINDABLE_FIELDS = \":bindableFields\";\n\n\tstatic var processed:Array<String> = [];\n\n    static var bindingSignalProvider:IBindingSignalProvider;\n    \n    macro static public function buildIBindable():Array<Field> {\n        var type = Context.getLocalType();\n        var tName = type.toComplexType().toString();\n        if (processed.indexOf(tName) > -1) {\n            return null;\n        }\n        processed.push(tName);\n\n        var classType = type.getClass();\n        \n        Context.onMacroContextReused(function () {\n            processed = [];\n            return true;\n        });\n        \n        if (bindingSignalProvider == null) {\n            bindingSignalProvider = new bindx.macro.BindSignalProvider();\n        }\n        \n        var fields = Context.getBuildFields();\n        \n        var meta = classType.bindableMeta();\n        if (meta != null) injectBindableMeta(fields, meta);\n        \n        if (classType.isInterface) {\n            var a = [];\n            for (f in fields) {\n                for (m in f.meta) if (m.name == MetaUtils.BINDABLE_META) {\n                    a.push(macro $v { f.name } );\n                    if (m.params.length > 0)\n                        Context.warning('Interface doesn\\'t support @:bindable meta params', m.pos);\n                }\n            }\n            var classMeta = classType.meta;\n            if (classMeta.has(BINDABLE_FIELDS))\n                classMeta.remove(BINDABLE_FIELDS);\n            classMeta.add(BINDABLE_FIELDS, a, classType.pos);\n            return fields;\n        }\n        \n        var interfaceFields = getBindableFieldsFromInterfaces(classType);\n        \n        var res = [];\n        for (f in fields)\n        \tif (f.hasBindableMeta()) {\n        \t\tif (!isFieldBindable(f, fields)) Context.error('can\\'t bind field \\'${f.name}\\'', f.pos);\n\n        \t\tbindField(f, fields, res);\n        \t} else {\n                if (interfaceFields.exists(f.name))\n                    Context.fatalError('Interface \"${typeName(interfaceFields.get(f.name))}\" expects @:bindable metadata', f.pos);\n                res.push(f);\n            }\n\n        return res;\n    }\n    \n    inline static function typeName(t: { module:String, name:String } ) {\n        return t.module + (t.module.length > 0 ? \".\" + t.name : t.name);\n    }\n    \n    static function getBindableFieldsFromInterfaces(classType:ClassType):Map<String, ClassType> {\n        var interfaceFields = new Map();\n        \n        function iter(t:ClassType) {\n            var meta = t.meta.get();\n            for (m in meta) if (m.name == BINDABLE_FIELDS) {\n                for (a in m.params) {\n                    var value = switch a.expr { case EConst(CString(s)): s; case _: null; };\n                    interfaceFields.set(value, t);\n                }\n                break;\n            }\n            for (it in t.interfaces) iter(it.t.get());\n        }\n        \n        for (i in classType.interfaces) iter(i.t.get());\n        return interfaceFields;\n    }\n\n    static function bindField(field:Field, fields:Array<Field>, res:Array<Field>):Void {\n        var meta = field.bindableMeta();\n        bindingSignalProvider.getFieldDispatcher(field, res);\n\n        var forceParam = meta.findParam(FORCE);\n        var inlineSetter = meta.findParam(INLINE_SETTER);\n        if (forceParam.isNotNullAndTrue()) {\n            if (inlineSetter != null)\n                Warn.w('\\'$INLINE_SETTER\\' ignored. \\'$FORCE\\' mode', inlineSetter.pos, WarnPriority.INFO);\n            res.push(field);\n            return;\n        }\n\n    \tswitch (field.kind) {\n    \t\tcase FVar(type, expr):\n                var fieldName = field.name;\n    \t\t\tvar setterName = 'set_$fieldName';\n    \t\t\tfield.kind = FProp(\"default\", \"set\", type, expr);\n    \t\t\tres.push(field);\n    \t\t\tvar setter = macro function foo(value:$type) {\n                    var $OLD_VALUE = this.$fieldName;\n                    if ($i{OLD_VALUE} == value) return $i{OLD_VALUE};\n                    this.$fieldName = value;\n    \t\t\t\t${bindingSignalProvider.getFieldChangedExpr(field, macro $i{OLD_VALUE}, macro $i{\"value\"})}\n    \t\t\t\treturn value;\n    \t\t\t};\n                var setterAccess = [APrivate];\n                if (inlineSetter.isNotNullAndTrue()) setterAccess.push(AInline);\n    \t\t\tres.push({\n    \t\t\t\tname: setterName,\n    \t\t\t\tkind: FFun(switch (setter.expr) { case EFunction (_, func): func; case _: throw false; }),\n    \t\t\t\tpos: field.pos,\n    \t\t\t\taccess: setterAccess\n    \t\t\t});\n\n    \t\tcase FProp(get, set, type, expr):\n                if (inlineSetter != null)\n                    Warn.w('$INLINE_SETTER ignored. Setter already exist', inlineSetter.pos, WarnPriority.INFO);\n                var fieldName = field.name;\n                var setter = fields.find(function (it) return it.name == 'set_$fieldName');\n                if (setter != null) {\n                    switch (setter.kind) {\n                        case FFun(func):\n                            patchField = field;\n                            func.expr = macro {\n                                var $OLD_VALUE = this.$fieldName;\n                                if ($i{OLD_VALUE} == $i{func.args[0].name}) return $i{OLD_VALUE};\n                                $e{patchSetter(func.expr)};\n                            };\n                            patchField = null;\n                        case _:\n                    }\n                }\n                res.push(field);\n\n            case FFun(f):\n                if (inlineSetter != null)\n                    Warn.w('methods doesn\\'t support \\'$INLINE_SETTER\\'', inlineSetter.pos, WarnPriority.INFO);\n                res.push(field);\n        }\n    }\n\n    static var patchField:Field;\n\n    static function patchSetter(expr:Expr):Expr {\n        return switch (expr.expr) {\n            case EReturn(res):\n                var fieldName = patchField.name;\n                \n                macro {\n                    var $NEW_VALUE = ${res.map(patchSetter)};\n                    ${bindingSignalProvider.getFieldChangedExpr(patchField, macro $i{OLD_VALUE}, macro $i{NEW_VALUE})};\n                    return $i{NEW_VALUE};\n                }\n                    \n            case _: expr.map(patchSetter);\n        }\n    }\n\n    static inline function injectBindableMeta(fields:Array<Field>, meta:MetadataEntry):Void {\n        for (f in fields) {\n            if (f.access.indexOf(APrivate) > -1 || f.hasBindableMeta()) continue;\n\n            var forceParam = meta.findParam(FORCE);\n            if (isFieldBindable(f, fields, forceParam.isNotNullAndTrue())) {\n                switch (f.kind) {\n                    case FFun(_):\n                    case _: f.meta.push({name:MetaUtils.BINDABLE_META, pos:f.pos, params:meta.params});\n                }\n            }\n        }\n    }\n\n    static function isFieldBindable(field:Field, fields:Array<Field>, force = false):Bool {\n        if (field.name == \"new\") return false;\n\n        for (a in field.access)\n            if (a.equals(AMacro) || a.equals(ADynamic) || a.equals(AStatic))\n                return false;\n\n        var fn = field.name;\n        if (fn.startsWith(\"set_\") || fn.startsWith(\"get_\")) {\n            var propName = fn.substr(4);\n            for (f in fields) if (f.name == propName) {\n                switch (f.kind) {\n                    case FProp(get, set, _, _) if (fn == get || fn == set):\n                        return false;\n                    case _:\n                }\n            }\n        }\n\n        if (!force) {\n            var meta = field.bindableMeta();\n            var forceParam = meta != null ? meta.findParam(FORCE) : null;\n            force = forceParam.isNotNullAndTrue();\n        }\n        \n        if (force) return switch (field.kind) {\n            case FProp(\"never\", _, _, _): false;\n            case _: true;\n        }\n\n        return switch (field.kind) {\n            case FProp(\"never\", _, _, _) | FProp(_, \"never\", _, _) | FProp(_, \"dynamic\", _, _) | FProp(_, \"null\", _, _): false;\n            case _: true;\n        }\n    }\n}","package arm.cohere.view;\n\nimport arm.cohere.core.loader.AssetLoader;\nimport pixi.core.display.Container;\n\nclass View {\n\n\t@inject public var loader:AssetLoader;\n\n\tpublic var stage(default, null):Container;\n\n\tpublic function new(stage:Container) {\n\t\tthis.stage = stage;\n\t}\n\n\tpublic function init() {}\n\n\tpublic function reset() {\n\t\tstage.removeChildren();\n\t}\n\n\tpublic function addAssetsToLoad() {\n\t\tloader.addAsset(AssetsList.COMMON_BUTTON, AssetsList.COMMON_BUTTON_PNG);\n\t}\n}","package bindx;\n\nclass MethodSignal extends Signal<Void -> Void> {\n\n    public function dispatch():Void {\n        lock ++;\n        for (l in listeners) l();\n        if (lock > 0) lock --;\n    }\n}\n\nclass FieldSignal<T> extends Signal<T -> T -> Void> {\n\n    public function dispatch(oldValue:T = null, newValue:T = null):Void {\n        lock ++;\n        var ls = listeners;\n        for (l in ls) l(oldValue, newValue);\n        if (lock > 0) lock --;\n    }\n}\n\nclass Signal<T> {\n\n    var listeners:Array<T>;\n\n    var lock:Int = 0;\n\n    public function new() {\n        removeAll();\n    }\n\n    public inline function removeAll():Void {\n        listeners = [];\n        lock = 0;\n    }\n    \n    inline function indexOf(listener:T):Int {\n        #if (neko || bindx_compareMethods)\n            var res = -1;\n            var i = 0;\n            for (l in listeners) {\n                if (Reflect.compareMethods(listener, l)) {\n                    res = i;\n                    break;\n                }\n                i++;\n            }\n            return res;\n        #else\n            return listeners.indexOf(listener);\n        #end\n    }\n\n    public function add(listener:T):Void {\n        var pos = indexOf(listener);\n        checkLock();\n        if (pos > -1) listeners.splice(pos, 1);\n        listeners.push(listener);\n    }\n\n    public function remove(listener:T):Void {\n        var pos = indexOf(listener);\n        if (pos > -1) {\n            checkLock();\n            listeners.splice(pos, 1);\n        }\n    }\n\n    inline function checkLock():Void {\n        if (lock > 0) {\n            listeners = listeners.copy();\n            lock = 0;\n        }\n    }\n}\n\nclass SignalTools {\n    static public inline var BIND_SIGNAL_META = \"BindSignal\";\n\n    static public inline var SIGNAL_POSTFIX = \"Changed\";\n    \n    static public function unbindAll(bindable:bindx.IBindable):Void {\n        var meta = haxe.rtti.Meta.getFields(std.Type.getClass(bindable));\n        if (meta != null) for (m in std.Reflect.fields(meta)) {\n            var data = std.Reflect.field(meta, m);\n            if (std.Reflect.hasField(data, BIND_SIGNAL_META)) {\n                var signal:bindx.BindSignal.Signal<Dynamic> = cast std.Reflect.field(bindable, m);\n                if (signal != null) {\n                    signal.removeAll();\n                    var args:Array<Dynamic> = std.Reflect.field(data, BIND_SIGNAL_META);\n                    var lazy:Bool = args[1];\n                    if (lazy) std.Reflect.setField(bindable, m, null);\n                }\n            }\n        }\n    }\n\n    static public function bindAll(bindable:bindx.IBindable, callback:String -> Dynamic -> Dynamic -> Void, force = true):Void -> Void {\n        var listeners = new Map<bindx.BindSignal.Signal<Dynamic>, Dynamic>();\n\n        var signals = getSignals(bindable, force);\n        for (name in signals.keys()) {\n            var signal = signals.get(name);\n            if (std.Std.is(signal, FieldSignal)) {\n                var listener = function (from:Dynamic, to:Dynamic) callback(name, from, to);\n                listeners.set(signal, listener);\n                signal.add(listener);\n            } else {\n                var listener = function () callback(name, null, null);\n                listeners.set(signal, listener);\n                signal.add(listener);\n            }\n        }\n\n        return function () {\n            for (signal in listeners.keys()) {\n                var listener = listeners.get(signal);\n                if (Std.is(signal, FieldSignal)) signal.remove(listener);\n                else signal.remove(listener);\n            }\n        }\n    }\n\n    static function getSignals(bindable:bindx.IBindable, force = true):Map<String, bindx.BindSignal.Signal<Dynamic>> {\n        var signals = new Map<String, bindx.BindSignal.Signal<Dynamic>>();\n        var meta = haxe.rtti.Meta.getFields(std.Type.getClass(bindable));\n        if (meta != null) for (m in std.Reflect.fields(meta)) {\n            var data = std.Reflect.field(meta, m);\n            if (std.Reflect.hasField(data, BIND_SIGNAL_META)) {\n                var args:Array<Dynamic> = std.Reflect.field(data, BIND_SIGNAL_META);\n                var signal:bindx.BindSignal.Signal<Dynamic> = cast std.Reflect.field(bindable, m);\n                if (signal == null && force) {\n                    var lazy:Bool = args[1];\n                    if (lazy) signal = cast std.Reflect.getProperty(bindable, m.substr(1));\n                }\n                if (signal != null) {\n                    var name = args[0];\n                    signals.set(name, signal);\n                }\n            }\n        }\n        return signals;\n    }\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.rtti;\n\n/**\n\tAn api to access classes and enums metadata at runtime.\n**/\nclass Meta {\n\n\t/**\n\t\tReturns the metadata that were declared for the given type (class or enum)\n\t**/\n\tpublic static function getType( t : Dynamic ) : Dynamic<Array<Dynamic>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.obj == null) ? {} : meta.obj;\n\t}\n\n\tprivate static function getMeta(t:Dynamic):Dynamic\n\t{\n#if (java || cs)\n\t\tvar ret = Reflect.field(t, \"__meta__\");\n\t\tif (ret == null && Std.is(t,Class))\n\t\t{\n#if java\n\t\t\tvar interf = java.Lib.toNativeType(t).isInterface();\n#elseif cs\n\t\t\tvar interf = cs.Lib.toNativeType(t).IsInterface;\n#end\n\t\t\tif (interf)\n\t\t\t{\n\t\t\t\tvar name = Type.getClassName(t),\n\t\t\t\t    cls = Type.resolveClass(name + '_HxMeta');\n\t\t\t\tif (cls != null)\n\t\t\t\t\treturn Reflect.field(cls, \"__meta__\");\n\t\t\t}\n\t\t}\n\t\treturn ret;\n#else\n\t\treturn untyped t.__meta__;\n#end\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class static fields\n\t**/\n\tpublic static function getStatics( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.statics == null) ? {} : meta.statics;\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class fields or enum constructors\n\t**/\n\tpublic static function getFields( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.fields == null) ? {} : meta.fields;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\treturn untyped Function('return typeof $name != \"undefined\" ? $name : null')();\n\t}\n\n}\n","package minject;\n\nimport Map;\n\nclass ClassMap<V> implements IMap<Class<Dynamic>, V>\n{\n\tvar map:Map<String, V>;\n\n\tpublic function new()\n\t{\n\t\tmap = new Map();\n\t}\n\n\tpublic function get(k:Class<Dynamic>):Null<V>\n\t{\n\t\treturn map.get(getKey(k));\n\t}\n\n\tpublic function set(k:Class<Dynamic>, v:V):Void\n\t{\n\t\tmap.set(getKey(k), v);\n\t}\n\n\tpublic function exists(k:Class<Dynamic>):Bool\n\t{\n\t\treturn map.exists(getKey(k));\n\t}\n\n\tpublic function remove(k:Class<Dynamic>):Bool\n\t{\n\t\treturn map.remove(getKey(k));\n\t}\n\n\tpublic function keys():Iterator<Class<Dynamic>>\n\t{\n\t\treturn cast [for (k in map.keys()) Type.resolveClass(k)].iterator();\n\t}\n\n\tpublic function iterator():Iterator<V>\n\t{\n\t\treturn map.iterator();\n\t}\n\n\tpublic function toString()\n\t{\n\t\treturn map.toString();\n\t}\n\n\tinline function getKey(k:Class<Dynamic>)\n\t{\n\t\treturn Type.getClassName(k);\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject;\n\nimport minject.result.InjectionResult;\n\nclass InjectionConfig\n{\n\tpublic var request:Class<Dynamic>;\n\tpublic var injectionName:String;\n\n\tvar injector:Injector;\n\tvar result:InjectionResult;\n\t\n\tpublic function new(request:Class<Dynamic>, injectionName:String)\n\t{\n\t\tthis.request = request;\n\t\tthis.injectionName = injectionName;\n\t}\n\n\tpublic function getResponse(injector:Injector):Dynamic\n\t{\n\t\tif (this.injector != null) injector = this.injector;\n\n\t\tif (result != null) return result.getResponse(injector);\n\t\t\n\t\tvar parentConfig = injector.getAncestorMapping(request, injectionName);\n\t\tif (parentConfig != null) return parentConfig.getResponse(injector);\n\n\t\treturn null;\n\t}\n\n\tpublic function hasResponse(injector:Injector):Bool\n\t{\n\t\treturn (result != null);\n\t}\n\n\tpublic function hasOwnResponse():Bool\n\t{\n\t\treturn (result != null);\n\t}\n\n\tpublic function setResult(result:InjectionResult):Void\n\t{\n\t\t#if debug\n\t\tif (this.result != null && result != null)\n\t\t{\n\t\t\ttrace('Warning: Injector contains ${this.toString()}.\\nAttempting to overwrite this ' +\n\t\t\t\t'with mapping for [${result.toString()}].\\nIf you have overwritten this mapping ' +\n\t\t\t\t'intentionally you can use `injector.unmap()` prior to your replacement mapping ' +\n\t\t\t\t'in order to avoid seeing this message.');\n\t\t}\n\t\t#end\n\t\tthis.result = result;\n\t}\n\n\tpublic function setInjector(injector:Injector):Void\n\t{\n\t\tthis.injector = injector;\n\t}\n\n\tpublic function toString():String\n\t{\n\t\tvar named = injectionName != null && injectionName != \"\" ? ' named \"$injectionName\" and' : \"\";\n\t\treturn 'rule: [' + Type.getClassName(request) + ']$named mapped to [$result]';\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject;\n\nimport haxe.rtti.Meta;\nimport haxe.ds.WeakMap;\nimport haxe.ds.ObjectMap;\nimport minject.point.ConstructorInjectionPoint;\nimport minject.point.InjectionPoint;\nimport minject.point.MethodInjectionPoint;\nimport minject.point.NoParamsConstructorInjectionPoint;\nimport minject.point.PostConstructInjectionPoint;\nimport minject.point.PropertyInjectionPoint;\nimport minject.result.InjectClassResult;\nimport minject.result.InjectOtherRuleResult;\nimport minject.result.InjectSingletonResult;\nimport minject.result.InjectValueResult;\n\n/**\n\tThe dependency injector.\n**/\n#if !macro @:build(minject.Macro.addMetadata()) #end class Injector\n{\n\t/**\n\t\tA set of instances that have already had their dependencies satisfied by the injector.\n\t**/\n\tpublic var attendedToInjectees(default, null):InjecteeSet;\n\n\t/**\n\t\tThe parent of this injector.\n\t**/\n\tpublic var parentInjector(default, set):Injector;\n\n\tvar injectionConfigs:Map<String, InjectionConfig>;\n\tvar injecteeDescriptions:ClassMap<InjecteeDescription>;\n\t\n\tpublic function new()\n\t{\n\t\tinjectionConfigs = new Map();\n\t\tinjecteeDescriptions = new ClassMap();\n\t\tattendedToInjectees = new InjecteeSet();\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject the instance `useValue`.\n\t\t\n\t\tThis is used to register an existing instance with the injector and treat it like a \n\t\tSingleton.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useValue An instance\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapValue(whenAskedFor:Class<Dynamic>, useValue:Dynamic, ?named:String = \"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectValueResult(useValue));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject a new instance of \n\t\t`instantiateClass`.\n\t\t\n\t\tThis will create a new instance for each injection.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param instantiateClass A class to instantiate\n\t\t@param named An optional name (id)\n\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapClass(whenAskedFor:Class<Dynamic>, instantiateClass:Class<Dynamic>, ?named:String=\"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectClassResult(instantiateClass));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject an instance of `whenAskedFor`.\n\t\t\n\t\tThis will create an instance on the first injection, but will re-use that instance for \n\t\tsubsequent injections.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapSingleton(whenAskedFor:Class<Dynamic>, ?named:String=\"\") :Dynamic\n\t{\n\t\treturn mapSingletonOf(whenAskedFor, whenAskedFor, named);\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor`\n\t\tinject an instance of `useSingletonOf`.\n\t\t\n\t\tThis will create an instance on the first injection, but will re-use that instance for \n\t\tsubsequent injections.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useSingletonOf A class to instantiate\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapSingletonOf(whenAskedFor:Class<Dynamic>, useSingletonOf:Class<Dynamic>, ?named:String=\"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectSingletonResult(useSingletonOf));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor`\n\t\tuse rule `useRule` to determine the correct injection.\n\t\t\n\t\tThis will use whatever injection is set by the given injection rule as created using one \n\t\tof the other mapping methods.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useRule The rule to use for the injection\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapRule(whenAskedFor:Class<Dynamic>, useRule:Dynamic, ?named:String = \"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectOtherRuleResult(useRule));\n\t\treturn useRule;\n\t}\n\t\n\tpublic function getMapping(forClass:Class<Dynamic>, ?named:String=\"\"):InjectionConfig\n\t{\n\t\tvar requestName = getClassName(forClass) + \"#\" + named;\n\t\t\n\t\tif (injectionConfigs.exists(requestName))\n\t\t{\n\t\t\treturn injectionConfigs.get(requestName);\n\t\t}\n\t\t\n\t\tvar config = new InjectionConfig(forClass, named);\n\t\tinjectionConfigs.set(requestName, config);\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tPerform an injection into an object, satisfying all it's dependencies\n\t\t\n\t\tThe `Injector` should throw an `Error` if it can't satisfy all dependencies of the injectee.\n\t\t\n\t\t@param target The object to inject into - the Injectee\n\t**/\n\tpublic function injectInto(target:Dynamic):Void\n\t{\n\t\tif (attendedToInjectees.contains(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tattendedToInjectees.add(target);\n\n\t\t// get injection points or cache them if this target's class wasn't encountered before\n\t\tvar targetClass = Type.getClass(target);\n\n\t\tvar injecteeDescription:InjecteeDescription = null;\n\n\t\tif (injecteeDescriptions.exists(targetClass))\n\t\t{\n\t\t\tinjecteeDescription = injecteeDescriptions.get(targetClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinjecteeDescription = getInjectionPoints(targetClass);\n\t\t}\n\n\t\tif (injecteeDescription == null) return;\n\n\t\tvar injectionPoints:Array<Dynamic> = injecteeDescription.injectionPoints;\n\t\tvar length:Int = injectionPoints.length;\n\n\t\tfor (i in 0...length)\n\t\t{\n\t\t\tvar injectionPoint:InjectionPoint = injectionPoints[i];\n\t\t\tinjectionPoint.applyInjection(target, this);\n\t\t}\n\t}\n\t\n\t/**\n\t\tConstructs an instance of theClass without satifying its dependencies.\n\t**/\n\tpublic function construct<T>(theClass:Class<T>):T\n\t{\n\t\tvar injecteeDescription:InjecteeDescription;\n\n\t\tif (injecteeDescriptions.exists(theClass))\n\t\t{\n\t\t\tinjecteeDescription = injecteeDescriptions.get(theClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinjecteeDescription = getInjectionPoints(theClass);\n\t\t}\n\n\t\tvar injectionPoint:InjectionPoint = injecteeDescription.ctor;\n\t\treturn injectionPoint.applyInjection(theClass, this);\n\t}\n\n\t/**\n\t\tCreate an object of the given class, supplying its dependencies as constructor parameters \n\t\tif the used DI solution has support for constructor injection\n\t\t\n\t\tAdapters for DI solutions that don't support constructor injection should just create a new \n\t\tinstance and perform setter and/or method injection on that.\n\t\t\n\t\tNOTE: This method will always create a new instance. If you need to retrieve an instance \n\t\tconsider using `getInstance`\n\t\t\n\t\tThe `Injector` should throw an `Error` if it can't satisfy all dependencies of the injectee.\n\t\t\n\t\t@param theClass The class to instantiate\n\t\t@returns The created instance\n\t**/\n\tpublic function instantiate<T>(theClass:Class<T>):T\n\t{\n\t\tvar instance = construct(theClass);\n\t\tinjectInto(instance);\n\t\treturn instance;\n\t}\n\t\n\t/**\n\t\tRemove a rule from the injector\n\n\t\t@param theClass A class or interface\n\t\t@param named An optional name (id)\n\t**/\n\tpublic function unmap(theClass:Class<Dynamic>, ?named:String=\"\"):Void\n\t{\n\t\tvar mapping = getConfigurationForRequest(theClass, named);\n\t\t\n\t\tif (mapping == null)\n\t\t{\n\t\t\tthrow 'Error while removing an injector mapping: No mapping defined for class ' + getClassName(theClass) + ', named \"' + named + '\"';\n\t\t}\n\n\t\tmapping.setResult(null);\n\t}\n\n\t/**\n\t\tDoes a rule exist to satsify such a request?\n\n\t\t@param forClass A class or interface\n\t\t@param named An optional name (id)\n\t\t@returns Whether such a mapping exists\n\t**/\n\tpublic function hasMapping(forClass:Class<Dynamic>, ?named:String = ''):Bool\n\t{\n\t\tvar mapping = getConfigurationForRequest(forClass, named);\n\t\t\n\t\tif (mapping == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn mapping.hasResponse(this);\n\t}\n\n\t/**\n\t\tCreate or retrieve an instance of the given class\n\t\t\n\t\t@param ofClass The class to retrieve.\n\t\t@param named An optional name (id)\n\t\t@return An instance\n\t**/\n\tpublic function getInstance<T>(ofClass:Class<T>, ?named:String=\"\"):T\n\t{\n\t\tvar mapping = getConfigurationForRequest(ofClass, named);\n\t\t\n\t\tif (mapping == null || !mapping.hasResponse(this))\n\t\t{\n\t\t\tthrow 'Error while getting mapping response: No mapping defined for class ' + getClassName(ofClass) + ', named \"' + named + '\"';\n\t\t}\n\n\t\treturn mapping.getResponse(this);\n\t}\n\t\n\t/**\n\t\tCreate an injector that inherits rules from its parent\n\t\t\n\t\t@returns The injector \n\t**/\n\tpublic function createChildInjector():Injector\n\t{\n\t\tvar injector = new Injector();\n\t\tinjector.parentInjector = this;\n\t\treturn injector;\n\t}\n\n\t/**\n\t\tSearches for an injection mapping in the ancestry of the injector. This method is called \n\t\twhen a dependency cannot be satisfied by this injector.\n\t**/\n\tpublic function getAncestorMapping(forClass:Class<Dynamic>, named:String=null):InjectionConfig\n\t{\n\t\tvar parent = parentInjector;\n\n\t\twhile (parent != null)\n\t\t{\n\t\t\tvar parentConfig = parent.getConfigurationForRequest(forClass, named, false);\n\n\t\t\tif (parentConfig != null && parentConfig.hasOwnResponse())\n\t\t\t{\n\t\t\t\treturn parentConfig;\n\t\t\t}\n\n\t\t\tparent = parent.parentInjector;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n\tfunction getInjectionPoints(forClass:Class<Dynamic>):InjecteeDescription\n\t{\n\t\tvar typeMeta = Meta.getType(forClass);\n\n\t\t#if debug\n\t\tif (typeMeta != null && Reflect.hasField(typeMeta, \"interface\"))\n\t\t\tthrow \"Interfaces can't be used as instantiatable classes.\";\n\t\t#end\n\n\t\tvar fieldsMeta = getFields(forClass);\n\n\t\tvar ctorInjectionPoint:InjectionPoint = null;\n\t\tvar injectionPoints:Array<InjectionPoint> = [];\n\t\tvar postConstructMethodPoints:Array<Dynamic> = [];\n\t\t\n\t\tfor (field in Reflect.fields(fieldsMeta))\n\t\t{\n\t\t\tvar fieldMeta:Dynamic = Reflect.field(fieldsMeta, field);\n\t\t\t// fieldMeta.name = field;\n\n\t\t\tvar inject = Reflect.hasField(fieldMeta, \"inject\");\n\t\t\tvar post = Reflect.hasField(fieldMeta, \"post\");\n\t\t\tvar type = Reflect.field(fieldMeta, \"type\");\n\t\t\tvar args = Reflect.field(fieldMeta, \"args\");\n\t\t\t\n\t\t\tif (field == \"_\") // constructor\n\t\t\t{\n\t\t\t\tif (args.length > 0)\n\t\t\t\t{\n\t\t\t\t\tctorInjectionPoint = new ConstructorInjectionPoint(fieldMeta.args);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Reflect.hasField(fieldMeta, \"args\")) // method\n\t\t\t{\n\t\t\t\tif (inject) // injection\n\t\t\t\t{\n\t\t\t\t\tvar point = new MethodInjectionPoint(field, fieldMeta.args);\n\t\t\t\t\tinjectionPoints.push(point);\n\t\t\t\t}\n\t\t\t\telse if (post) // post construction\n\t\t\t\t{\n\t\t\t\t\tvar order = fieldMeta.post == null ? 0 : fieldMeta.post[0];\n\t\t\t\t\tvar point = new PostConstructInjectionPoint(field, order);\n\t\t\t\t\tpostConstructMethodPoints.push(point);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type != null) // property\n\t\t\t{\n\t\t\t\tvar name = fieldMeta.inject == null ? null : fieldMeta.inject[0];\n\t\t\t\tvar point = new PropertyInjectionPoint(field, fieldMeta.type[0], name);\n\t\t\t\tinjectionPoints.push(point);\n\t\t\t}\n\t\t}\n\n\t\tif (postConstructMethodPoints.length > 0)\n\t\t{\n\t\t\tpostConstructMethodPoints.sort(function(a, b) { return a.order - b.order; });\n\t\t\tfor (point in postConstructMethodPoints) injectionPoints.push(point);\n\t\t}\n\n\t\tif (ctorInjectionPoint == null)\n\t\t\tctorInjectionPoint = new NoParamsConstructorInjectionPoint();\n\n\t\tvar injecteeDescription = new InjecteeDescription(ctorInjectionPoint, injectionPoints);\n\t\tinjecteeDescriptions.set(forClass, injecteeDescription);\n\t\treturn injecteeDescription;\n\t}\n\n\tfunction getConfigurationForRequest(forClass:Class<Dynamic>, named:String, ?traverseAncestors:Bool=true):InjectionConfig\n\t{\n\t\tvar requestName = getClassName(forClass) + '#' + named;\n\t\t\n\t\tif (!injectionConfigs.exists(requestName))\n\t\t{\n\t\t\tif (traverseAncestors && parentInjector != null \n\t\t\t\t&& parentInjector.hasMapping(forClass, named))\n\t\t\t\t\treturn getAncestorMapping(forClass, named);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn injectionConfigs.get(requestName);\n\t}\n\n\tfunction set_parentInjector(value:Injector):Injector\n\t{\n\t\t// restore own map of worked injectees if parent injector is removed\n\t\tif (parentInjector != null && value == null) attendedToInjectees = new InjecteeSet();\n\n\t\tparentInjector = value;\n\n\t\t// use parent's map of worked injectees\n\t\tif (parentInjector != null) attendedToInjectees = parentInjector.attendedToInjectees;\n\n\t\treturn parentInjector;\n\t}\n\n\tfunction getClassName(forClass:Class<Dynamic>):String\n\t{\n\t\tif (forClass == null) return \"Dynamic\";\n\t\telse return Type.getClassName(forClass);\n\t}\n\n\tfunction getFields(type:Class<Dynamic>)\n\t{\n\t\tvar meta = {};\n\t\twhile (type != null)\n\t\t{\n\t\t\tvar typeMeta = haxe.rtti.Meta.getFields(type);\n\t\t\tfor (field in Reflect.fields(typeMeta))\n\t\t\t\tReflect.setField(meta, field, Reflect.field(typeMeta, field));\n\t\t\ttype = Type.getSuperClass(type);\n\t\t}\n\t\treturn meta;\n\t}\n}\n\n/**\n\tContains the set of objects which have been injected into.\n\t \n\tUnder dynamic languages that don't support weak references this set a \n\thidden property on an injectee when added, to mark it as injected. This is \n\tto avoid storing a direct reference of it here, causing it never to be \n\tavailable for GC.\n**/\nclass InjecteeSet\n{\n\t#if (flash9 || java || php)\n\tvar map:WeakMap<{}, Bool>;\n\t#elseif cpp\n\tvar map:ObjectMap<{}, Bool>;\n\t#end\n\n\tpublic function new()\n\t{\n\t\t#if (flash9 || java || php)\n\t\tmap = new WeakMap<{}, Bool>();\n\t\t#elseif cpp\n\t\tmap = new ObjectMap<{}, Bool>();\n\t\t#end\n\t}\n\n\tpublic function add(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\tmap.set(value, true);\n\t\t#else\n\t\tvalue.__injected__ = true;\n\t\t#end\n\t}\n\n\tpublic function contains(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\treturn map.exists(value);\n\t\t#else\n\t\treturn value.__injected__ == true;\n\t\t#end\n\t}\n\n\tpublic function remove(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\tmap.remove(value);\n\t\t#else\n\t\tReflect.deleteField(value, \"__injected__\");\n\t\t#end\n\t}\n\n\t// deprecated\n\tinline public function delete(value:Dynamic) remove(value);\n\n\t/**\n\t\tUnder dynamic targets that don't support weak refs (js, avm1, neko) this will always \n\t\treturn an empty iterator due to values not being stored in this set. This is to avoid \n\t\tmemory leaks.\n\t**/\n\tpublic function iterator()\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\treturn map.iterator();\n\t\t#else\n\t\treturn [].iterator();\n\t\t#end\n\t}\n}\n\nclass InjecteeDescription\n{\n\tpublic var ctor:InjectionPoint;\n\tpublic var injectionPoints:Array<InjectionPoint>;\n \n\tpublic function new(ctor:InjectionPoint, injectionPoints:Array<InjectionPoint>)\n\t{\n\t\tthis.ctor = ctor;\n\t\tthis.injectionPoints = injectionPoints;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass MethodInjectionPoint implements InjectionPoint\n{\n\tpublic var name(default, null):String;\n\tpublic var args(default, null):Array<ArgInjectionInfo>;\n\t\n\tpublic function new(name:String, args:Array<ArgInjectionInfo>)\n\t{\n\t\tthis.name = name;\n\t\tthis.args = args;\n\n\t\t#if debug\n\t\tfor (arg in args)\n\t\t\tif (arg.type == \"Dynamic\")\n\t\t\t\tthrow 'Error in method definition of injectee. Required parameters can\\'t have non class type.';\n\t\t#end\n\t}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tReflect.callMethod(target, Reflect.field(target, name), gatherArgs(target, injector));\n\t\treturn target;\n\t}\n\t\n\tfunction gatherArgs(target:Dynamic, injector:Injector):Array<Dynamic>\n\t{\n\t\tvar values = [];\n\n\t\tfor (arg in args)\n\t\t{\n\t\t\tvar name = arg.name == null ? \"\" : arg.name;\n\t\t\tvar config = injector.getMapping(Type.resolveClass(arg.type), arg.name);\n\t\t\tvar injection = config.getResponse(injector);\n\n\t\t\t#if debug\n\t\t\tif (injection == null && !arg.opt)\n\t\t\t{\n\t\t\t\tvar targetName = Type.getClassName(Type.getClass(target));\n\t\t\t\tvar requestName = Type.getClassName(config.request);\n\t\t\t\tthrow 'Injector is missing a rule to handle injection into target $targetName. ' +\n\t\t\t\t\t'Target dependency: $requestName, method: $name, named: ' + arg.name;\n\t\t\t}\n\t\t\t#end\n\t\t\tvalues.push(injection);\n\t\t}\n\n\t\treturn values;\n\t}\n}\n\ntypedef ArgInjectionInfo = {\n\tvar opt:Bool;\n\tvar type:String;\n\t@:optional var name:String;\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\nimport minject.point.MethodInjectionPoint;\n\nclass ConstructorInjectionPoint extends MethodInjectionPoint\n{\n\tpublic function new(args:Array<ArgInjectionInfo>)\n\t{\n\t\tsuper('new', args);\n\t}\n\t\n\toverride public function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\treturn Type.createInstance(target, gatherArgs(target, injector));\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass NoParamsConstructorInjectionPoint implements InjectionPoint\n{\n\tpublic function new() {}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\treturn Type.createInstance(target, []);\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass PostConstructInjectionPoint implements InjectionPoint\n{\n\tpublic var name(default, null):String;\n\tpublic var order(default, null):Int;\n\t\n\tpublic function new(name:String, ?order:Int=0)\n\t{\n\t\tthis.name = name;\n\t\tthis.order = order;\n\t}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tReflect.callMethod(target, Reflect.field(target, name), []);\n\t\treturn target;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass PropertyInjectionPoint implements InjectionPoint\n{\n\tvar name:String;\n\tvar type:String;\n\tvar injectionName:String;\n\n\tpublic function new(name:String, type:String, ?injectionName:String=null)\n\t{\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.injectionName = injectionName;\n\t}\n\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tvar injectionConfig = injector.getMapping(Type.resolveClass(type), injectionName);\n\t\tvar injection = injectionConfig.getResponse(injector);\n\t\t#if debug\n\t\tif (injection == null)\n\t\t\tthrow 'Injector is missing a rule to handle injection into property \"$name\" ' +\n\t\t\t\t'of object \"$target\". Target dependency: \"$type\", named \"$injectionName\"';\n\t\t#end\n\t\tReflect.setProperty(target, name, injection);\n\t\treturn target;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.result;\n\nimport minject.Injector;\n\nclass InjectionResult\n {\n\tpublic function new() {}\n\n\tpublic function getResponse(injector:Injector):Dynamic\n\t{\n\t\treturn null;\n\t}\n\n\tpublic function toString():String\n\t{\n\t\treturn \"\";\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.result;\n\nimport minject.Injector;\n\nclass InjectValueResult extends InjectionResult\n{\n\tvar value:Dynamic;\n\t\n\tpublic function new(value:Dynamic)\n\t{\n\t\tsuper();\n\t\tthis.value = value;\n\t}\n\t\n\toverride public function getResponse(injector:Injector):Dynamic\n\t{\n\t\treturn value;\n\t}\n\n\toverride public function toString():String\n\t{\n\t\treturn \"instance of \" + Type.getClassName(Type.getClass(value));\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Slot;\n\n/**\n\tA convenience type describing any kind of signal.\n**/\ntypedef AnySignal = Signal<Dynamic, Dynamic>;\n\n/**\n\tA Signal manages a list of listeners, which are executed when the signal is \n\tdispatched.\n**/\nclass Signal<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\tpublic var valueClasses:Array<Dynamic>;\n\n\t/**\n\t\tThe current number of listeners for the signal.\n\t**/\n\tpublic var numListeners(get_numListeners, null):Int;\n\t\n\tvar slots:SlotList<TSlot, TListener>;\n\tvar priorityBased:Bool;\n\n\tfunction new(?valueClasses:Array<Dynamic>)\n\t{\n\t\tif (valueClasses == null) valueClasses = [];\n\t\tthis.valueClasses = valueClasses;\n\t\tslots = cast SlotList.NIL;\n\t\tpriorityBased = false;\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function add(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is called,\n\t\tafter the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnce(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener, true);\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\tAfter you successfully register an event listener,\n\t\tyou cannot change its priority through additional calls to add().\n\t\tTo change a listener's priority, you must first call remove().\n\t\tThen you can register the listener again with the new priority level.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, false, priority);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is \n\t\tcalled, after the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnceWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, true, priority);\n\t}\n\n\t/**\n\t\tUnsubscribes a listener from the signal.\n\t\t\n\t\t@param listener The listener to remove\n\t\t@return The removed listener slot\n\t**/\n\tpublic function remove(listener:TListener):TSlot\n\t{\n\t\tvar slot = slots.find(listener);\n\t\tif (slot == null) return null;\n\t\t\n\t\tslots = slots.filterNot(listener);\n\t\treturn slot;\n\t}\n\n\t/**\n\t\tUnsubscribes all listeners from the signal.\n\t**/\n\tpublic function removeAll():Void\n\t{\n\t\tslots = cast SlotList.NIL;\n\t}\n\n\tfunction registerListener(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\tif (registrationPossible(listener, once))\n\t\t{\n\t\t\tvar newSlot = createSlot(listener, once, priority);\n\t\t\t\n\t\t\tif (!priorityBased && priority != 0) priorityBased = true;\n\t\t\tif (!priorityBased && priority == 0) slots = slots.prepend(newSlot);\n\t\t\telse slots = slots.insertWithPriority(newSlot);\n\n\t\t\treturn newSlot;\n\t\t}\n\t\t\n\t\treturn slots.find(listener);\n\t}\n\n\tfunction registrationPossible(listener, once)\n\t{\n\t\tif (!slots.nonEmpty) return true;\n\t\t\n\t\tvar existingSlot = slots.find(listener);\n\t\tif (existingSlot == null) return true;\n\n\t\tif (existingSlot.once != once)\n\t\t{\n\t\t\t// If the listener was previously added, definitely don't add it again.\n\t\t\t// But throw an exception if their once values differ.\n\t\t\tthrow \"You cannot addOnce() then add() the same listener without removing the relationship first.\";\n\t\t}\n\t\t\n\t\treturn false; // Listener was already registered.\n\t}\n\n\t@:IgnoreCover\n\tfunction createSlot(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\treturn null;\n\t}\n\n\tfunction get_numListeners()\n\t{\n\t\treturn slots.length;\n\t}\n}\n\n/**\n\tSignal that executes listeners with no arguments.\n**/\nclass Signal0 extends Signal<Slot0, Void -> Void>\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with no arguements.\n\t**/\n\tpublic function dispatch()\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute();\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot0(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass Signal1<TValue> extends Signal<Slot1<TValue>, TValue -> Void>\n{\n\tpublic function new(?type:Dynamic=null)\n\t{\n\t\tsuper([type]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with one arguement.\n\t**/\n\tpublic function dispatch(value:TValue)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot1<TValue>(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with two arguments.\n**/\nclass Signal2<TValue1, TValue2> extends Signal<Slot2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\tpublic function new(?type1:Dynamic=null, ?type2:Dynamic=null)\n\t{\n\t\tsuper([type1, type2]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with two arguements.\n\t**/\n\tpublic function dispatch(value1:TValue1, value2:TValue2)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value1, value2);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot2<TValue1, TValue2>(this, listener, once, priority);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\n\n/**\n\tA convenience type describing any kind of slot.\n**/\ntypedef AnySlot = Slot<Dynamic, Dynamic>;\n\n/**\n\tDefines the basic properties of a listener associated with a Signal.\n**/\n#if haxe3\nclass Slot<TSignal:msignal.Signal.AnySignal, TListener>\n#else\nclass Slot<TSignal:Signal<Dynamic, TListener>, TListener>\n#end\n{\n\t/**\n\t\tThe listener associated with this slot.\n\t\tNote: for hxcpp 2.10 this requires a getter method to compile\n\t**/\n\t#if cpp\n\t#if haxe3 @:isVar #end\n\tpublic var listener(get_listener, set_listener):TListener;\n\t#else\n\t#if haxe3 @:isVar #end\n\tpublic var listener(default, set_listener):TListener;\n\t#end\n\t\n\n\t/**\n\t\tWhether this slot is automatically removed after it has been used once.\n\t**/\n\tpublic var once(default, null):Bool;\n\n\t/**\n\t\tThe priority of this slot should be given in the execution order.\n\t\tAn Signal will call higher numbers before lower ones.\n\t\tDefaults to 0.\n\t**/\n\tpublic var priority(default, null):Int;\n\n\t/**\n\t\tWhether the listener is called on execution. Defaults to true.\n\t**/\n\tpublic var enabled:Bool;\n\n\tvar signal:TSignal;\n\t\n\tfunction new(signal:TSignal, listener:TListener, once:Bool=false, priority:Int=0)\n\t{\n\t\tthis.signal = signal;\n\t\tthis.listener = listener;\n\t\tthis.once = once;\n\t\tthis.priority = priority;\n\t\tthis.enabled = true;\n\t}\n\n\t/**\n\t\tRemoves the slot from its signal.\n\t**/\n\tpublic function remove()\n\t{\n\t\tsignal.remove(listener);\n\t}\n\n\t#if cpp\n\t/**\n\t\tHxcpp 2.10 requires a getter method for a typed function property in \n\t\torder to compile\n\t**/\n\tfunction get_listener():TListener\n\t{\n\t\treturn listener;\n\t}\n\t#end\n\n\tfunction set_listener(value:TListener):TListener\n\t{\n\t\tif (value == null) throw \"listener cannot be null\";\n\t\treturn listener = value;\n\t}\n}\n\n/**\n\tA slot that executes a listener with no arguments.\n**/\nclass Slot0 extends Slot<Signal0, Void -> Void>\n{\n\tpublic function new(signal:Signal0, listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with no arguments.\n\t**/\n\tpublic function execute()\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tlistener();\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass Slot1<TValue> extends Slot<Signal1<TValue>, TValue -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the argument to dispatch.\n\t**/\n\tpublic var param:TValue;\n\n\tpublic function new(signal:Signal1<TValue>, listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf <code>param</code> is not null, it overrides the value provided.\n\t**/\n\tpublic function execute(value1:TValue)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tif (param != null) value1 = param;\n\t\tlistener(value1);\n\t}\n}\n\n/**\n\tA slot that executes a listener with two arguments.\n**/\nclass Slot2<TValue1, TValue2> extends Slot<Signal2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the first argument to dispatch.\n\t**/\n\tpublic var param1:TValue1;\n\n\t/**\n\t\tAllows the slot to inject the second argument to dispatch.\n\t**/\n\tpublic var param2:TValue2;\n\n\tpublic function new(signal:Signal2<TValue1, TValue2>, listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with two arguments.\n\t\tIf <code>param1</code> or <code>param2</code> is set, \n\t\tthey override the values provided.\n\t**/\n\tpublic function execute(value1:TValue1, value2:TValue2)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\t\n\t\tif (param1 != null) value1 = param1;\n\t\tif (param2 != null) value2 = param2;\n\t\t\n\t\tlistener(value1, value2);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nclass SlotList<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\t@:IgnoreCover\n\tstatic function __init__() { NIL = new SlotList<Dynamic, Dynamic>(null, null); }\n\t\n\t/**\n\t\tRepresents an empty list. Used as the list terminator.\n\t**/\n\tpublic static var NIL:SlotList<Dynamic, Dynamic>;\n\t\n\tpublic var head:TSlot;\n\tpublic var tail:SlotList<TSlot, TListener>;\n\tpublic var nonEmpty:Bool;\n\t\n\t/**\n\t\tCreates and returns a new SlotList object.\n\n\t\t<p>A user never has to create a SlotList manually. \n\t\tUse the <code>NIL</code> element to represent an empty list. \n\t\t<code>NIL.prepend(value)</code> would create a list containing \n\t\t<code>value</code></p>.\n\n\t\t@param head The first slot in the list.\n\t\t@param tail A list containing all slots except head.\n\t**/\n\tpublic function new(head:TSlot, tail:SlotList<TSlot, TListener>=null)\n\t{\n\t\tnonEmpty = false;\n\t\t\n\t\tif (head == null && tail == null)\n\t\t{\n\t\t\tif (NIL != null)\n\t\t\t{\n\t\t\t\tthrow \"Parameters head and tail are null. Use the NIL element instead.\";\n\t\t\t}\n\t\t\t\n\t\t\t// this is the NIL element as per definition\n\t\t\tnonEmpty = false;\n\t\t}\n\t\telse if (head == null)\n\t\t{\n\t\t\tthrow \"Parameter head cannot be null.\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.head = head;\n\t\t\tthis.tail = (tail == null ? cast NIL : tail);\n\t\t\tnonEmpty = true;\n\t\t}\n\t}\n\t\n\t/**\n\t\tThe number of slots in the list.\n\t**/\n\tpublic var length(get_length, null):Int;\n\tfunction get_length():Int\n\t{\n\t\tif (!nonEmpty) return 0;\n\t\tif (tail == NIL) return 1;\n\t\t\n\t\t// We could cache the length, but it would make methods like filterNot unnecessarily complicated.\n\t\t// Instead we assume that O(n) is okay since the length property is used in rare cases.\n\t\t// We could also cache the length lazy, but that is a waste of another 8b per list node (at least).\n\t\t\n\t\tvar result = 0;\n\t\tvar p = this;\n\t\t\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\t++result;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tPrepends a slot to this list.\n\t\t@param\tslot The item to be prepended.\n\t\t@return\tA list consisting of slot followed by all elements of this list.\n\t**/\n\tpublic function prepend(slot:TSlot)\n\t{\n\t\treturn new SlotList<TSlot, TListener>(slot, this);\n\t}\n\t\n\t/**\n\t\tAppends a slot to this list.\n\t\tNote: appending is O(n). Where possible, prepend which is O(1).\n\t\tIn some cases, many list items must be cloned to \n\t\tavoid changing existing lists.\n\t\t@param\tslot The item to be appended.\n\t\t@return\tA list consisting of all elements of this list followed by slot.\n\t**/\n\tpublic function append(slot:TSlot)\n\t{\n\t\tif (slot == null) return this;\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\t// Special case: just one slot currently in the list.\n\t\tif (tail == NIL) \n\t\t{\n\t\t\treturn new SlotList<TSlot, TListener>(slot).prepend(head);\n\t\t}\n\t\t\n\t\t// The list already has two or more slots.\n\t\t// We have to build a new list with cloned items because they are immutable.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Append the new slot last.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\t\t\n\t\n\t/**\n\t\tInsert a slot into the list in a position according to its priority.\n\t\tThe higher the priority, the closer the item will be inserted to the \n\t\tlist head.\n\t\t@param slot The item to be inserted.\n\t**/\n\tpublic function insertWithPriority(slot:TSlot)\n\t{\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\tvar priority:Int = slot.priority;\n\t\t\n\t\t// Special case: new slot has the highest priority.\n\t\tif (priority >= this.head.priority) return prepend(slot);\n\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\n\t\t// Find a slot with lower priority and go in front of it.\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (priority > current.head.priority)\n\t\t\t{\n\t\t\t\tsubClone.tail = current.prepend(slot);\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Slot has lowest priority.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\n\t\n\t/**\n\t\tReturns the slots in this list that do not contain the supplied \n\t\tlistener. Note: assumes the listener is not repeated within the list.\n\t\t@param\tlistener The function to remove.\n\t\t@return A list consisting of all elements of this list that do not \n\t\t\t\thave listener.\n\t**/\n\tpublic function filterNot(listener:TListener)\n\t{\n\t\tif (!nonEmpty || listener == null) return this;\n\t\t\n\t\tif (Reflect.compareMethods(head.listener, listener)) return tail;\n\t\t\n\t\t// The first item wasn't a match so the filtered list will contain it.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(current.head.listener, listener))\n\t\t\t{\n\t\t\t\t// Splice out the current head.\n\t\t\t\tsubClone.tail = current.tail;\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// The listener was not found so this list is unchanged.\n\t\treturn this;\n\t}\n\t\n\t/**\n\t\tDetermines whether the supplied listener Function is contained \n\t\twithin this list\n\t**/\n\tpublic function contains(listener:TListener):Bool\n\t{\n\t\tif (!nonEmpty) return false;\n\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return true;\n\t\t\tp = p.tail;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t/**\n\t\tRetrieves the Slot associated with a supplied listener within the SlotList.\n\t\t@param   listener The Function being searched for\n\t\t@return  The ISlot in this list associated with the listener parameter \n\t\t\t\t through the ISlot.listener property. Returns null if no such \n\t\t\t\t ISlot instance exists or the list is empty.  \n\t**/\n\tpublic function find(listener:TListener):TSlot\n\t{\n\t\tif (!nonEmpty) return null;\n\t\t\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return p.head;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package bindx;\n\n@:autoBuild(bindx.macro.BindableMacros.buildIBindable())\ninterface IBindable {\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tThis type unifies with any function type.\n\n\tIt is intended to be used as a type parameter constraint. If used as a real\n\ttype, the underlying type will be `Dynamic`.\n**/\n@:callable\nabstract Function(Dynamic) { }\n\n/**\n\tThis type unifies with an enum instance if all constructors of the enum\n\trequire no arguments.\n\n\tIt is intended to be used as a type parameter constraint. If used as a real\n\ttype, the underlying type will be `Dynamic`.\n**/\nabstract FlatEnum(Dynamic) { }\n\ninterface IMap<K,V> {\n\tpublic function get(k:K):Null<V>;\n\tpublic function set(k:K, v:V):Void;\n\tpublic function exists(k:K):Bool;\n\tpublic function remove(k:K):Bool;\n\tpublic function keys():Iterator<K>;\n\tpublic function iterator():Iterator<V>;\n\tpublic function toString():String;\n}","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\ninterface InjectionPoint\n{\n\tfunction applyInjection(target:Dynamic, injector:Injector):Dynamic;\n}\n"],
"names":[],
"mappings":"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"
}