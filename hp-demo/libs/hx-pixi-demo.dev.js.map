{
"version":3,
"file":"hx-pixi-demo.dev.js",
"sourceRoot":"file://",
"sources":["/usr/lib/haxe/std/js/_std/EReg.hx","/usr/lib/haxe/std/js/_std/HxOverrides.hx","/usr/lib/haxe/std/List.hx","/usr/lib/haxe/std/js/_std/Reflect.hx","/usr/lib/haxe/std/js/_std/Std.hx","/usr/lib/haxe/std/StringBuf.hx","/haxe/hp-demo/src/StringCore.hx","/usr/lib/haxe/std/StringTools.hx","/usr/lib/haxe/std/js/_std/Type.hx","/haxelib/arm/0,0,7/arm/mvc/Application.hx","/haxelib/arm/0,0,7/arm/mvc/comms/CommsController.hx","/haxelib/arm/0,0,7/arm/mvc/controller/Controller.hx","/haxelib/arm/0,0,7/arm/mvc/components/ComponentController.hx","/haxelib/arm/0,0,7/arm/mvc/model/Model.hx","/haxelib/arm/0,0,7/arm/mvc/view/View.hx","/haxelib/arm/0,0,7/arm/mvc/components/ComponentView.hx","/haxelib/msignal/1,2,2/msignal/Signal.hx","/haxelib/msignal/1,2,2/msignal/SlotList.hx","/haxe/hp-demo/src/arm/pixidemo/Demo.hx","/haxe/hp-demo/src/arm/pixidemo/comms/DemoCommsController.hx","/haxe/hp-demo/src/arm/pixidemo/components/GameComponentController.hx","/haxe/hp-demo/src/arm/pixidemo/components/GameComponentView.hx","/haxe/hp-demo/src/arm/pixidemo/components/audio/AudioController.hx","/haxe/hp-demo/src/arm/pixidemo/components/audio/AudioView.hx","/haxe/hp-demo/src/arm/pixidemo/components/bunnymark/Bunny.hx","/haxe/hp-demo/src/arm/pixidemo/components/bunnymark/BunnymarkController.hx","/haxe/hp-demo/src/arm/pixidemo/components/bunnymark/BunnymarkView.hx","/haxe/hp-demo/src/arm/pixidemo/components/coins/Coin.hx","/haxe/hp-demo/src/arm/pixidemo/components/coins/CoinsController.hx","/haxe/hp-demo/src/arm/pixidemo/components/coins/CoinsView.hx","/haxe/hp-demo/src/arm/pixidemo/components/livevideo/LiveVideoController.hx","/haxe/hp-demo/src/arm/pixidemo/components/livevideo/LiveVideoView.hx","/haxe/hp-demo/src/arm/pixidemo/components/localisation/LocalisationController.hx","/haxe/hp-demo/src/arm/pixidemo/components/localisation/LocalisationView.hx","/haxe/hp-demo/src/arm/pixidemo/components/menu/MenuController.hx","/haxe/hp-demo/src/arm/pixidemo/components/menu/MenuView.hx","/haxe/hp-demo/src/arm/pixidemo/components/physics/PhysicsController.hx","/haxe/hp-demo/src/arm/pixidemo/components/physics/PhysicsView.hx","/haxe/hp-demo/src/arm/pixidemo/components/preloader/PreloaderController.hx","/haxe/hp-demo/src/arm/pixidemo/components/preloader/PreloaderView.hx","/haxe/hp-demo/src/arm/pixidemo/components/reels/ReelsController.hx","/haxe/hp-demo/src/arm/pixidemo/components/reels/ReelsView.hx","/haxe/hp-demo/src/arm/pixidemo/components/screenguide/ScreenGuideController.hx","/haxe/hp-demo/src/arm/pixidemo/components/screenguide/ScreenGuideView.hx","/haxe/hp-demo/src/arm/pixidemo/components/screentest/ScreenTestController.hx","/haxe/hp-demo/src/arm/pixidemo/components/screentest/ScreenTestView.hx","/haxe/hp-demo/src/arm/pixidemo/components/skeleton/SkeletonController.hx","/haxe/hp-demo/src/arm/pixidemo/components/skeleton/SkeletonView.hx","/haxe/hp-demo/src/arm/pixidemo/components/sprites/SpritesController.hx","/haxe/hp-demo/src/arm/pixidemo/components/sprites/SpritesView.hx","/haxe/hp-demo/src/arm/pixidemo/components/spritesheets/SpritessheetsController.hx","/haxe/hp-demo/src/arm/pixidemo/components/spritesheets/SpritessheetsView.hx","/haxe/hp-demo/src/arm/pixidemo/components/typekit/TypekitController.hx","/haxe/hp-demo/src/arm/pixidemo/components/typekit/TypekitView.hx","/haxe/hp-demo/src/arm/pixidemo/components/video/VideoController.hx","/haxe/hp-demo/src/arm/pixidemo/components/video/VideoView.hx","/haxe/hp-demo/src/arm/pixidemo/controller/DemoController.hx","/haxe/hp-demo/src/arm/pixidemo/core/utils/BrowserUtils.hx","/haxe/hp-demo/src/arm/pixidemo/model/DemoModel.hx","/haxe/hp-demo/src/arm/pixidemo/resources/Layout.hx","/haxe/hp-demo/src/arm/pixidemo/resources/Messages.hx","/haxe/hp-demo/src/arm/pixidemo/resources/Settings.hx","/haxe/hp-demo/src/arm/pixidemo/resources/Sounds.hx","/haxe/hp-demo/src/arm/pixidemo/view/DemoView.hx","/usr/lib/haxe/std/haxe/CallStack.hx","/usr/lib/haxe/std/haxe/Log.hx","/usr/lib/haxe/std/haxe/Serializer.hx","/usr/lib/haxe/std/haxe/Timer.hx","/usr/lib/haxe/std/haxe/Unserializer.hx","/usr/lib/haxe/std/haxe/io/Bytes.hx","/usr/lib/haxe/std/js/_std/haxe/ds/IntMap.hx","/usr/lib/haxe/std/js/_std/haxe/ds/ObjectMap.hx","/usr/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/usr/lib/haxe/std/haxe/io/Eof.hx","/usr/lib/haxe/std/js/Boot.hx","/usr/lib/haxe/std/js/Browser.hx","/haxelib/mconsole/1,6,0/mconsole/Printer.hx","/haxelib/mconsole/1,6,0/mconsole/ConsoleView.hx","/haxelib/mconsole/1,6,0/mconsole/Console.hx","/haxelib/mcover/2,1,1/mcover/Exception.hx","/haxelib/mcover/2,1,1/mcover/coverage/CoverageLogger.hx","/haxelib/mcover/2,1,1/mcover/coverage/MCoverage.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/AbstractNode.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/AbstractBlock.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/AbstractNodeList.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Branch.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Clazz.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Coverage.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/DataUtil.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/File.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Method.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Package.hx","/haxelib/mcover/2,1,1/mcover/coverage/data/Statement.hx","/haxelib/actuate/1,8,1/motion/actuators/GenericActuator.hx","/haxelib/actuate/1,8,1/motion/actuators/SimpleActuator.hx","/haxelib/actuate/1,8,1/motion/easing/Expo.hx","/haxelib/actuate/1,8,1/motion/Actuate.hx","/haxelib/actuate/1,8,1/motion/actuators/MethodActuator.hx","/haxelib/actuate/1,8,1/motion/actuators/MotionPathActuator.hx","/haxelib/actuate/1,8,1/motion/actuators/PropertyDetails.hx","/haxelib/actuate/1,8,1/motion/easing/Cubic.hx","/haxelib/actuate/1,8,1/motion/easing/Linear.hx","/haxelib/msignal/1,2,2/msignal/Slot.hx","/haxe/hp-demo/src/pixi/resources/Loader.hx","/haxe/hp-demo/src/pixi/widgets/Button.hx","/haxe/hp-demo/src/pixi/widgets/Label.hx","/haxe/hp-demo/src/pixi/widgets/menu/Menu.hx","/haxe/hp-demo/src/pixi/widgets/menu/MenuItem.hx","/haxe/hp-demo/src/pixi/widgets/menu/PopoutMenu.hx","/usr/lib/haxe/std/Math.hx","/usr/lib/haxe/std/js/_std/Xml.hx","/haxelib/arm/0,0,7/arm/mvc/notifications/ViewStateNotification.hx","/haxe/hp-demo/src/arm/pixidemo/notifications/internal/MenuNotification.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : Dynamic;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = untyped __new__(\"RegExp\",r,opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic function iterator() : Iterator<T> {\n\t\t#if (java || cs)\n\t\tvar h = h;\n\t\treturn cast {\n\t\t\thasNext : function() {\n\t\t\t\treturn (h != null);\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\t{\n\t\t\t\t\tif( h == null )\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar x = h[0];\n\t\t\t\t\th = h[1];\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#else\n\t\treturn cast {\n\t\t\th : h,\n\t\t\thasNext : function() {\n\t\t\t\treturn untyped (__this__.h != null);\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tuntyped {\n\t\t\t\t\tif( __this__.h == null )\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar x = __this__.h[0];\n\t\t\t\t\t__this__.h = __this__.h[1];\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic untyped {\n\t\treturn try o[field] catch( e : Dynamic ) null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : Dynamic, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String = \"\";\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic function new() {}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","package ;\n\nclass StringCore {\n\n\tpublic static function stripHTML(content:String):String {\n\t\tvar pattern:EReg = ~/<[^>]*>/g;\n\t\treturn pattern.replace(content, \"\");\n\t}\n\n\tpublic static function capitalize(value:String):String {\n\t\tvar words = value.split(\" \");\n\t\tfor (i in 0...words.length) {\n\t\t\tvar word = words[i];\n\t\t\twords[i] = word.charAt(0).toUpperCase() + word.substr(1);\n\t\t}\n\t\t\n\t\treturn words.join(\" \");\n\t}\t\n\n\tpublic static function substitute(source:String, values:Array<Dynamic>):String {\n\t\tfor (i in 0...values.length)\n\t\t\tsource = source.split(\"{\" + i + \"}\").join(values[i]);\n\t\treturn source;\n\t}\n\n\tpublic static inline function contains(source:String, subject:String):Bool {\n\t\treturn source.indexOf(subject) != -1;\n\t}\n\t\n\tpublic static inline function lastChar(source:String):String {\n\t\treturn (source == \"\") ? \"\" : source.charAt(source.length - 1);\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cs\n@:keep\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"encodeURIComponent\"](s);\n\t\t#elseif flash\n\t\t\treturn _global[\"escape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.EscapeUriString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif flash\n\t\t\treturn _global[\"unescape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.UnescapeDataString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash9\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`.\n\n\t\tThis method is faster than String.charCodeAt() on most platforms.\n\t\tHowever, unlike String.charCodeAt(), the result is unspecified if\n\t\t`index` is negative or exceeds `s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int untyped {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn s.cca(index);\n\t\t#elseif flash9\n\t\treturn s.cca(index);\n\t\t#elseif flash\n\t\treturn s[\"cca\"](index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(untyped s[index], Int) : -1;\n\t\t#elseif js\n\t\t\t#if mt\n\t\treturn (untyped s).cca(index);\n\t\t\t#else\n\t\treturn (untyped s).charCodeAt(index);\n\t\t\t#end\n\t\t#else\n\t\treturn s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash9 || cpp)\n\t\treturn c == 0;\n\t\t#elseif flash8\n\t\treturn c <= 0; // fast NaN\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static function getClass<T>( o : T ) : Class<T> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","package arm.mvc;\n\nimport arm.mvc.model.Model;\nimport arm.mvc.view.View;\nimport arm.mvc.controller.Controller;\nimport arm.mvc.comms.CommsController;\n\nclass Application {\n\n\tpublic var model(default, default):Model;\n\tpublic var view(default, default):View;\n\tpublic var controller(default, default):Controller;\n\tpublic var comms(default, default):CommsController;\n\n\tpublic function new() {\n\n\t}\n}","package arm.mvc.comms;\n\nimport msignal.Signal;\n\nclass CommsController {\n\n    public var success:Signal2<String, String> = new Signal2(String, Dynamic);\n    public var error:Signal1<String> = new Signal1(String);\n\n    public function new() {\n\n    }\n\n    public function reset():Void {\n        success.removeAll();\n        error.removeAll();\n        success = null;\n        error = null;\n    }\n}","package arm.mvc.controller;\n\nimport arm.mvc.model.Model;\nimport arm.mvc.view.View;\nimport arm.mvc.comms.CommsController;\n\nclass Controller implements IController {\n\n\tpublic var model(default, default):Model;\n\tpublic var view(default, default):View;\n    public var comms(default, default):CommsController;\n\t\n\tpublic function new(m:Model, v:View, c:CommsController) {\n        model = m;\n        view = v;\n        comms = c;\n\n        _addNotificationListeners();\n        _addViewListeners();\n        _setupComponents();\n\t}\n\n    private function _addNotificationListeners():Void {}\n    private function _addViewListeners():Void {}\n    private function _setupComponents():Void {}\n\n\tpublic function reset():Void {\n\t\tif (view != null) view.reset();\n\t\tif (model != null) model.reset();\n        if (comms != null) comms.reset();\n        model = null;\n        view = null;\n        comms = null;\n\t}\n}","package arm.mvc.components;\n\nimport arm.mvc.model.Model;\nimport arm.mvc.controller.Controller;\nimport arm.mvc.notifications.ViewStateNotification;\nimport arm.mvc.comms.CommsController;\n\nclass ComponentController extends Controller {\n\n\tpublic var mainModel(default, default):Model;\n\t\n\tpublic function new(m:ComponentModel, v:ComponentView, c:CommsController, mm:Model) {\n\t\tsuper(m, v, c);\n\t\tmainModel = mm;\n\t}\n\n\tprivate override function _addNotificationListeners():Void {\n        super._addNotificationListeners();\n        ViewStateNotification.preload.addOnce(_preload);\n        ViewStateNotification.create.addOnce(_create);\n        ViewStateNotification.update.add(_update);\n        ViewStateNotification.resize.add(_resize);\n\t}\n\n\tprivate function _preload():Void {}\n\tprivate function _create():Void {}\n\tprivate function _update(elapsedTime:Float):Void {}\n\tprivate function _resize():Void {}\n}","package arm.mvc.model;\n\nclass Model implements IModel {\t\n\t\n\tpublic function new() {\n\t\treset();\n\t}\n\t\n\tpublic function reset():Void {}\n}","package arm.mvc.view;\n\nclass View implements IView {\n\n    @:isVar public var stage(get, set):Dynamic;\n    @:isVar public var container(get, set):Dynamic;\n\n    public function new(stage:Dynamic, ?container:Dynamic) {\n        this.stage = stage;\n        this.container = container;\n    }\n\n    private function get_stage():Dynamic {\n        return stage;\n    }\n\n    private function set_stage(stage):Dynamic {\n        return this.stage = stage;\n    }\n\n    private function get_container():Dynamic {\n        return container;\n    }\n\n    private function set_container(container):Dynamic {\n        return this.container = container;\n    }\n\n\tpublic function reset():Void {\n        stage = null;\n        container = null;\n    }\n}","package arm.mvc.components;\n\nimport arm.mvc.view.View;\n\nclass ComponentView extends View {\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n}","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Slot;\n\n/**\n\tA convenience type describing any kind of signal.\n**/\ntypedef AnySignal = Signal<Dynamic, Dynamic>;\n\n/**\n\tA Signal manages a list of listeners, which are executed when the signal is \n\tdispatched.\n**/\nclass Signal<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\tpublic var valueClasses:Array<Dynamic>;\n\n\t/**\n\t\tThe current number of listeners for the signal.\n\t**/\n\tpublic var numListeners(get_numListeners, null):Int;\n\t\n\tvar slots:SlotList<TSlot, TListener>;\n\tvar priorityBased:Bool;\n\n\tfunction new(?valueClasses:Array<Dynamic>)\n\t{\n\t\tif (valueClasses == null) valueClasses = [];\n\t\tthis.valueClasses = valueClasses;\n\t\tslots = cast SlotList.NIL;\n\t\tpriorityBased = false;\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function add(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is called,\n\t\tafter the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnce(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener, true);\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\tAfter you successfully register an event listener,\n\t\tyou cannot change its priority through additional calls to add().\n\t\tTo change a listener's priority, you must first call remove().\n\t\tThen you can register the listener again with the new priority level.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, false, priority);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is \n\t\tcalled, after the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnceWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, true, priority);\n\t}\n\n\t/**\n\t\tUnsubscribes a listener from the signal.\n\t\t\n\t\t@param listener The listener to remove\n\t\t@return The removed listener slot\n\t**/\n\tpublic function remove(listener:TListener):TSlot\n\t{\n\t\tvar slot = slots.find(listener);\n\t\tif (slot == null) return null;\n\t\t\n\t\tslots = slots.filterNot(listener);\n\t\treturn slot;\n\t}\n\n\t/**\n\t\tUnsubscribes all listeners from the signal.\n\t**/\n\tpublic function removeAll():Void\n\t{\n\t\tslots = cast SlotList.NIL;\n\t}\n\n\tfunction registerListener(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\tif (registrationPossible(listener, once))\n\t\t{\n\t\t\tvar newSlot = createSlot(listener, once, priority);\n\t\t\t\n\t\t\tif (!priorityBased && priority != 0) priorityBased = true;\n\t\t\tif (!priorityBased && priority == 0) slots = slots.prepend(newSlot);\n\t\t\telse slots = slots.insertWithPriority(newSlot);\n\n\t\t\treturn newSlot;\n\t\t}\n\t\t\n\t\treturn slots.find(listener);\n\t}\n\n\tfunction registrationPossible(listener, once)\n\t{\n\t\tif (!slots.nonEmpty) return true;\n\t\t\n\t\tvar existingSlot = slots.find(listener);\n\t\tif (existingSlot == null) return true;\n\n\t\tif (existingSlot.once != once)\n\t\t{\n\t\t\t// If the listener was previously added, definitely don't add it again.\n\t\t\t// But throw an exception if their once values differ.\n\t\t\tthrow \"You cannot addOnce() then add() the same listener without removing the relationship first.\";\n\t\t}\n\t\t\n\t\treturn false; // Listener was already registered.\n\t}\n\n\t@:IgnoreCover\n\tfunction createSlot(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\treturn null;\n\t}\n\n\tfunction get_numListeners()\n\t{\n\t\treturn slots.length;\n\t}\n}\n\n/**\n\tSignal that executes listeners with no arguments.\n**/\nclass Signal0 extends Signal<Slot0, Void -> Void>\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with no arguements.\n\t**/\n\tpublic function dispatch()\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute();\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot0(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass Signal1<TValue> extends Signal<Slot1<TValue>, TValue -> Void>\n{\n\tpublic function new(?type:Dynamic=null)\n\t{\n\t\tsuper([type]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with one arguement.\n\t**/\n\tpublic function dispatch(value:TValue)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot1<TValue>(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with two arguments.\n**/\nclass Signal2<TValue1, TValue2> extends Signal<Slot2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\tpublic function new(?type1:Dynamic=null, ?type2:Dynamic=null)\n\t{\n\t\tsuper([type1, type2]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with two arguements.\n\t**/\n\tpublic function dispatch(value1:TValue1, value2:TValue2)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value1, value2);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot2<TValue1, TValue2>(this, listener, once, priority);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nclass SlotList<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\t@:IgnoreCover\n\tstatic function __init__() { NIL = new SlotList<Dynamic, Dynamic>(null, null); }\n\t\n\t/**\n\t\tRepresents an empty list. Used as the list terminator.\n\t**/\n\tpublic static var NIL:SlotList<Dynamic, Dynamic>;\n\t\n\tpublic var head:TSlot;\n\tpublic var tail:SlotList<TSlot, TListener>;\n\tpublic var nonEmpty:Bool;\n\t\n\t/**\n\t\tCreates and returns a new SlotList object.\n\n\t\t<p>A user never has to create a SlotList manually. \n\t\tUse the <code>NIL</code> element to represent an empty list. \n\t\t<code>NIL.prepend(value)</code> would create a list containing \n\t\t<code>value</code></p>.\n\n\t\t@param head The first slot in the list.\n\t\t@param tail A list containing all slots except head.\n\t**/\n\tpublic function new(head:TSlot, tail:SlotList<TSlot, TListener>=null)\n\t{\n\t\tnonEmpty = false;\n\t\t\n\t\tif (head == null && tail == null)\n\t\t{\n\t\t\tif (NIL != null)\n\t\t\t{\n\t\t\t\tthrow \"Parameters head and tail are null. Use the NIL element instead.\";\n\t\t\t}\n\t\t\t\n\t\t\t// this is the NIL element as per definition\n\t\t\tnonEmpty = false;\n\t\t}\n\t\telse if (head == null)\n\t\t{\n\t\t\tthrow \"Parameter head cannot be null.\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.head = head;\n\t\t\tthis.tail = (tail == null ? cast NIL : tail);\n\t\t\tnonEmpty = true;\n\t\t}\n\t}\n\t\n\t/**\n\t\tThe number of slots in the list.\n\t**/\n\tpublic var length(get_length, null):Int;\n\tfunction get_length():Int\n\t{\n\t\tif (!nonEmpty) return 0;\n\t\tif (tail == NIL) return 1;\n\t\t\n\t\t// We could cache the length, but it would make methods like filterNot unnecessarily complicated.\n\t\t// Instead we assume that O(n) is okay since the length property is used in rare cases.\n\t\t// We could also cache the length lazy, but that is a waste of another 8b per list node (at least).\n\t\t\n\t\tvar result = 0;\n\t\tvar p = this;\n\t\t\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\t++result;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tPrepends a slot to this list.\n\t\t@param\tslot The item to be prepended.\n\t\t@return\tA list consisting of slot followed by all elements of this list.\n\t**/\n\tpublic function prepend(slot:TSlot)\n\t{\n\t\treturn new SlotList<TSlot, TListener>(slot, this);\n\t}\n\t\n\t/**\n\t\tAppends a slot to this list.\n\t\tNote: appending is O(n). Where possible, prepend which is O(1).\n\t\tIn some cases, many list items must be cloned to \n\t\tavoid changing existing lists.\n\t\t@param\tslot The item to be appended.\n\t\t@return\tA list consisting of all elements of this list followed by slot.\n\t**/\n\tpublic function append(slot:TSlot)\n\t{\n\t\tif (slot == null) return this;\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\t// Special case: just one slot currently in the list.\n\t\tif (tail == NIL) \n\t\t{\n\t\t\treturn new SlotList<TSlot, TListener>(slot).prepend(head);\n\t\t}\n\t\t\n\t\t// The list already has two or more slots.\n\t\t// We have to build a new list with cloned items because they are immutable.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Append the new slot last.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\t\t\n\t\n\t/**\n\t\tInsert a slot into the list in a position according to its priority.\n\t\tThe higher the priority, the closer the item will be inserted to the \n\t\tlist head.\n\t\t@param slot The item to be inserted.\n\t**/\n\tpublic function insertWithPriority(slot:TSlot)\n\t{\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\tvar priority:Int = slot.priority;\n\t\t\n\t\t// Special case: new slot has the highest priority.\n\t\tif (priority >= this.head.priority) return prepend(slot);\n\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\n\t\t// Find a slot with lower priority and go in front of it.\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (priority > current.head.priority)\n\t\t\t{\n\t\t\t\tsubClone.tail = current.prepend(slot);\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Slot has lowest priority.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\n\t\n\t/**\n\t\tReturns the slots in this list that do not contain the supplied \n\t\tlistener. Note: assumes the listener is not repeated within the list.\n\t\t@param\tlistener The function to remove.\n\t\t@return A list consisting of all elements of this list that do not \n\t\t\t\thave listener.\n\t**/\n\tpublic function filterNot(listener:TListener)\n\t{\n\t\tif (!nonEmpty || listener == null) return this;\n\t\t\n\t\tif (Reflect.compareMethods(head.listener, listener)) return tail;\n\t\t\n\t\t// The first item wasn't a match so the filtered list will contain it.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(current.head.listener, listener))\n\t\t\t{\n\t\t\t\t// Splice out the current head.\n\t\t\t\tsubClone.tail = current.tail;\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// The listener was not found so this list is unchanged.\n\t\treturn this;\n\t}\n\t\n\t/**\n\t\tDetermines whether the supplied listener Function is contained \n\t\twithin this list\n\t**/\n\tpublic function contains(listener:TListener):Bool\n\t{\n\t\tif (!nonEmpty) return false;\n\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return true;\n\t\t\tp = p.tail;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t/**\n\t\tRetrieves the Slot associated with a supplied listener within the SlotList.\n\t\t@param   listener The Function being searched for\n\t\t@return  The ISlot in this list associated with the listener parameter \n\t\t\t\t through the ISlot.listener property. Returns null if no such \n\t\t\t\t ISlot instance exists or the list is empty.  \n\t**/\n\tpublic function find(listener:TListener):TSlot\n\t{\n\t\tif (!nonEmpty) return null;\n\t\t\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return p.head;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n","package arm.pixidemo;\n\nimport arm.pixidemo.core.Bucket;\nimport arm.pixidemo.core.utils.BrowserUtils;\nimport pixi.utils.Stats;\nimport js.html.Element;\nimport js.Browser;\n\nimport pixi.renderers.webgl.WebGLRenderer;\nimport pixi.display.DisplayObjectContainer;\nimport pixi.resources.Loader;\nimport pixi.display.Sprite;\nimport pixi.display.Stage;\nimport pixi.utils.Detector;\n\nimport arm.pixidemo.resources.Layout;\nimport arm.pixidemo.resources.Messages;\nimport arm.pixidemo.resources.Settings;\nimport arm.pixidemo.controller.DemoController;\nimport arm.pixidemo.model.DemoModel;\nimport arm.pixidemo.comms.DemoCommsController;\nimport arm.pixidemo.view.DemoView;\nimport arm.pixidemo.view.StageProperties;\n\nimport arm.mvc.notifications.ViewStateNotification;\nimport arm.mvc.Application;\n\n@IgnoreCover\nclass Demo extends Application {\n\n\tvar _stats:Stats;\n\tvar _bunny:Sprite;\n\tvar _renderer:WebGLRenderer;\n\tvar _game:Stage;\n\tvar _gameContainer:DisplayObjectContainer;\n\n\tvar _localeFolder:String;\n\tvar _bucketFolder:String;\n\tvar _scaleFolder:String;\n\tvar _baseFolder:String;\n\n\tvar _canvas:Element;\n\n\tvar _skipFrame:Bool;\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\n\tpublic inline static var buildID:String = BuildID.get();\n\n\tpublic function new() {\n\t\tsuper();\n\t\tConsole.start();\n\t\t_skipFrame = false;\n\t\t_setStageProperties();\n\t\t_setAssetFolders();\n\t\t_setupApplication();\n\t\t_showStats();\n\t\t_setupMVCS();\n\t\t_loadBucketSizes();\n\t}\n\n\tfunction _setStageProperties() {\n\t\tStageProperties.actualPixelRatio = Browser.window.devicePixelRatio;\n\t\tStageProperties.pixelRatio = BrowserUtils.getPixelRatio();\n\t\tStageProperties.screenWidth = Browser.window.innerWidth;\n\t\tStageProperties.screenHeight = Browser.window.innerHeight;\n\t\tStageProperties.orientation = (StageProperties.screenWidth > StageProperties.screenHeight) ? StageProperties.LANDSCAPE : StageProperties.PORTRAIT;\n\t}\n\n\tfunction _setAssetFolders() {\n\t\t_localeFolder = \"en\";\n\t\t_scaleFolder = \"scale-\" + StageProperties.pixelRatio;\n\t\tLoader.BASE_URL = \"assets/\" + _localeFolder + \"/\";\n\t}\n\n\tfunction _setupApplication() {\n\t\t_canvas = Browser.document.getElementById(\"game\");\n\t\t_canvas.style.width = StageProperties.screenWidth + \"px\";\n\t\t_canvas.style.height = StageProperties.screenHeight + \"px\";\n\n\t\t_game = new Stage(0xFFFFFF);\n\t\t_gameContainer = new DisplayObjectContainer();\n\t\t_game.addChild(_gameContainer);\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = _canvas;\n\t\trenderingOptions.resolution = StageProperties.pixelRatio;\n\n\t\t_renderer = Detector.autoDetectRenderer(StageProperties.screenWidth, StageProperties.screenHeight, renderingOptions);\n\t\tBrowser.document.body.appendChild(_renderer.view);\n\t\tBrowser.window.onresize = _onResize;\n\t\tBrowser.window.requestAnimationFrame(cast _update);\n\t\t_lastTime = Date.now();\n\t}\n\n\tfunction _setupMVCS() {\n\t\tview = new DemoView(_game, _gameContainer);\n\t\tcomms = new DemoCommsController();\n\t\tmodel = new DemoModel();\n\t\tcontroller = new DemoController(model, view, comms);\n\t}\n\n\tfunction _showStats() {\n\t\tvar _container = Browser.document.createElement(\"div\");\n\t\tBrowser.document.body.appendChild(_container);\n\t\t_stats = new Stats();\n\t\t_stats.domElement.style.position = \"absolute\";\n\t\t_stats.domElement.style.top = \"6px\";\n\t\t_stats.domElement.style.right = \"6px\";\n\t\t_container.appendChild(_stats.domElement);\n\t\t_stats.begin();\n\t}\n\n\tfunction _loadBucketSizes() {\n\t\tLoader.loadJson(\"bucket_sizes.json\");\n\t\tLoader.jsonLoadComplete.addOnce(_onBucketSizesLoaded);\n\t}\n\n\tfunction _onBucketSizesLoaded(json:Dynamic) {\n\t\tvar buckets:Buckets = json;\n\t\tvar bucketSizes:Array<BucketSize> = (StageProperties.orientation == StageProperties.LANDSCAPE) ? buckets.landscape : buckets.portrait;\n\t\tvar closestBucket = bucketSizes[0];\n\n\t\tfor (i in 0 ... bucketSizes.length) {\n\t\t\tvar bucket = bucketSizes[i];\n\n\t\t\tif (bucket.height <= StageProperties.screenHeight) {\n\t\t\t\tclosestBucket = bucket;\n\t\t\t}\n\t\t}\n\n\t\tStageProperties.bucketWidth = closestBucket.width;\n\t\tStageProperties.bucketHeight = closestBucket.height;\n\n\t\t_updateScreenValues();\n\n\t\t_bucketFolder = Math.max(StageProperties.bucketWidth, StageProperties.bucketHeight) + \"x\" + Math.min(StageProperties.bucketWidth, StageProperties.bucketHeight);\n\t\t_baseFolder = \"assets/\" + _localeFolder + \"/\" + _bucketFolder + \"/\" + _scaleFolder + \"/\";\n\n\t\tLoader.BUCKET_URL = Loader.BASE_URL + _bucketFolder + \"/\";\n\t\tLoader.SCALE_URL = Loader.BUCKET_URL + _scaleFolder + \"/\";\n\t\tLoader.loadJson(\"settings.json\");\n\t\tLoader.jsonLoadComplete.addOnce(_onLocaleSettingsLoaded);\n\t}\n\n\tfunction _onLocaleSettingsLoaded(json:Dynamic) {\n\t\tfor (n in Reflect.fields(json)) Reflect.setField(Settings, n, Reflect.field(json, n));\n\t\tLoader.loadJson(\"settings.json\", true);\n\t\tLoader.jsonLoadComplete.addOnce(_onBucketSettingsLoaded);\n\t}\n\n\tfunction _onBucketSettingsLoaded(json:Dynamic) {\n\t\tfor (n in Reflect.fields(json)) Reflect.setField(Settings, n, Reflect.field(json, n));\n\t\tLoader.loadJson(\"messages.json\");\n\t\tLoader.jsonLoadComplete.addOnce(_onLocaleMessagesLoaded);\n\t}\n\n\tfunction _onLocaleMessagesLoaded(json:Dynamic) {\n\t\tfor (n in Reflect.fields(json)) Reflect.setField(Messages, n, Reflect.field(json, n));\n\t\tLoader.loadJson(\"messages.json\", true);\n\t\tLoader.jsonLoadComplete.addOnce(_onBucketMessagesLoaded);\n\t}\n\n\tfunction _onBucketMessagesLoaded(json:Dynamic) {\n\t\tfor (n in Reflect.fields(json)) Reflect.setField(Messages, n, Reflect.field(json, n));\n\t\tLoader.loadJson(\"layout.json\", true);\n\t\tLoader.jsonLoadComplete.addOnce(_onBucketLayoutLoaded);\n\t}\n\n\tfunction _onBucketLayoutLoaded(json:Dynamic) {\n\t\tfor (n in Reflect.fields(json)) Reflect.setField(Layout, n, Reflect.field(json, n));\n\t\tViewStateNotification.preloader.dispatch();\n\t}\n\n\tfunction _updateScreenValues() {\n\t\tStageProperties.screenX = (StageProperties.screenWidth - StageProperties.bucketWidth) / 2;\n\t\tStageProperties.screenY = (StageProperties.screenHeight - StageProperties.bucketHeight) / 2;\n\t\t//_gameContainer.x = StageProperties.screenX;\n\t\t//_gameContainer.y = StageProperties.screenY;\n\n\t\tvar horizontalOverlap:Bool = (StageProperties.screenWidth > StageProperties.bucketWidth);\n\t\tvar verticalOverlap:Bool = (StageProperties.screenHeight > StageProperties.bucketHeight);\n\n\t\tif (horizontalOverlap && verticalOverlap) StageProperties.bucketOverlapType = StageProperties.BUCKET_OVERLAP_FULL;\n\t\telse if (horizontalOverlap) StageProperties.bucketOverlapType = StageProperties.BUCKET_OVERLAP_HORIZONTAL;\n\t\telse if (verticalOverlap) StageProperties.bucketOverlapType = StageProperties.BUCKET_OVERLAP_VERTICAL;\n\t}\n\n\tfunction _update() {\n\t\tif (_skipFrame) _skipFrame = false;\n\t\telse {\n\t\t\t_renderer.render(_game);\n\t\t\t_skipFrame = true;\n\t\t\t_currentTime = Date.now();\n\t\t\tViewStateNotification.update.dispatch(_currentTime.getTime() - _lastTime.getTime());\n\t\t\t_lastTime = _currentTime;\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _update);\n\t\t_stats.update();\n\t}\n\n\tfunction _onResize(event) {\n\t\tStageProperties.screenWidth = Browser.window.innerWidth;\n\t\tStageProperties.screenHeight = Browser.window.innerHeight;\n\t\t_renderer.resize(StageProperties.screenWidth, StageProperties.screenHeight);\n\t\t_canvas.style.width = StageProperties.screenWidth + \"px\";\n\t\t_canvas.style.height = StageProperties.screenHeight + \"px\";\n\t\t_updateScreenValues();\n\t\tViewStateNotification.resize.dispatch();\n\t}\n\n\tstatic function main() {\n\t\tnew Demo();\n\t\ttrace(\"info\", \"Build ID: \", buildID);\n\n        #if swf\n\t\t\tvar logger = mcover.coverage.MCoverage.getLogger();\n\t\t\tvar client = new gamesys.core.utils.CoveragePrintClient();\n\t\t\tclient.includeHeader = true;\n\t\t\tclient.includeMissingBlocks = true;\n\t\t\tclient.includeExecutionFrequency = true;\n\t\t\tclient.includeClassBreakdown = true;\n\t\t\tclient.includePackageBreakdown = true;\n\t\t\tclient.includeOverallPercentage = true;\n\t\t\tclient.includeSummary = true;\n\n\t\t\tlogger.addClient(client);\n\t\t\tlogger.report();\n\t\t#end\n\t}\n}","package arm.pixidemo.comms;\n\nimport arm.mvc.comms.CommsController;\n\nclass DemoCommsController extends CommsController {\n\n\tpublic function new() {\n\t\tsuper();\n\t}\n\n\n}","package arm.pixidemo.components;\n\nimport arm.mvc.components.ComponentController;\nimport arm.pixidemo.comms.DemoCommsController;\nimport arm.pixidemo.model.DemoModel;\n\nclass GameComponentController extends ComponentController {\n\n\tpublic var gameMainModel(default, default):DemoModel;\n\tpublic var gameComms(default, default):DemoCommsController;\n\n\tpublic function new(m, v, c, mm) {\n\t\tsuper(m, v, c, mm);\n\t\tif (mainModel != null) gameMainModel = cast(mainModel, DemoModel);\n\t\tif (comms != null) gameComms = cast(comms, DemoCommsController);\n\t}\n}","package arm.pixidemo.components;\n\nimport arm.pixidemo.view.StageProperties;\nimport pixi.display.DisplayObject;\nimport arm.pixidemo.resources.Sounds;\nimport arm.mvc.components.ComponentView;\nimport pixi.display.Stage;\nimport pixi.display.DisplayObjectContainer;\n\nimport arm.pixidemo.resources.Settings;\nimport arm.pixidemo.resources.Layout;\nimport arm.pixidemo.resources.Messages;\n\nclass GameComponentView extends ComponentView {\n\n\tpublic var gameStage(default, default):Stage;\n\tpublic var gameContainer(default, default):DisplayObjectContainer;\n\n\tvar _messages:Messages;\n\tvar _layout:Layout;\n\tvar _settings:Settings;\n\tvar _sounds:Sounds;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\n\t\tgameStage = cast(stage, Stage);\n\t\tif (container != null) gameContainer = cast(container, DisplayObjectContainer);\n\n\t\t_messages = Messages.getInstance();\n\t\t_layout = Layout.getInstance();\n\t\t_settings = Settings.getInstance();\n\t\t_sounds = Sounds.getInstance();\n\t}\n\n\toverride function get_stage():Stage {\n\t\treturn cast(stage, Stage);\n\t}\n\n\toverride function get_container():DisplayObjectContainer {\n\t\treturn cast(container, DisplayObjectContainer);\n\t}\n\n\tfunction _applyScale(item:DisplayObject) {\n\t\titem.scale.set(1 / StageProperties.pixelRatio, 1 / StageProperties.pixelRatio);\n\t}\n}","package arm.pixidemo.components.audio;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass AudioController extends GameComponentController {\n\n\tvar _id:Int = 9;\n\tvar _showing:Bool = false;\n\tvar _view:AudioView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, AudioView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.audio;\n\nimport howler.Howl;\nimport pixi.widgets.Button;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass AudioView extends GameComponentView {\n\n\tvar _buttons:Array<Button>;\n\tvar _uiContainer:DisplayObjectContainer;\n\tvar _bgSound:Howl;\n\tvar _sound:Howl;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_uiContainer = new DisplayObjectContainer();\n\t\tgameContainer.addChild(_uiContainer);\n\t\t_buttons = [];\n\t\t_bgSound = _sounds.getSound(\"bg\");\n\t\t_bgSound.loop(true);\n\t\t_addButton(\"BG SOUND\", 0, 0, 90, 30, _playBGSound);\n\t\tfor (i in 1 ... 5) {\n\t\t\t_addButton(\"SOUND \" + i, (i * 90), 0, 90, 30, _playSound, i);\n\t\t}\n\t\t_addButton(\"RESET\", 450, 0, 60, 30, _stopAll);\n\n\t\tresize();\n\t}\n\n\tfunction _playBGSound() {\n\t\t_bgSound.play();\n\t}\n\n\tfunction _playSound(id:Int) {\n\t\tif (_sound != null) _sound.stop();\n\t\t_sound = _sounds.getSound(\"sound\" + id);\n\t\t_sound.play();\n\t}\n\n\tfunction _stopAll() {\n\t\t_bgSound.stop();\n\t\t_sound.stop();\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\tvar button = new Button(label, width, height, data);\n\t\tbutton.x = x;\n\t\tbutton.y = y;\n\t\tbutton.action.add(callback);\n\t\tbutton.enable();\n\t\t_buttons.push(button);\n\t\t_uiContainer.addChild(button);\n\t}\n\n\tpublic function hide() {\n\t\tfor (i in 0 ... _buttons.length) {\n\t\t\tvar button:Button = _buttons[i];\n\t\t\t_uiContainer.removeChild(button);\n\t\t\t_buttons[i] = null;\n\t\t}\n\t\t_buttons = null;\n\t\tgameContainer.removeChild(_uiContainer);\n\t\t_uiContainer = null;\n\t\tif (_bgSound != null) _bgSound.stop();\n\t\tif (_sound != null) _sound.stop();\n\t\t_bgSound = null;\n\t\t_sound = null;\n\t}\n\n\tpublic function resize() {\n\t\t_uiContainer.x = (StageProperties.screenWidth - 510) / 2;\n\t\t_uiContainer.y = (StageProperties.screenHeight - 30) / 2;\n\t\ttrace(_uiContainer.width, _uiContainer.height);\n\t}\n}","package arm.pixidemo.components.bunnymark;\n\nimport pixi.textures.Texture;\nimport pixi.display.Sprite;\n\nclass Bunny extends Sprite {\n\n\tpublic var speedX(default, default):Float;\n\tpublic var speedY(default, default):Float;\n\tpublic var scaleSpeed(default, default):Float;\n\tpublic var rotationSpeed(default, default):Float;\n\n\tpublic function new(texture:Texture) {\n\t\tsuper(texture);\n\t}\n}\n","package arm.pixidemo.components.bunnymark;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass BunnymarkController extends GameComponentController {\n\n\tvar _id:Int = 5;\n\tvar _view:BunnymarkView;\n\tvar _showing:Bool = false;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, BunnymarkView);\n\t}\n\n\toverride function _update(elapsedTime:Float) {\n\t\tif (_showing) _view.update(elapsedTime);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.bunnymark;\n\nimport pixi.resources.Loader;\nimport pixi.textures.Texture;\nimport pixi.widgets.Button;\nimport pixi.widgets.Label;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass BunnymarkView extends GameComponentView {\n\n\tvar _sprites:Array<Bunny>;\n\tvar _buttons:Array<Button>;\n\tvar _bunnyTexture:Texture;\n\n\tvar _spriteContainer:DisplayObjectContainer;\n\tvar _uiContainer:DisplayObjectContainer;\n\tvar _quantityLabel:Label;\n\n\tvar _isScale:Bool;\n\tvar _isRotation:Bool;\n\n\tvar _maxX:Float;\n\tvar _maxY:Float;\n\tvar _minX:Float;\n\tvar _minY:Float;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_bunnyTexture = Texture.fromImage(Loader.SCALE_URL + \"bunnys/images/bunny.png\");\n\t\t_sprites = [];\n\t\t_buttons = [];\n\n\t\t_spriteContainer = new DisplayObjectContainer();\n\t\t_uiContainer = new DisplayObjectContainer();\n\n\t\t_addButton(\"Reset\", 0, 0, 100, 30, _reset);\n\t\t_addButton(\"Scale\", 100, 0, 100, 30, _scale);\n\t\t_addButton(\"Rotation\", 200, 0, 100, 30, _rotation);\n\t\t_addButton(\"Add 10\", 0, 30, 100, 30, _addBunnys, 10);\n\t\t_addButton(\"Add 100\", 100, 30, 100, 30, _addBunnys, 100);\n\t\t_addButton(\"Add 500\", 200, 30, 100, 30, _addBunnys, 500);\n\t\t_addButton(\"Add 1000\", 0, 60, 100, 30, _addBunnys, 1000);\n\t\t_addButton(\"Add 5000\", 100, 60, 100, 30, _addBunnys, 5000);\n\t\t_addButton(\"Add 10000\", 200, 60, 100, 30, _addBunnys, 10000);\n\n\t\t_quantityLabel = new Label(\"\", 300, 24);\n\t\t_quantityLabel.y = 90;\n\t\t_uiContainer.addChild(_quantityLabel);\n\t\tresize();\n\n\t\t_updateQuanityLabel();\n\t\tgameContainer.addChild(_spriteContainer);\n\t\tgameContainer.addChild(_uiContainer);\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\tvar button = new Button(label, width, height, data);\n\t\tbutton.x = x;\n\t\tbutton.y = y;\n\t\tbutton.action.add(callback);\n\t\tbutton.enable();\n\n\t\t_buttons.push(button);\n\t\t_uiContainer.addChild(button);\n\t}\n\n\tfunction _updateQuanityLabel() {\n\t\t_quantityLabel.setText(\"Quantity: \" + _sprites.length);\n\t}\n\n\tfunction _reset() {\n\t\tfor (i in 0 ... _sprites.length) {\n\t\t\t_spriteContainer.removeChild(_sprites[i]);\n\t\t}\n\n\t\t_sprites = [];\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_updateQuanityLabel();\n\t}\n\n\tfunction _scale() {\n\t\t_isScale = !_isScale;\n\t}\n\n\tfunction _rotation() {\n\t\t_isRotation = !_isRotation;\n\t}\n\n\tfunction _addBunnys(count:Int) {\n\t\tfor (i in 0 ... count) {\n\t\t\tvar bunny:Bunny = new Bunny(_bunnyTexture);\n\t\t\t_spriteContainer.addChild(bunny);\n\t\t\tbunny.x = Std.random(Std.int(StageProperties.screenWidth));\n\t\t\tbunny.y = Std.random(Std.int(StageProperties.screenHeight));\n\t\t\tbunny.anchor.set(0.5, 0.5);\n\t\t\tbunny.speedX = Math.random() * 16 + 2;\n\t\t\tbunny.speedY = (Math.random() * 16) - 10;\n\t\t\tbunny.rotationSpeed = Math.random() / 50 + 0.01;\n\t\t\tbunny.scaleSpeed = Math.random() / 50 + 0.01;\n\t\t\t_sprites.push(bunny);\n\t\t\t_applyScale(bunny);\n\t\t}\n\t\t_updateQuanityLabel();\n\t}\n\n\tpublic function update(elapsedTime:Float) {\n\t\tfor (i in 0 ... _sprites.length) {\n\t\t\tvar bunny:Bunny = _sprites[i];\n\t\t\tbunny.position.x += bunny.speedX;\n\t\t\tbunny.position.y += bunny.speedY;\n\t\t\tbunny.speedY += 4.75;\n\n\t\t\tif (bunny.position.x > _maxX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = _maxX;\n\t\t\t}\n\t\t\telse if (bunny.position.x < _minX) {\n\t\t\t\tbunny.speedX *= -1;\n\t\t\t\tbunny.position.x = _minX;\n\t\t\t}\n\n\t\t\tif (bunny.position.y > _maxY) {\n\t\t\t\tbunny.speedY *= -0.90;\n\t\t\t\tbunny.position.y = _maxY;\n\t\t\t\tif (Math.random() > 0.5) bunny.speedY -= Math.random() * 6;\n\t\t\t}\n\t\t\telse if (bunny.position.y < _minY) {\n\t\t\t\tbunny.speedY = 0;\n\t\t\t\tbunny.position.y = this._minY;\n\t\t\t}\n\n\t\t\tif (_isScale) {\n\t\t\t\tbunny.scale.x += bunny.scaleSpeed;\n\t\t\t\tbunny.scale.y += bunny.scaleSpeed;\n\t\t\t\tif (bunny.scale.x > 2) bunny.scaleSpeed = -bunny.scaleSpeed;\n\t\t\t\telse if (bunny.scale.x < 0.01) bunny.scaleSpeed = -bunny.scaleSpeed;\n\t\t\t}\n\n\t\t\tif (_isRotation) bunny.rotation += bunny.rotationSpeed;\n\t\t}\n\t}\n\n\tpublic function hide() {\n\t\t_reset();\n\n\t\tfor (i in 0 ... _buttons.length) {\n\t\t\tvar button:Button = _buttons[i];\n\t\t\tbutton.disable();\n\t\t\t_uiContainer.removeChild(button);\n\t\t\t_buttons[i] = null;\n\t\t}\n\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_uiContainer.removeChild(_quantityLabel);\n\t\tgameContainer.removeChild(_spriteContainer);\n\t\tgameContainer.removeChild(_uiContainer);\n\t\t_spriteContainer = null;\n\t\t_uiContainer = null;\n\t\t_quantityLabel = null;\n\t\t_buttons = null;\n\t\t_sprites = null;\n\t\t_bunnyTexture = null;\n\t}\n\n\tpublic function resize() {\n\t\t_minX = _minY = 0;\n\t\t_maxX = StageProperties.screenWidth;\n\t\t_maxY = StageProperties.screenHeight;\n\t\t_uiContainer.x = (StageProperties.screenWidth - 300) / 2;\n\t\t_uiContainer.y = StageProperties.screenY + 20;\n\t\ttrace(_uiContainer.width);\n\t}\n}","package arm.pixidemo.components.coins;\n\nimport pixi.display.MovieClip;\nimport pixi.textures.Texture;\n\nclass Coin extends MovieClip {\n\n\tpublic var speedX(default, default):Float;\n\tpublic var speedY(default, default):Float;\n\tpublic var scaleMultiplier(default, default):Float;\n\tpublic var gravity(default, default):Float;\n\n\tpublic function new(textures:Array<Texture>) {\n\t\tsuper(textures);\n\t}\n}\n","package arm.pixidemo.components.coins;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass CoinsController extends GameComponentController {\n\n\tvar _id:Int = 7;\n\tvar _showing:Bool = false;\n\tvar _view:CoinsView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, CoinsView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n\n\toverride function _update(elapsedTime:Float) {\n\t\tif (_showing) _view.update(elapsedTime);\n\t}\n}","package arm.pixidemo.components.coins;\n\nimport pixi.resources.Loader;\nimport pixi.text.Text;\nimport pixi.widgets.Label;\nimport pixi.widgets.Button;\nimport pixi.textures.Texture;\nimport arm.pixidemo.view.StageProperties;\nimport pixi.display.Sprite;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass CoinsView extends GameComponentView {\n\n\tvar _coinsContainer:DisplayObjectContainer;\n\tvar _uiContainer:DisplayObjectContainer;\n\n\tvar _coins:Array<Coin>;\n\tvar _animations:Object<Dynamic>;\n\tvar _bigWin:Sprite;\n\tvar _tickerBackground:Sprite;\n\tvar _quantityLabel:Label;\n\tvar _tickerLabel:Text;\n\n\tvar _buttons:Array<Button>;\n\n\tvar _ySpeed:Float;\n\tvar _emitterWidth:Float;\n\tvar _xSpeedRange:Object<Float>;\n\tvar _scaleRange:Object<Float>;\n\tvar _gravityRange:Object<Float>;\n\n\tvar _started:Bool;\n\tvar _bigWinScaleIsGrow:Bool;\n\tvar _bigWinScale:Float;\n\tvar _numberOfCoins:Int;\n\tvar _countUpTarget:Int;\n\tvar _countUpValue:Float;\n\tvar _isCountingUp:Bool;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_coinsContainer = new DisplayObjectContainer();\n\t\t_uiContainer = new DisplayObjectContainer();\n\n\t\t_animations = new Object();\n\t\t_animations.set(\"name\", \"Coin\");\n\t\t_animations.set(\"frames\", 55);\n\n\t\t_started = false;\n\t\t_bigWinScaleIsGrow = true;\n\t\t_bigWinScale = 1 / StageProperties.pixelRatio;\n\t\t_countUpTarget = 10000;\n\t\t_countUpValue = 0;\n\t\t_isCountingUp = true;\n\t\t_numberOfCoins = 0;\n\t\t_coins = [];\n\t\t_buttons = [];\n\n\t\t_ySpeed = _settings.getSetting(\"COIN_SHOWER_Y_SPEED\");\n\t\t_emitterWidth = _settings.getSetting(\"COIN_SHOWER_EMIT_WIDTH\");\n\n\t\t_xSpeedRange = new Object();\n\t\t_xSpeedRange.set(\"min\", _settings.getSetting(\"COIN_SHOWER_MIN_SPEED\"));\n\t\t_xSpeedRange.set(\"max\", _settings.getSetting(\"COIN_SHOWER_MAX_SPEED\"));\n\n\t\t_scaleRange = new Object();\n\t\t_scaleRange.set(\"min\", _settings.getSetting(\"COIN_SHOWER_MIN_SCALE\"));\n\t\t_scaleRange.set(\"max\", _settings.getSetting(\"COIN_SHOWER_MAX_SCALE\"));\n\n\t\t_gravityRange = new Object();\n\t\t_gravityRange.set(\"min\", _settings.getSetting(\"COIN_SHOWER_MIN_GRAVITY\"));\n\t\t_gravityRange.set(\"max\", _settings.getSetting(\"COIN_SHOWER_MAX_GRAVITY\"));\n\n\t\t_addButton(\"Start\", 0, 0, 100, 30, _start);\n\t\t_addButton(\"Add 100\", 100, 0, 100, 30, _addCoins, 100);\n\t\t_addButton(\"Reset\", 200, 0, 100, 30, _reset);\n\n\t\t_quantityLabel = new Label(\"Quantity: 0\", 300, 30);\n\t\t_quantityLabel.y = 30;\n\n\t\t_bigWin = new Sprite(Texture.fromImage(Loader.SCALE_URL + \"bigwin/images/BigWin.png\"));\n\t\t_applyScale(_bigWin);\n\t\t_bigWin.anchor.set(0.5, 0.5);\n\t\t_tickerBackground = new Sprite(Texture.fromImage(Loader.SCALE_URL + \"tickerbackground/images/TickerBackground.png\"));\n\t\t_applyScale(_tickerBackground);\n\n\t\tvar style:TextStyle = {};\n\t\tstyle.font = \"50px Arial\";\n\t\tstyle.fill = \"#000000\";\n\n\t\t_tickerLabel = new Text(\"\", style);\n\t\t_tickerLabel.anchor.set(0.5, 0.5);\n\n\t\t_uiContainer.addChild(_quantityLabel);\n\t\tgameContainer.addChild(_uiContainer);\n\t\tgameContainer.addChild(_coinsContainer);\n\t\tgameContainer.addChild(_tickerBackground);\n\t\tgameContainer.addChild(_tickerLabel);\n\t\tgameContainer.addChild(_bigWin);\n\t\t_updateCountUp();\n\t\tresize();\n\t}\n\n\tfunction _addCoins(count:Int) {\n\t\tif (!_started) _start();\n\t\telse _numberOfCoins += count;\n\t}\n\n\tfunction _start() {\n\t\t_started = true;\n\t\t_addCoins(100);\n\t}\n\n\tfunction _addCoin() {\n\t\tvar textures:Array<Texture> = [];\n\n\t\tfor (i in 1 ... _animations.get(\"frames\")) {\n\t\t\tvar frame:String = \"\" + i;\n\t\t\twhile (frame.length < 4) frame = \"0\" + frame;\n\t\t\ttextures.push(Texture.fromFrame(_animations.get(\"name\") + \"_\" + frame + \".png\"));\n\t\t}\n\n\t\tvar coin:Coin = new Coin(textures);\n\t\tcoin.anchor.set(0.5, 0.5);\n\t\t_resetCoin(coin);\n\t\t_coins.push(coin);\n\t\t_coinsContainer.addChild(coin);\n\t\t_applyScale(coin);\n\t}\n\n\tfunction _resetCoin(coin:Coin) {\n\t\tvar xPos = (StageProperties.screenWidth - _emitterWidth) / 2;\n\t\txPos += Math.random() * _emitterWidth;\n\n\t\tcoin.speedY = _ySpeed;\n\t\tcoin.speedX = _getRandomRange(_xSpeedRange);\n\t\tcoin.scaleMultiplier = _getRandomRange(_scaleRange);\n\t\tcoin.gravity = _getRandomRange(_gravityRange);\n\t\tcoin.x = xPos;\n\t\tcoin.y = StageProperties.screenHeight;\n\t\tvar scale = Math.random() * 0.25 + 0.5;\n\t\tcoin.scale.set(scale, scale);\n\t\tcoin.gotoAndPlay(Math.ceil(Math.random() * _animations.get(\"frames\")));\n\t}\n\n\tfunction _updateCountUp() {\n\t\tvar format = {\n\t\t\taddTrailingZeros: true,\n\t\t\tsplitThousands: true\n\t\t};\n\n\t\t//var currencyID:Int = Core.sessionProperties.getCurrencyId();\n\t\t//var formattedValue = Core.currencyFormatter.formatValue(_countUpValue, currencyID, format);\n\t\t_tickerLabel.setText(\"\" + Math.round(_countUpValue));\n\n\t\tif (_isCountingUp) _countUpValue += 1.23;\n\t\telse _countUpValue -= 1.23;\n\n\t\tif (_countUpValue > _countUpTarget || _countUpValue <= 0) _isCountingUp = !_isCountingUp;\n\t}\n\n\tfunction _updateBigWin() {\n\t\t_bigWinScale += (_bigWinScaleIsGrow) ? 0.025 : -0.025;\n\t\t_bigWin.scale.set(_bigWinScale, _bigWinScale);\n\t\tif (_bigWinScale > 1 || _bigWinScale < 0.5) _bigWinScaleIsGrow = !_bigWinScaleIsGrow;\n\t}\n\n\tfunction _updateCoin() {\n\t\tvar i = _coins.length - 1;\n\t\twhile (i >= 0) {\n\t\t\tvar coin = _coins[i];\n\t\t\tcoin.scale.x += coin.scaleMultiplier;\n\t\t\tcoin.scale.y += coin.scaleMultiplier;\n\t\t\tcoin.x += coin.speedX;\n\t\t\tcoin.y += coin.speedY;\n\t\t\tcoin.speedY += coin.gravity;\n\n\t\t\tif (coin.y > StageProperties.screenHeight) {\n\t\t\t\t_resetCoin(coin);\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\tvar button = new Button(label, width, height, data);\n\t\tbutton.x = x;\n\t\tbutton.y = y;\n\t\tbutton.action.add(callback);\n\t\tbutton.enable();\n\n\t\t_buttons.push(button);\n\t\t_uiContainer.addChild(button);\n\t}\n\n\tfunction _getRandomRange(range:Object<Float>):Float {\n\t\treturn Math.random() * (range.get(\"max\") - range.get(\"min\")) + range.get(\"min\");\n\t}\n\n\tfunction _reset() {\n\t\tfor (i in 0 ... _coins.length) _coinsContainer.removeChild(_coins[i]);\n\n\t\t_started = false;\n\t\t_numberOfCoins = 0;\n\t\t_countUpValue = 0;\n\t\t_isCountingUp = true;\n\t\t_coins = [];\n\t\t_quantityLabel.setText(\"Coins: \" + _coins.length);\n\t\t_applyScale(_bigWin);\n\t\t_bigWinScale = 1 / StageProperties.pixelRatio;\n\t\t_updateCountUp();\n\t}\n\n\tpublic function hide() {\n\t\t_reset();\n\n\t\tfor (i in 0 ... _buttons.length) {\n\t\t\tvar button:Button = _buttons[i];\n\t\t\tbutton.disable();\n\t\t\t_uiContainer.removeChild(button);\n\t\t\t_buttons[i] = null;\n\t\t}\n\t\t_uiContainer.removeChild(_quantityLabel);\n\t\tgameContainer.removeChild(_coinsContainer);\n\t\tgameContainer.removeChild(_uiContainer);\n\t\tgameContainer.removeChild(_tickerBackground);\n\t\tgameContainer.removeChild(_tickerLabel);\n\t\tgameContainer.removeChild(_bigWin);\n\t\t_bigWin = null;\n\t\t_tickerBackground = null;\n\t\t_tickerLabel = null;\n\t\t_coinsContainer = null;\n\t\t_uiContainer = null;\n\t\t_quantityLabel = null;\n\t\t_buttons = null;\n\t\t_coins = null;\n\t}\n\n\tpublic function update(elapsedTime:Float) {\n\t\tif (_started) {\n\t\t\t_updateCountUp();\n\t\t\t_updateBigWin();\n\t\t\t_updateCoin();\n\n\t\t\tif (_coins.length < _numberOfCoins) _addCoin();\n\t\t\t_quantityLabel.setText(\"Coins: \" + _coins.length);\n\t\t}\n\t}\n\n\tpublic function resize() {\n\t\t_uiContainer.x = (StageProperties.screenWidth - 300) / 2;\n\t\t_uiContainer.y = 20;\n\n\t\t_bigWin.x = StageProperties.screenX + _layout.getLayout(\"BIG_WIN\").x;\n\t\t_bigWin.y = StageProperties.screenY + _layout.getLayout(\"BIG_WIN\").y;\n\n\t\t_tickerBackground.x = StageProperties.screenX + _layout.getLayout(\"TICKER_BACKGROUND\").x;\n\t\t_tickerBackground.y = StageProperties.screenY + _layout.getLayout(\"TICKER_BACKGROUND\").y;\n\n\t\t_tickerLabel.x = _tickerBackground.x + _tickerBackground.width / 2;\n\t\t_tickerLabel.y = _tickerBackground.y + _tickerBackground.height / 2;\n\t}\n}","package arm.pixidemo.components.livevideo;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass LiveVideoController extends GameComponentController {\n\n\tvar _id:Int = 16;\n\tvar _showing:Bool = false;\n\tvar _view:LiveVideoView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, LiveVideoView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse if (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n}","package arm.pixidemo.components.livevideo;\n\n//import js.Lib;\n//import kalturhaxe.KalturaHaxe;\nimport js.html.Element;\nimport js.html.VideoElement;\nimport js.Browser;\nimport arm.pixidemo.view.StageProperties;\n\nclass LiveVideoView extends GameComponentView {\n\n\tvar _videoContainer:Element;\n\tvar _videoElement:VideoElement;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_videoContainer = Browser.document.createElement(\"div\");\n\t\tBrowser.document.body.appendChild(_videoContainer);\n\t\t_videoElement = Browser.document.createVideoElement();\n\t\t_videoElement.src = \"http://10.194.193.247:1935/live/myStream/playlist.m3u8\";\n\t\t_videoElement.style.position = \"absolute\";\n\t\t_videoElement.style.top = \"100px\";\n\t\t_videoElement.style.right = \"220px\";\n\t\t_videoElement.width = 640;\n\t\t_videoElement.height = 480;\n\t\t_videoElement.autoplay = true;\n\n\t\t_videoContainer.appendChild(_videoElement);\n\n\t\t//var app = new KalturaHaxe(1839131, \"http://cdnapi.kaltura.com/p/1839131/sp/183913100/embedIframeJs/uiconf_id/26907121/partner_id/1839131\");\n\t\t//app.createConnection(\"3c428cc2e8b0c5c26f7ad435ec78e8b8\", test);\n\t}\n\n\t/*function test(succcess:Bool, response:String) {\n\t\ttrace(succcess, response);\n\t\tjs.Lib.eval(response);\n\t}*/\n\n\tpublic function hide() {\n\t\t_videoContainer.remove();\n\t}\n\n\tpublic function resize() {\n\n\t}\n}","package arm.pixidemo.components.localisation;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass LocalisationController extends GameComponentController {\n\n\tvar _id:Int = 3;\n\tvar _showing:Bool = false;\n\tvar _view:LocalisationView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, LocalisationView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse if (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n}","package arm.pixidemo.components.localisation;\n\nimport pixi.text.Text;\nimport pixi.display.Sprite;\nimport pixi.resources.Loader;\nimport pixi.textures.Texture;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass LocalisationView extends GameComponentView {\n\n\tvar _flag:Sprite;\n\tvar _sharedTextField:Text;\n\tvar _bucketTextField:Text;\n\tvar _dynamicTextField:Text;\n\tvar _container:DisplayObjectContainer;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_container = new DisplayObjectContainer();\n\n\t\tvar sharedMessage:String = _messages.getMessage(\"SHARED_MESSAGE\");\n\t\tvar bucketMessage:String = _messages.getMessage(\"BUCKET_MESSAGE\");\n\t\tvar dynamicMessage:String = _messages.getMessage(\"DYNAMIC_MESSAGE\", [\"SUBSTITUTION\"]);\n\n\t\tvar sharedTextLayout = _layout.getLayout(\"SHARED_MESSAGE_TEXT\");\n\t\tvar sharedTextStyle:TextStyle = {};\n\t\tsharedTextStyle.font = sharedTextLayout.size + \"px \" + sharedTextLayout.font;\n\t\tsharedTextStyle.fill = sharedTextLayout.color;\n\t\t_sharedTextField = new Text(sharedMessage, sharedTextStyle);\n\n\t\tvar bucketTextLayout = _layout.getLayout(\"BUCKET_MESSAGE_TEXT\");\n\t\tvar bucketTextStyle:TextStyle = {};\n\t\tbucketTextStyle.font = bucketTextLayout.size + \"px \" + bucketTextLayout.font;\n\t\tbucketTextStyle.fill = bucketTextLayout.color;\n\t\t_bucketTextField = new Text(bucketMessage, bucketTextStyle);\n\n\t\tvar dynamicTextLayout = _layout.getLayout(\"DYNAMIC_MESSAGE_TEXT\");\n\t\tvar dynamicTextStyle:TextStyle = {};\n\t\tdynamicTextStyle.font = dynamicTextLayout.size + \"px \" + dynamicTextLayout.font;\n\t\tdynamicTextStyle.fill = dynamicTextLayout.color;\n\t\t_dynamicTextField = new Text(dynamicMessage, dynamicTextStyle);\n\n\t\t_sharedTextField.anchor.set(0.5, 0.5);\n\t\t_bucketTextField.anchor.set(0.5, 0.5);\n\t\t_dynamicTextField.anchor.set(0.5, 0.5);\n\t\t_bucketTextField.y = 40;\n\t\t_dynamicTextField.y = 80;\n\n\t\tvar texture:Texture = Texture.fromImage(Loader.SCALE_URL + \"localisation/images/flag.png\");\n\t\t_flag = new Sprite(texture);\n\t\t_flag.anchor.x = 0.5;\n\t\t_flag.y = _dynamicTextField.y + 30;\n\t\t_applyScale(_flag);\n\n\t\t_container.addChild(_sharedTextField);\n\t\t_container.addChild(_bucketTextField);\n\t\t_container.addChild(_dynamicTextField);\n\t\t_container.addChild(_flag);\n\n\t\tgameContainer.addChild(_container);\n\t\tresize();\n\t}\n\n\tpublic function hide() {\n\t\tgameContainer.removeChild(_container);\n\t\t_container.removeChild(_flag);\n\t\t_container.removeChild(_sharedTextField);\n\t\t_container.removeChild(_bucketTextField);\n\t\t_container.removeChild(_dynamicTextField);\n\t\t_container = null;\n\t\t_flag = null;\n\t\t_sharedTextField = null;\n\t\t_bucketTextField = null;\n\t\t_dynamicTextField = null;\n\t}\n\n\tpublic function resize() {\n\t\t_container.x = StageProperties.screenWidth / 2;\n\t\t_container.y = (StageProperties.screenHeight - _container.height) / 2;\n\t}\n}","package arm.pixidemo.components.menu;\n\nclass MenuController extends GameComponentController {\n\n\tvar _view:MenuView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, MenuView);\n\t}\n\n\toverride function _create() {\n\t\t_view.create();\n\t}\n\n}","package arm.pixidemo.components.menu;\n\nimport js.Browser;\nimport arm.pixidemo.view.StageProperties;\nimport arm.pixidemo.notifications.internal.MenuNotification;\nimport pixi.widgets.menu.MenuItem;\nimport pixi.widgets.menu.PopoutMenu;\n\nclass MenuView extends GameComponentView {\n\n\tvar _menu:PopoutMenu;\n\tvar _menuItems:Array<String>;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t\t_menuItems = [\"Reset\", \"Screen Test\", \"Screen Guide\", \"Localisation\", \"Sprites\", \"Bunnys\", \"Sprite Sheets\",\n\t\t\"Coin Shower\", \"Typekit\", \"Audio\", \"Currency Format\", \"Server Request\", \"Console Bridge\", \"Reels\",\n\t\t\"Skeleton Animation\", \"Video\", \"Live Video\", \"Physics\"]; //\"Particles\"\n\t}\n\n\tpublic function create() {\n\t\t_menu = new PopoutMenu(180, 40);\n\t\tvar _menuItem:MenuItem;\n\t\tfor (i in 0 ... _menuItems.length) {\n\t\t\t_menuItem = _menu.addItem(_menuItems[i], i);\n\t\t\t_menuItem.action.add(_menuClick);\n\t\t}\n\t\tgameStage.addChild(_menu);\n\n\t\tvar menuID = Browser.getLocalStorage().getItem(\"menuID\");\n\t\tif (menuID != null) _menuClick(Std.parseInt(menuID));\n\t}\n\n\tpublic function hide() {\n\t\t_menu.hide();\n\t}\n\n\tfunction _menuClick(id:Int) {\n\t\tif (id > 0) {\n\t\t\tBrowser.getLocalStorage().setItem(\"menuID\", \"\" + id);\n\t\t\tMenuNotification.click.dispatch(id);\n\t\t}\n\t\telse {\n\t\t\tMenuNotification.reset.dispatch();\n\t\t}\n\t\tif (id > 0) hide();\n\t}\n}","package arm.pixidemo.components.physics;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass PhysicsController extends GameComponentController {\n\n\tvar _id:Int = 17;\n\tvar _showing:Bool = false;\n\tvar _view:PhysicsView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, PhysicsView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _update(elapsedTime:Float) {\n\t\tif (_showing) _view.update(elapsedTime);\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse if (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n}","package arm.pixidemo.components.physics;\n\nimport p2.shapes.Circle;\nimport pixi.primitives.Graphics;\nimport p2.shapes.Plane;\nimport p2.objects.Body;\nimport p2.shapes.Rectangle;\nimport p2.world.World;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass PhysicsView extends GameComponentView {\n\n\tvar _p2World:World;\n\tvar _p2container:DisplayObjectContainer;\n\tvar _p2graphics:Graphics;\n\tvar _boxBody:Body;\n\n\tvar _p2Circle:Graphics;\n\tvar _circleShape:Circle;\n\tvar _p2Sensor:Graphics;\n\tvar _sensorShape:Circle;\n\tvar _circleBody:Body;\n\tvar _sensorBody:Body;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_p2World = new World({ gravity:[0, 0] });\n\n\t\tvar boxShape:Rectangle = new Rectangle(2, 1);\n\t\t_boxBody = new Body({\n\t\t\tmass: 1,\n\t\t\tposition:[0, 2],\n\t\t\tangularVelocity: 1\n\t\t});\n\n\t\t_boxBody.addShape(boxShape);\n\t\t_p2World.addBody(_boxBody);\n\n\t\tvar planeShape:Plane = new Plane();\n\t\tvar planeBody:Body = new Body({ position:[0, -1] });\n\t\tplaneBody.addShape(planeShape);\n\t\t_p2World.addBody(planeBody);\n\n\t\tvar zoom:Int = 100;\n\n\t\t_p2container = new DisplayObjectContainer();\n\t\tgameStage.addChild(_p2container);\n\n\t\t_p2container.position.x = StageProperties.screenWidth / 2;\n\t\t_p2container.position.y = StageProperties.screenHeight / 2;\n\t\t_p2container.scale.x = zoom;\n\t\t_p2container.scale.y = -zoom;\n\n\t\t_p2graphics = new Graphics();\n\t\t_p2graphics.beginFill(0xFF0000);\n\t\t_p2graphics.drawRect(-boxShape.width / 2, -boxShape.height / 2, boxShape.width, boxShape.height);\n\t\t_p2container.addChild(_p2graphics);\n\n\t\t_circleShape = new Circle(1);\n\t\t_circleBody = new Body({ mass: 1 });\n\t\t_circleBody.damping = 0;\n\t\t_circleBody.addShape(_circleShape);\n\t\t_p2World.addBody(_circleBody);\n\n\t\t_p2Circle = new Graphics();\n\t\t_p2Circle.beginFill(0x003366);\n\t\t_p2Circle.drawCircle(0, 0, _circleShape.radius);\n\t\t_p2container.addChild(_p2Circle);\n\t}\n\n\tpublic function update(elapsedTime:Float) {\n\t\t_p2World.step(1 / 60);\n\n\t\t_p2graphics.position.x = _boxBody.position[0];\n\t\t_p2graphics.position.y = _boxBody.position[1];\n\t\t_p2graphics.rotation = _boxBody.angle;\n\t}\n\n\tpublic function hide() {\n\t\tgameStage.removeChild(_p2container);\n\t\t_p2container = null;\n\t}\n}","package arm.pixidemo.components.preloader;\n\nimport arm.mvc.notifications.ViewStateNotification;\n\nclass PreloaderController extends GameComponentController {\n\n\tvar _view:PreloaderView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, PreloaderView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tViewStateNotification.preloader.addOnce(_showPreloader);\n\t}\n\n\tfunction _showPreloader() {\n\t\t_view.showPreloader();\n\t}\n}","package arm.pixidemo.components.preloader;\n\nimport pixi.resources.Loader;\nimport pixi.text.Text;\nimport pixi.display.DisplayObjectContainer;\nimport pixi.primitives.Graphics;\nimport arm.pixidemo.view.StageProperties;\nimport arm.mvc.notifications.ViewStateNotification;\n\nclass PreloaderView extends GameComponentView {\n\n\tvar _assetsPack:Array<String>;\n\tvar _spriteSheetsPack:Array<String>;\n\tvar _soundsPack:Array<Object<String>>;\n\tvar _loadCount:Int;\n\tvar _totalAssetCount:Int;\n\n\tvar _container:DisplayObjectContainer;\n\tvar _background:Graphics;\n\tvar _loadingBar:Graphics;\n\tvar _loadingBarBG:Graphics;\n\tvar _loadingText:Text;\n\tvar _titleText:Text;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t\t_loadCount = 0;\n\t\t_assetsPack = [];\n\t\t_spriteSheetsPack = [];\n\t\t_soundsPack = [];\n\t}\n\n\tpublic function showPreloader() {\n\t\t_createBackground();\n\t\t_container = new DisplayObjectContainer();\n\t\tgameContainer.addChild(_container);\n\t\t_createLoadingBar();\n\t\t_prepareSoundAssets();\n\t\t_preloadAssets();\n\t}\n\n\tfunction _createBackground() {\n\t\t_background = new Graphics();\n\t\t_background.beginFill(0x21610B);\n\t\t_background.drawRect(0, 0, StageProperties.screenWidth, StageProperties.screenHeight);\n\t\t_background.endFill();\n\t\tgameContainer.addChild(_background);\n\t}\n\n\tfunction _createLoadingBar() {\n\t\t_loadingBarBG = new Graphics();\n\t\t_loadingBarBG.beginFill(0xFFFFFF);\n\t\t_loadingBarBG.drawRect(0, 0, 204, 34);\n\t\t_loadingBarBG.endFill();\n\n\t\t_loadingBar = new Graphics();\n\t\t_loadingBar.beginFill(0x088A29);\n\t\t_loadingBar.drawRect(0, 0, 200, 30);\n\t\t_loadingBar.endFill();\n\n\t\t_container.addChild(_loadingBarBG);\n\t\t_container.addChild(_loadingBar);\n\t\t_loadingBar.x = _loadingBar.y = 2;\n\t\t_container.x = (StageProperties.screenWidth - _loadingBar.width) / 2;\n\t\t_container.y = (StageProperties.screenHeight - _loadingBar.height) / 2;\n\n\t\t_loadingText = new Text(\"LOADING\", {font:\"24px futura-pt\", fill:\"#FFFFFF\"});\n\t\t_loadingText.anchor.set(0.5, 0.5);\n\t\tgameContainer.addChild(_loadingText);\n\t\t_loadingText.x = StageProperties.screenWidth / 2 + 2;\n\t\t_loadingText.y = StageProperties.screenHeight / 2 - 30;\n\t\t_loadingBar.scale.x = 0.02;\n\n\t\t_titleText = new Text(\"haxe pixi demo\", {font:\"60px grafolita-script\", fill:\"#FFFFFF\"});\n\t\t_titleText.anchor.set(0.5, 0.5);\n\t\tgameContainer.addChild(_titleText);\n\t\t_titleText.x = StageProperties.screenWidth / 2;\n\t\t_titleText.y = StageProperties.screenY + 50;\n\t}\n\n\tfunction _prepareSoundAssets() {\n\t\t_addSoundAsset(\"bg\", Loader.BASE_URL + \"sounds/loop.mp3\");\n\t\t_addSoundAsset(\"sound1\", Loader.BASE_URL + \"sounds/sound1.wav\");\n\t\t_addSoundAsset(\"sound2\", Loader.BASE_URL + \"sounds/sound2.wav\");\n\t\t_addSoundAsset(\"sound3\", Loader.BASE_URL + \"sounds/sound3.wav\");\n\t\t_addSoundAsset(\"sound4\", Loader.BASE_URL + \"sounds/sound4.wav\");\n\t\t_addSoundAsset(\"spin\", Loader.BASE_URL + \"sounds/spin.mp3\");\n\t}\n\n\tfunction _addSoundAsset(id:String, url:String) {\n\t\tvar snd:Object<String> = new Object();\n\t\tsnd.set(\"id\", id);\n\t\tsnd.set(\"url\", url);\n\t\t_soundsPack.push(snd);\n\t}\n\n\tfunction _preloadAssets() {\n\t\t_assetsPack = [\n\t\t\tLoader.SCALE_URL + \"spriteperformance/images/sprite1.png\",\n\t\t\tLoader.SCALE_URL + \"bunnys/images/bunny.png\",\n\t\t\tLoader.SCALE_URL + \"bigwin/images/BigWin.png\",\n\t\t\tLoader.SCALE_URL + \"screentest/images/ScreenTest.png\",\n\t\t\tLoader.SCALE_URL + \"particles/images/particle.png\",\n\t\t\tLoader.SCALE_URL + \"tickerbackground/images/TickerBackground.png\",\n\t\t\tLoader.SCALE_URL + \"localisation/images/flag.png\",\n\t\t\t\"assets/fonts/desyrel.xml\"\n\t\t];\n\n\t\t_spriteSheetsPack = [\n\t\t\tLoader.SCALE_URL + \"spritesheets/images/Phoenix1.json\",\n\t\t\tLoader.SCALE_URL + \"reels/images/icons.json\",\n\t\t\tLoader.SCALE_URL + \"reels/images/icons-blur.json\",\n\t\t\tLoader.SCALE_URL + \"coin/images/Coin.json\",\n\t\t\tLoader.SCALE_URL + \"spine/images/dragonBones.json\",\n\t\t\tLoader.SCALE_URL + \"spine/images/dragonBonesData.json\"\n\t\t];\n\n\t\t_totalAssetCount = _assetsPack.length + _soundsPack.length + _spriteSheetsPack.length;\n\n\t\tLoader.loadSoundsPack(_soundsPack);\n\t\tLoader.soundLoadComplete.add(_onAssetsProgress);\n\n\t\tLoader.loadAssetsPack(_assetsPack);\n\t\tLoader.assetsProgress.add(_onAssetsProgress);\n\n\t\tLoader.loadSpriteSheetsPack(_spriteSheetsPack);\n\t\tLoader.spriteSheetLoadComplete.add(_onAssetsProgress);\n\t}\n\n\tfunction _onAssetsProgress() {\n\t\t_loadCount++;\n\t\t_loadingBar.scale.x = _loadCount / _totalAssetCount;\n\t\tif (_loadCount == _totalAssetCount) _destroy();\n\t}\n\n\tfunction _destroy() {\n\t\tViewStateNotification.create.dispatch();\n\t\t_container.removeChild(_loadingBarBG);\n\t\t_container.removeChild(_loadingBar);\n\t\tgameContainer.removeChild(_background);\n\t\tgameContainer.removeChild(_container);\n\t\tgameContainer.removeChild(_loadingText);\n\t\tgameContainer.removeChild(_titleText);\n\t\t_background = null;\n\t\t_container = null;\n\t\t_assetsPack = null;\n\t\t_soundsPack = null;\n\t\t_loadingText = null;\n\t\t_titleText = null;\n\t\t_loadingBarBG = null;\n\t\t_loadingBar = null;\n\t}\n}","package arm.pixidemo.components.reels;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass ReelsController extends GameComponentController {\n\n\tvar _id:Int = 13;\n\tvar _showing:Bool = false;\n\tvar _view:ReelsView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, ReelsView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.reels;\n\nimport howler.Howl;\nimport motion.easing.Linear;\nimport pixi.primitives.Graphics;\nimport pixi.widgets.Button;\nimport motion.Actuate;\nimport pixi.display.SpriteBatch;\nimport pixi.display.Sprite;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass ReelsView extends GameComponentView {\n\n\tvar _reelsContainer:DisplayObjectContainer;\n\n\tvar _mask:Graphics;\n\tvar _reels:Array<SpriteBatch>;\n\tvar _icons:Array<Array<Sprite>>;\n\tvar _blurIcons:Array<Array<Sprite>>;\n\n\tvar _reelCount:Int = 5;\n\tvar _reelIconCount:Int = 20;\n\tvar _reelHeight:Float;\n\n\tvar _iconLayout:Dynamic;\n\tvar _reelsLayout:Dynamic;\n\n\tvar _spinBtn:Button;\n\tvar _spinSound:Howl;\n\n\tvar _reelMaps:Array<Array<Int>> = [\n\t[6, 1, 8, 10, 6, 4, 9, 0, 7, 3, 2, 8, 5, 6, 7, 0, 9, 4, 8, 3, 6, 5, 8, 2, 7, 11, 9, 3, 7, 4, 9, 5, 6, 1, 9, 8, 6, 2, 9, 11],\n\t[8, 4, 7, 1, 5, 11, 6, 1, 8, 2, 7, 11, 6, 5, 8, 3, 9, 0, 6, 5, 8, 11, 6, 4, 7, 5, 4, 9, 3, 11, 6, 2, 3, 7, 4, 5, 8, 4, 9, 10],\n\t[9, 1, 11, 2, 9, 11, 5, 2, 8, 10, 4, 7, 3, 9, 11, 4, 3, 6, 12, 7, 9, 2, 6, 0, 7, 1, 8, 3, 5, 6, 12, 2, 7, 0, 8, 1, 10, 3, 11, 5],\n\t[7, 4, 8, 10, 7, 1, 8, 0, 7, 4, 1, 9, 12, 2, 9, 12, 7, 1, 6, 0, 8, 3, 12, 5, 6, 0, 9, 3, 6, 12, 8, 2, 6, 5, 9, 6, 10, 9, 4, 2],\n\t[6, 12, 5, 1, 7, 0, 9, 5, 8, 10, 9, 3, 5, 6, 0, 8, 2, 5, 8, 3, 6, 5, 8, 1, 6, 10, 7, 3, 8, 4, 12, 2, 8, 4, 9, 1, 8, 12, 9, 4]\n\t];\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_reelsContainer = new DisplayObjectContainer();\n\t\tgameContainer.addChild(_reelsContainer);\n\n\t\t_iconLayout = _layout.getLayout(\"ICON\");\n\t\t_reelsLayout = _layout.getLayout(\"REELS\");\n\n\t\t_reelHeight = _reelIconCount * _iconLayout.height;\n\n\t\t_reels = [];\n\t\t_icons = [];\n\t\t_blurIcons = [];\n\n\t\t_createMask();\n\t\t_createReels();\n\n\t\t_addButton(\"SPIN \", 0, 0, 100, 30, spinReels);\n\n\t\t_reelsContainer.x = _mask.x = (StageProperties.screenWidth - (_iconLayout.width + _reelsLayout.spacing) * _reelCount) / 2;\n\t\t_reelsContainer.y = _mask.y = (StageProperties.screenHeight - _iconLayout.height * 3) / 2;\n\n\t\t_spinSound = _sounds.getSound(\"spin\");\n\t}\n\n\tfunction _createMask() {\n\t\t_mask = new Graphics();\n\t\tgameContainer.addChild(_mask);\n\t\t_mask.lineStyle(0);\n\t\t_mask.beginFill(0x000000);\n\t\t_mask.drawRect(0, 0, (_iconLayout.width + _reelsLayout.spacing) * _reelCount, _iconLayout.height * 3);\n\t\t_mask.endFill();\n\t\t_reelsContainer.mask = _mask;\n\t}\n\n\tfunction _createReels() {\n\t\tvar reel:SpriteBatch;\n\t\tfor (i in 0 ... _reelCount) {\n\t\t\treel = new SpriteBatch();\n\t\t\t_reels.push(reel);\n\t\t\t_reelsContainer.addChild(reel);\n\t\t\treel.x = i * (_iconLayout.width + _reelsLayout.spacing);\n\t\t\treel.y = -_reelHeight + _iconLayout.height * 3;\n\t\t\t_createIcons(reel, i);\n\t\t}\n\t}\n\n\tfunction _createIcons(reel:SpriteBatch, reelNo:Int) {\n\t\tvar icon:Sprite;\n\t\tvar blurIcon:Sprite;\n\t\t_icons[reelNo] = [];\n\t\t_blurIcons[reelNo] = [];\n\t\tfor (i in 0 ... _reelIconCount) {\n\t\t\ticon = Sprite.fromFrame(\"icon\" + (_reelMaps[reelNo][i] + 1));\n\t\t\ticon.y = i * _iconLayout.height;\n\t\t\t_icons[reelNo][i] = icon;\n\n\t\t\tblurIcon = Sprite.fromFrame(\"icon-blur\" + (_reelMaps[reelNo][i] + 1));\n\t\t\tblurIcon.y = i * _iconLayout.height;\n\t\t\tblurIcon.visible = false;\n\t\t\t_blurIcons[reelNo][i] = blurIcon;\n\n\t\t\treel.addChild(blurIcon);\n\t\t\treel.addChild(icon);\n\t\t\t_applyScale(icon);\n\t\t\t_applyScale(blurIcon);\n\t\t}\n\t}\n\n\tpublic function spinReels() {\n\t\tvar reel:SpriteBatch;\n\t\tvar tdelay:Float = 0;\n\t\tfor (i in 0 ... _reelCount) {\n\t\t\treel = cast(_reels[i], SpriteBatch);\n\t\t\treel.y = -_reelHeight + _iconLayout.height * 3;\n\n\t\t\tActuate.tween(reel, 0.3, { y: reel.y - 40 }).onComplete(_startSpinning, [reel, i]).delay(tdelay).ease(Linear.easeNone);\n\t\t\ttdelay += 0.07;\n\t\t}\n\t\t_spinSound.play();\n\t}\n\n\tfunction _startSpinning(reel:SpriteBatch, reelNo:Int) {\n\t\tActuate.tween(reel, 2, { y: 0 }).onComplete(_reelSpinComplete, [reel, reelNo]).ease(Linear.easeNone);\n\t\t//_showBlur(reelNo);\n\t}\n\n\tfunction _reelSpinComplete(reel:SpriteBatch, reelNo:Int) {\n\t\tActuate.tween(reel, 0.5, { y: -_iconLayout.height }).onComplete(_resetReels, [reelNo]);\n\t\t//_removeBlur(reelNo);\n\t}\n\n\tfunction _resetReels(reelNo:Int) {\n\t\t_reelMaps[reelNo][_reelIconCount - 1] = _reelMaps[reelNo][3];\n\t\t_reelMaps[reelNo][_reelIconCount - 2] = _reelMaps[reelNo][2];\n\t\t_reelMaps[reelNo][_reelIconCount - 3] = _reelMaps[reelNo][1];\n\n\t\tif (reelNo == _reelCount - 1) {\n\t\t\tfor (reel in _reels) {\n\t\t\t\t_reelsContainer.removeChild(reel);\n\t\t\t}\n\t\t\t_reels = [];\n\t\t\t_icons = [];\n\t\t\t_blurIcons = [];\n\t\t\t_createReels();\n\t\t}\n\t}\n\n\tfunction _showBlur(reelNo:Int) {\n\t\tfor (i in 0 ... _reelIconCount) {\n\t\t\t_icons[reelNo][i].visible = false;\n\t\t\t_blurIcons[reelNo][i].visible = true;\n\t\t}\n\t}\n\n\tfunction _removeBlur(reelNo:Int) {\n\t\tfor (i in 0 ... _reelIconCount) {\n\t\t\t_icons[reelNo][i].visible = true;\n\t\t\t_blurIcons[reelNo][i].visible = false;\n\t\t}\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\t_spinBtn = new Button(label, width, height, data);\n\t\t_spinBtn.action.add(callback);\n\t\t_spinBtn.enable();\n\t\t_spinBtn.x = (StageProperties.screenWidth - 100) / 2;\n\t\t_spinBtn.y = StageProperties.screenY + 60;\n\t\tgameContainer.addChild(_spinBtn);\n\t}\n\n\tpublic function hide() {\n\t\tgameContainer.removeChild(_spinBtn);\n\t\tgameContainer.removeChild(_reelsContainer);\n\t\t_reelsContainer = null;\n\t\t_spinBtn = null;\n\t\t_mask = null;\n\t\t_reels = null;\n\t}\n\n\tpublic function resize() {\n\t\t_reelsContainer.x = _mask.x = (StageProperties.screenWidth - (_iconLayout.width + _reelsLayout.spacing) * _reelCount) / 2;\n\t\t_reelsContainer.y = _mask.y = (StageProperties.screenHeight - _iconLayout.height * 3) / 2;\n\n\t\t_spinBtn.x = (StageProperties.screenWidth - 100) / 2;\n\t\t_spinBtn.y = StageProperties.screenY + 60;\n\t}\n}","package arm.pixidemo.components.screenguide;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass ScreenGuideController extends GameComponentController {\n\n\tvar _id:Int = 2;\n\tvar _showing:Bool = false;\n\tvar _view:ScreenGuideView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, ScreenGuideView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse _reset();\n\t}\n\n\toverride function _create() {\n\t\t_view.show();\n\t\t_showing = true;\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n}","package arm.pixidemo.components.screenguide;\n\nimport pixi.widgets.Label;\nimport pixi.display.DisplayObjectContainer;\nimport pixi.primitives.Graphics;\nimport arm.pixidemo.view.StageProperties;\n\nclass ScreenGuideView extends GameComponentView {\n\n\tvar _labels:Array<Label>;\n\tvar _crosses:Array<DisplayObjectContainer>;\n\tvar _labelContainer:DisplayObjectContainer;\n\tvar _screenSizeLabel:Label;\n\n\tvar _screenCrossTopLeft:DisplayObjectContainer;\n\tvar _screenCrossTopRight:DisplayObjectContainer;\n\tvar _screenCrossBottomRight:DisplayObjectContainer;\n\tvar _screenCrossBottomLeft:DisplayObjectContainer;\n\n\tvar _bucketCrossTopLeft:DisplayObjectContainer;\n\tvar _bucketCrossTopRight:DisplayObjectContainer;\n\tvar _bucketCrossBottomRight:DisplayObjectContainer;\n\tvar _bucketCrossBottomLeft:DisplayObjectContainer;\n\n\tvar PADDING(default, never):Int = 2;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_labels = [];\n\t\t_crosses = [];\n\n\t\tvar screenSizeMessage:String = \"Screen size - width:\" + StageProperties.screenWidth + \" height:\" + StageProperties.screenHeight;\n\t\tvar bucketSizeMessage:String = \"Bucket size - width:\" + StageProperties.bucketWidth + \" height:\" + StageProperties.bucketHeight;\n\t\tvar pixelRatioMessage:String = \"Pixel Ratio - used:\" + StageProperties.pixelRatio + \" actual:\" + StageProperties.actualPixelRatio;\n\n\t\t_labelContainer = new DisplayObjectContainer();\n\t\t_screenSizeLabel = _addLabel(screenSizeMessage, 0, 0, 300, 30);\n\t\t_addLabel(bucketSizeMessage, 0, 30, 300, 30);\n\t\t_addLabel(pixelRatioMessage, 0, 60, 300, 30);\n\t\tgameContainer.addChild(_labelContainer);\n\n\t\t_labelContainer.x = (StageProperties.screenWidth - 300) / 2;\n\t\t_labelContainer.y = (StageProperties.screenHeight - 300) / 2;\n\n\t\t_screenCrossTopLeft = _addCross(0xFF00FF, PADDING, PADDING);\n\t\t_screenCrossTopRight = _addCross(0xFF00FF, StageProperties.screenWidth - PADDING, PADDING);\n\t\t_screenCrossBottomLeft = _addCross(0xFF00FF, 2, StageProperties.screenHeight - PADDING);\n\t\t_screenCrossBottomRight = _addCross(0xFF00FF, StageProperties.screenWidth - PADDING, StageProperties.screenHeight - PADDING);\n\n\t\t_bucketCrossTopLeft = _addCross(0x2E64FE, StageProperties.screenX, StageProperties.screenY);\n\t\t_bucketCrossTopRight = _addCross(0x2E64FE, StageProperties.screenX + StageProperties.bucketWidth, StageProperties.screenY);\n\t\t_bucketCrossBottomRight = _addCross(0x2E64FE, StageProperties.screenX + StageProperties.bucketWidth, StageProperties.screenY + StageProperties.bucketHeight);\n\t\t_bucketCrossBottomLeft = _addCross(0x2E64FE, StageProperties.screenX, StageProperties.screenY + StageProperties.bucketHeight);\n\t}\n\n\tfunction _addCross(colour:Int, x:Float, y:Float):DisplayObjectContainer {\n\t\tvar thickness = 6;\n\t\tvar size = 50;\n\t\tvar graphics = new Graphics();\n\t\tgraphics.beginFill(colour);\n\t\tgraphics.drawRect(-(thickness / 2), -(size / 2), thickness, size);\n\t\tgraphics.drawRect(-(size / 2), -(thickness / 2), size, thickness);\n\t\tgraphics.endFill();\n\n\t\tvar container:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tcontainer.addChild(graphics);\n\t\tcontainer.x = x;\n\t\tcontainer.y = y;\n\n\t\t_crosses.push(container);\n\t\tgameContainer.addChild(container);\n\t\treturn container;\n\t}\n\n\tfunction _addLabel(message:String, x:Float, y:Float, width:Float, height:Float):Label {\n\t\tvar label = new Label(message, width, height);\n\t\tlabel.x = x;\n\t\tlabel.y = y;\n\n\t\t_labels.push(label);\n\t\t_labelContainer.addChild(label);\n\n\t\treturn label;\n\t}\n\n\tpublic function resize() {\n\t\tvar screenX:Float = StageProperties.screenX;\n\t\tvar screenY:Float = StageProperties.screenY;\n\t\tvar screenWidth:Float = StageProperties.screenWidth;\n\t\tvar screenHeight:Float = StageProperties.screenHeight;\n\n\t\t_bucketCrossTopLeft.x = screenX;\n\t\t_bucketCrossTopLeft.y = screenY;\n\t\t_bucketCrossTopRight.x = StageProperties.screenX + StageProperties.bucketWidth;\n\t\t_bucketCrossTopRight.y = screenY;\n\t\t_bucketCrossBottomRight.x = StageProperties.screenX + StageProperties.bucketWidth;\n\t\t_bucketCrossBottomRight.y = StageProperties.screenY + StageProperties.bucketHeight;\n\t\t_bucketCrossBottomLeft.x = screenX;\n\t\t_bucketCrossBottomLeft.y = StageProperties.screenY + StageProperties.bucketHeight;\n\n\t\t_screenCrossTopRight.x = screenWidth;\n\t\t_screenCrossBottomLeft.y = screenHeight;\n\t\t_screenCrossBottomRight.x = screenWidth;\n\t\t_screenCrossBottomRight.y = screenHeight;\n\n\t\t_labelContainer.x = (StageProperties.screenWidth - 300) / 2;\n\t\t_labelContainer.y = (StageProperties.screenHeight - 300) / 2;\n\n\t\tvar screenSizeMessage:String = \"Screen size - width:\" + StageProperties.screenWidth + \" height:\" + StageProperties.screenHeight;\n\t\t_screenSizeLabel.setText(screenSizeMessage);\n\t}\n\n\tpublic function hide() {\n\t\tfor (i in 0 ... _labels.length) {\n\t\t\tvar label = _labels[i];\n\t\t\t_labelContainer.removeChild(label);\n\t\t\tlabel = null;\n\t\t}\n\n\t\tfor (i in 0 ... _crosses.length) {\n\t\t\tvar cross = _crosses[i];\n\t\t\tgameContainer.removeChild(cross);\n\t\t\tcross = null;\n\t\t}\n\n\t\t_screenSizeLabel = null;\n\t\t_crosses = null;\n\t\t_labels = null;\n\t}\n}","package arm.pixidemo.components.screentest;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass ScreenTestController extends GameComponentController {\n\n\tvar _id:Int = 1;\n\tvar _showing:Bool = false;\n\tvar _view:ScreenTestView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, ScreenTestView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.screentest;\n\nimport pixi.display.Sprite;\nimport pixi.resources.Loader;\nimport pixi.textures.Texture;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass ScreenTestView extends GameComponentView {\n\n\tvar _screenTest:Sprite;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\tvar texture:Texture = Texture.fromImage(Loader.SCALE_URL + \"screentest/images/ScreenTest.png\");\n\t\t_screenTest = new Sprite(texture);\n\t\tgameContainer.addChild(_screenTest);\n\t\tresize();\n\t\t_applyScale(_screenTest);\n\t}\n\n\tpublic function hide() {\n\t\tgameContainer.removeChild(_screenTest);\n\t\t_screenTest = null;\n\t}\n\n\tpublic function resize() {\n\t\t_screenTest.x = StageProperties.screenX;\n\t\t_screenTest.y = StageProperties.screenY;\n\t}\n}","package arm.pixidemo.components.skeleton;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass SkeletonController extends GameComponentController {\n\n\tvar _id:Int = 14;\n\tvar _showing:Bool = false;\n\tvar _view:SkeletonView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, SkeletonView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.skeleton;\n\nimport pixi.spine.Spine;\nimport pixi.resources.Loader;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass SkeletonView extends GameComponentView {\n\n\tvar _spine:Spine;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_spine = new Spine(Loader.SCALE_URL + \"spine/images/dragonBonesData.json\");\n\t\t_spine.state.setAnimationByName(0, \"flying\", true);\n\n\t\tgameContainer.addChild(_spine);\n\t\t_spine.x = 500 + StageProperties.screenX;\n\t\t_spine.y = 700 + StageProperties.screenY;\n\t}\n\n\tpublic function hide() {\n\t\tgameContainer.removeChild(_spine);\n\t\t_spine = null;\n\t}\n}","package arm.pixidemo.components.sprites;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\nimport arm.mvc.components.ComponentController;\n\nclass SpritesController extends ComponentController {\n\n\tvar _id:Int = 4;\n\tvar _view:SpritesView;\n\tvar _showing:Bool = false;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, SpritesView);\n\t}\n\n\toverride function _update(elapsedTime:Float) {\n\t\tif (_showing) _view.update(elapsedTime);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.sprites;\n\nimport pixi.Pixi;\nimport pixi.display.Sprite;\nimport pixi.resources.Loader;\nimport pixi.textures.Texture;\nimport pixi.widgets.Button;\nimport pixi.widgets.Label;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass SpritesView extends GameComponentView {\n\n\tvar _sprites:Array<Sprite>;\n\tvar _buttons:Array<Button>;\n\tvar _uniqueSprites:Int;\n\tvar _cachedSprites:Int;\n\tvar _uniqueSpriteResources:Array<String>;\n\tvar _cachedTexture:Texture;\n\n\tvar _spriteContainer:DisplayObjectContainer;\n\tvar _uiContainer:DisplayObjectContainer;\n\tvar _quantityLabel:Label;\n\n\tvar _isScale:Bool;\n\tvar _isRotation:Bool;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_cachedTexture = Texture.fromImage(Loader.SCALE_URL + \"spriteperformance/images/sprite1.png\");\n\t\t_sprites = [];\n\t\t_buttons = [];\n\t\t_uniqueSprites = 0;\n\t\t_cachedSprites = 0;\n\n\t\t_spriteContainer = new DisplayObjectContainer();\n\t\t_uiContainer = new DisplayObjectContainer();\n\n\t\t_addButton(\"Reset\", 0, 0, 100, 30, _reset);\n\t\t_addButton(\"Scale\", 100, 0, 100, 30, _scale);\n\t\t_addButton(\"Rotation\", 200, 0, 100, 30, _rotation);\n\t\t_addButton(\"1 unique\", 0, 30, 100, 30, _addUniqueSprites, 1);\n\t\t_addButton(\"10 unique\", 100, 30, 100, 30, _addUniqueSprites, 10);\n\t\t_addButton(\"100 unique\", 200, 30, 100, 30, _addUniqueSprites, 100);\n\t\t_addButton(\"100 cached\", 0, 60, 100, 30, _addCachedSprites, 100);\n\t\t_addButton(\"500 cached\", 100, 60, 100, 30, _addCachedSprites, 500);\n\t\t_addButton(\"1000 cached\", 200, 60, 100, 30, _addCachedSprites, 1000);\n\n\t\t_quantityLabel = new Label(\"\", 300, 44);\n\t\t_quantityLabel.y = 90;\n\t\t_uiContainer.addChild(_quantityLabel);\n\t\tresize();\n\n\t\t_updateQuanityLabel();\n\t\tgameContainer.addChild(_spriteContainer);\n\t\tgameContainer.addChild(_uiContainer);\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\tvar button = new Button(label, width, height, data);\n\t\tbutton.x = x;\n\t\tbutton.y = y;\n\t\tbutton.action.add(callback);\n\t\tbutton.enable();\n\n\t\t_buttons.push(button);\n\t\t_uiContainer.addChild(button);\n\t}\n\n\tfunction _updateQuanityLabel() {\n\t\tif (_uniqueSpriteResources == null) {\n\t\t\t_quantityLabel.setText(_uniqueSprites + \" unique\" + \"\\n\" + _cachedSprites + \" cached\");\n\t\t}\n\t\telse {\n\t\t\t_quantityLabel.setText(\"Loading... unique\" + \"\\n\" + _cachedSprites + \" cached\");\n\t\t}\n\t}\n\n\tfunction _reset() {\n\t\tfor (i in 0 ... _sprites.length) {\n\t\t\t_spriteContainer.removeChild(_sprites[i]);\n\t\t}\n\n\t\t_sprites = [];\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_uniqueSprites = 0;\n\t\t_cachedSprites = 0;\n\t\t_updateQuanityLabel();\n\t}\n\n\tfunction _scale() {\n\t\t_isScale = !_isScale;\n\t}\n\n\tfunction _rotation() {\n\t\t_isRotation = !_isRotation;\n\t}\n\n\tfunction _addUniqueSprites(count:Int) {\n\t\tif (_uniqueSpriteResources == null) {\n\t\t\t_uniqueSpriteResources = [];\n\n\t\t\tfor (i in 0 ... count) {\n\t\t\t\t_uniqueSpriteResources.push(Loader.SCALE_URL + \"spriteperformance/images/sprite1.png?r=\" + Math.random());\n\t\t\t}\n\t\t\tLoader.loadAssetsPack(_uniqueSpriteResources);\n\t\t\tLoader.assetsPackLoadComplete.add(_onUniqueSpritesLoaded);\n\t\t\t_updateQuanityLabel();\n\t\t}\n\t}\n\n\tfunction _onUniqueSpritesLoaded() {\n\t\tfor (i in 0 ... _uniqueSpriteResources.length) {\n\t\t\tvar texture:Texture = Texture.fromImage(_uniqueSpriteResources[i], false, Pixi.scaleModes.DEFAULT);\n\t\t\tvar sprite:Sprite = new Sprite(texture);\n\t\t\t_spriteContainer.addChild(sprite);\n\t\t\tsprite.x = Std.random(Std.int(StageProperties.screenWidth));\n\t\t\tsprite.y = Std.random(Std.int(StageProperties.screenHeight));\n\t\t\tsprite.anchor.set(0.5, 0.5);\n\t\t\t_sprites.push(sprite);\n\t\t\t_applyScale(sprite);\n\t\t}\n\n\t\t_uniqueSprites += _uniqueSpriteResources.length;\n\t\t_uniqueSpriteResources = null;\n\t\t_updateQuanityLabel();\n\t}\n\n\tfunction _addCachedSprites(count:Int) {\n\t\tfor (i in 0 ... count) {\n\t\t\tvar sprite:Sprite = new Sprite(_cachedTexture);\n\t\t\t_spriteContainer.addChild(sprite);\n\t\t\tsprite.x = Std.random(Std.int(StageProperties.screenWidth));\n\t\t\tsprite.y = Std.random(Std.int(StageProperties.screenHeight));\n\t\t\tsprite.anchor.set(0.5, 0.5);\n\t\t\t_sprites.push(sprite);\n\t\t\t_applyScale(sprite);\n\t\t}\n\n\t\t_cachedSprites += count;\n\t\t_updateQuanityLabel();\n\t}\n\n\tpublic function update(elapsedTime:Float) {\n\t\tif (_isScale || _isRotation) {\n\t\t\tfor (i in 0 ... _sprites.length) {\n\t\t\t\tvar sprite:DisplayObjectContainer = _sprites[i];\n\n\t\t\t\tif (_isScale) {\n\t\t\t\t\tif (sprite.scale.x < 2) {\n\t\t\t\t\t\tsprite.scale.x += Math.random() / 50 + 0.01;\n\t\t\t\t\t\tsprite.scale.y += Math.random() / 50 + 0.01;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (_isRotation) {\n\t\t\t\t\tsprite.rotation += Math.random() / 50 + 0.01;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function hide() {\n\t\t_reset();\n\n\t\tfor (i in 0 ... _buttons.length) {\n\t\t\tvar button:Button = _buttons[i];\n\t\t\tbutton.disable();\n\t\t\t_uiContainer.removeChild(button);\n\t\t\t_buttons[i] = null;\n\t\t}\n\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_uiContainer.removeChild(_quantityLabel);\n\t\tgameContainer.removeChild(_spriteContainer);\n\t\tgameContainer.removeChild(_uiContainer);\n\t\t_spriteContainer = null;\n\t\t_uiContainer = null;\n\t\t_quantityLabel = null;\n\t\t_buttons = null;\n\t\t_sprites = null;\n\t\t_uniqueSpriteResources = null;\n\t\t_uniqueSprites = null;\n\t\t_cachedSprites = null;\n\t\t_cachedTexture = null;\n\t}\n\n\tpublic function resize() {\n\t\t_uiContainer.x = (StageProperties.screenWidth - 300) / 2;\n\t\t_uiContainer.y = 20;\n\t}\n}","package arm.pixidemo.components.spritesheets;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\nimport arm.mvc.components.ComponentController;\n\nclass SpritessheetsController extends ComponentController {\n\n\tvar _id:Int = 6;\n\tvar _view:SpritessheetsView;\n\tvar _showing:Bool = false;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, SpritessheetsView);\n\t}\n\n\toverride function _update(elapsedTime:Float) {\n\t\tif (_showing) _view.update(elapsedTime);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t}\n}","package arm.pixidemo.components.spritesheets;\n\nimport pixi.display.MovieClip;\nimport pixi.display.Sprite;\nimport pixi.textures.Texture;\nimport pixi.widgets.Button;\nimport pixi.widgets.Label;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass SpritessheetsView extends GameComponentView {\n\n\tvar _movieclips:Array<MovieClip>;\n\tvar _buttons:Array<Button>;\n\n\tvar _mcContainer:DisplayObjectContainer;\n\tvar _uiContainer:DisplayObjectContainer;\n\tvar _quantityLabel:Label;\n\n\tvar _isScale:Bool;\n\tvar _isRotation:Bool;\n\n\tvar _animations:Object<Dynamic>;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_movieclips = [];\n\t\t_buttons = [];\n\n\t\t_animations = new Object();\n\t\t_animations.set(\"name\", \"Phoenix1\");\n\t\t_animations.set(\"frames\", 77);\n\n\t\t_mcContainer = new DisplayObjectContainer();\n\t\t_uiContainer = new DisplayObjectContainer();\n\n\t\t_addButton(\"Reset\", 0, 30, 80, 30, _reset);\n\t\t//_addButton(\"Scale\", 100, 30, 100, 30, _scale);\n\t\t//_addButton(\"Rotation\", 200, 30, 100, 30, _rotation);\n\t\t_addButton(\"Add 1\", 80, 30, 80, 30, _addSprites, 1);\n\t\t_addButton(\"Add 5\", 160, 30, 80, 30, _addSprites, 5);\n\t\t_addButton(\"Add 10\", 240, 30, 80, 30, _addSprites, 10);\n\n\t\t_quantityLabel = new Label(\"\", 320, 24);\n\t\t_quantityLabel.y = 60;\n\t\t_uiContainer.addChild(_quantityLabel);\n\t\tresize();\n\n\t\t_updateQuanityLabel();\n\t\tgameContainer.addChild(_mcContainer);\n\t\tgameContainer.addChild(_uiContainer);\n\t}\n\n\tfunction _addButton(label:String, x:Float, y:Float, width:Float, height:Float, callback:Dynamic, ?data:Dynamic) {\n\t\tvar button = new Button(label, width, height, data);\n\t\tbutton.x = x;\n\t\tbutton.y = y;\n\t\tbutton.action.add(callback);\n\t\tbutton.enable();\n\n\t\t_buttons.push(button);\n\t\t_uiContainer.addChild(button);\n\t}\n\n\tfunction _updateQuanityLabel() {\n\t\t_quantityLabel.setText(\"Count \" + _movieclips.length);\n\t}\n\n\tfunction _reset() {\n\t\tfor (i in 0 ... _movieclips.length) {\n\t\t\t_mcContainer.removeChild(_movieclips[i]);\n\t\t}\n\n\t\t_movieclips = [];\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_updateQuanityLabel();\n\t}\n\n\tfunction _scale() {\n\t\t_isScale = !_isScale;\n\t}\n\n\tfunction _rotation() {\n\t\t_isRotation = !_isRotation;\n\t}\n\n\tfunction _addSprites(count:Int) {\n\t\tfor (i in 0 ... count) {\n\t\t\tvar textures:Array<Texture> = [];\n\t\t\tfor (i in 1 ... _animations.get(\"frames\")) {\n\t\t\t\tvar frame:String = \"\" + i;\n\t\t\t\twhile (frame.length < 4) frame = \"0\" + frame;\n\t\t\t\ttextures.push(Texture.fromFrame(_animations.get(\"name\") + \"_\" + frame + \".png\"));\n\t\t\t}\n\n\t\t\tvar mc:MovieClip = new MovieClip(textures);\n\t\t\tmc.x = Std.random(Std.int(StageProperties.screenWidth));\n\t\t\tmc.y = Std.random(Std.int(StageProperties.screenHeight));\n\t\t\tmc.anchor.set(0.5, 0.5);\n\t\t\tmc.gotoAndPlay(1);\n\t\t\t_movieclips.push(mc);\n\t\t\t_mcContainer.addChild(mc);\n\t\t\t_applyScale(mc);\n\t\t}\n\t\t_updateQuanityLabel();\n\t}\n\n\tpublic function update(elapsedTime:Float) {\n\t\tif (_isScale || _isRotation) {\n\t\t\tfor (i in 0 ... _movieclips.length) {\n\t\t\t\tvar mc:DisplayObjectContainer = _movieclips[i];\n\n\t\t\t\tif (_isScale) {\n\t\t\t\t\tif (mc.scale.x < 2) {\n\t\t\t\t\t\tmc.scale.x += Math.random() / 50 + 0.01;\n\t\t\t\t\t\tmc.scale.y += Math.random() / 50 + 0.01;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (_isRotation) {\n\t\t\t\t\tmc.rotation += Math.random() / 50 + 0.01;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function hide() {\n\t\t_reset();\n\n\t\tfor (i in 0 ... _buttons.length) {\n\t\t\tvar button:Button = _buttons[i];\n\t\t\tbutton.disable();\n\t\t\t_uiContainer.removeChild(button);\n\t\t\t_buttons[i] = null;\n\t\t}\n\n\t\t_isScale = false;\n\t\t_isRotation = false;\n\t\t_uiContainer.removeChild(_quantityLabel);\n\t\tgameContainer.removeChild(_mcContainer);\n\t\tgameContainer.removeChild(_uiContainer);\n\t\t_mcContainer = null;\n\t\t_uiContainer = null;\n\t\t_quantityLabel = null;\n\t\t_buttons = null;\n\t\t_movieclips = null;\n\t}\n\n\tpublic function resize() {\n\t\t_uiContainer.x = (StageProperties.screenWidth - 320) / 2;\n\t\t_uiContainer.y = 20;\n\t}\n}","package arm.pixidemo.components.typekit;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass TypekitController extends GameComponentController {\n\n\tvar _id:Int = 8;\n\tvar _showing:Bool = false;\n\tvar _view:TypekitView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, TypekitView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse if (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n}","package arm.pixidemo.components.typekit;\n\nimport pixi.text.BitmapText;\nimport pixi.text.Text;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass TypekitView extends GameComponentView {\n\n\tvar _yPosition:Float;\n\tvar _fonts:Array<Text>;\n\tvar _uiContainer:DisplayObjectContainer;\n\tvar _bitmapText:BitmapText;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_fonts = [];\n\t\t_uiContainer = new DisplayObjectContainer();\n\t\t_yPosition = 0;\n\n\t\t_addFont(\"futura-pt\", \"#0000FF\");\n\t\t_addFont(\"grafolita-script\", \"#9A2EFE\");\n\t\t_addFont(\"salsbury\", \"#FF0000\");\n\t\t_addFont(\"bree\", \"#0040FF\");\n\t\t_addFont(\"dederon-sans-web\", \"#0B6138\");\n\n\t\t_bitmapText = new BitmapText(\"bitmap font\", {font:\"60px Desyrel\", align:\"left\"});\n\t\t_bitmapText.x = - _bitmapText.width / 2;\n\t\t_bitmapText.y = 200;\n\t\t_uiContainer.addChild(_bitmapText);\n\n\t\tgameContainer.addChild(_uiContainer);\n\t\tresize();\n\t}\n\n\tfunction _addFont(name:String, color:String) {\n\t\tvar style:TextStyle = {};\n\t\tstyle.font = \"30px \" + name;\n\t\tstyle.fill = color;\n\n\t\tvar fontText = new Text(name + \" - Typekit Font \", style);\n\t\tfontText.anchor.set(0.5, 0.5);\n\t\tfontText.y = _yPosition;\n\t\t_fonts.push(fontText);\n\t\t_yPosition += 45;\n\t\t_uiContainer.addChild(fontText);\n\t}\n\n\tpublic function hide() {\n\t\tfor (i in 0 ... _fonts.length) _uiContainer.removeChild(_fonts[i]);\n\t\t_uiContainer.removeChild(_bitmapText);\n\t\tgameContainer.removeChild(_uiContainer);\n\t\t_fonts = [];\n\t\t_yPosition = 0;\n\t}\n\n\tpublic function resize() {\n\t\t_uiContainer.x = StageProperties.screenWidth / 2;\n\t\t_uiContainer.y = (StageProperties.screenHeight - _uiContainer.height) / 2;\n\t}\n}","package arm.pixidemo.components.video;\n\nimport arm.pixidemo.notifications.internal.MenuNotification;\n\nclass VideoController extends GameComponentController {\n\n\tvar _id:Int = 15;\n\tvar _showing:Bool = false;\n\tvar _view:VideoView;\n\n\tpublic function new(m, v, c, mainModel) {\n\t\tsuper(m, v, c, mainModel);\n\t\t_view = cast(v, VideoView);\n\t}\n\n\toverride function _addNotificationListeners() {\n\t\tsuper._addNotificationListeners();\n\t\tMenuNotification.click.add(_onMenuClick);\n\t\tMenuNotification.reset.add(_reset);\n\t}\n\n\tfunction _reset() {\n\t\tif (_showing) {\n\t\t\t_view.hide();\n\t\t\t_showing = false;\n\t\t}\n\t}\n\n\tfunction _onMenuClick(id:Int) {\n\t\tif (id == _id) {\n\t\t\tif (!_showing) _view.show();\n\t\t\t_showing = true;\n\t\t}\n\t\telse _reset();\n\t}\n\n\toverride function _resize() {\n\t\tif (_showing) _view.resize();\n\t}\n}","package arm.pixidemo.components.video;\n\n//import js.Lib;\n//import kalturhaxe.KalturaHaxe;\nimport pixi.display.Sprite;\nimport pixi.textures.VideoTexture;\nimport pixi.display.DisplayObjectContainer;\nimport arm.pixidemo.view.StageProperties;\n\nclass VideoView extends GameComponentView {\n\n\tvar _vidTexture:VideoTexture;\n\tvar _vidSprite:Sprite;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t}\n\n\tpublic function show() {\n\t\t_vidTexture = VideoTexture.fromUrl(\"assets/testVideo.mp4\");\n\t\t_vidSprite = new Sprite(_vidTexture);\n\t\t_vidSprite.anchor.set(0.5, 0.5);\n\t\tgameContainer.addChild(_vidSprite);\n\t\tresize();\n\n\t\t//var app = new KalturaHaxe(1839131, \"http://cdnapi.kaltura.com/p/1839131/sp/183913100/embedIframeJs/uiconf_id/26907121/partner_id/1839131\");\n\t\t//app.createConnection(\"3c428cc2e8b0c5c26f7ad435ec78e8b8\", test);\n\t}\n\n\t/*function test(succcess:Bool, response:String) {\n\t\ttrace(succcess, response);\n\t\tjs.Lib.eval(response);\n\t}*/\n\n\tpublic function hide() {\n\t\t_vidTexture.destroy();\n\t\tgameContainer.removeChild(_vidSprite);\n\t}\n\n\tpublic function resize() {\n\t\t_vidSprite.x = StageProperties.screenWidth / 2;\n\t\t_vidSprite.y = StageProperties.screenHeight / 2;\n\t}\n}","package arm.pixidemo.controller;\n\nimport arm.mvc.controller.Controller;\nimport arm.pixidemo.view.DemoView;\nimport arm.pixidemo.model.DemoModel;\n\nimport arm.pixidemo.components.menu.MenuController;\nimport arm.pixidemo.components.menu.MenuView;\n\nimport arm.pixidemo.components.preloader.PreloaderController;\nimport arm.pixidemo.components.preloader.PreloaderView;\n\nimport arm.pixidemo.components.screenguide.ScreenGuideController;\nimport arm.pixidemo.components.screenguide.ScreenGuideView;\n\nimport arm.pixidemo.components.screentest.ScreenTestController;\nimport arm.pixidemo.components.screentest.ScreenTestView;\n\nimport arm.pixidemo.components.localisation.LocalisationController;\nimport arm.pixidemo.components.localisation.LocalisationView;\n\nimport arm.pixidemo.components.sprites.SpritesController;\nimport arm.pixidemo.components.sprites.SpritesView;\n\nimport arm.pixidemo.components.bunnymark.BunnymarkController;\nimport arm.pixidemo.components.bunnymark.BunnymarkView;\n\nimport arm.pixidemo.components.spritesheets.SpritessheetsController;\nimport arm.pixidemo.components.spritesheets.SpritessheetsView;\n\nimport arm.pixidemo.components.coins.CoinsController;\nimport arm.pixidemo.components.coins.CoinsView;\n\nimport arm.pixidemo.components.typekit.TypekitController;\nimport arm.pixidemo.components.typekit.TypekitView;\n\nimport arm.pixidemo.components.audio.AudioController;\nimport arm.pixidemo.components.audio.AudioView;\n\nimport arm.pixidemo.components.reels.ReelsController;\nimport arm.pixidemo.components.reels.ReelsView;\n\nimport arm.pixidemo.components.skeleton.SkeletonController;\nimport arm.pixidemo.components.skeleton.SkeletonView;\n\nimport arm.pixidemo.components.video.VideoController;\nimport arm.pixidemo.components.video.VideoView;\n\nimport arm.pixidemo.components.livevideo.LiveVideoController;\nimport arm.pixidemo.components.livevideo.LiveVideoView;\n\nimport arm.pixidemo.components.physics.PhysicsController;\nimport arm.pixidemo.components.physics.PhysicsView;\n\nimport arm.pixidemo.components.menu.MenuController;\nimport arm.pixidemo.components.menu.MenuView;\n\nclass DemoController extends Controller {\n\n\tvar _view:DemoView;\n\n\tpublic function new(m, v, c) {\n\t\t_view = cast(v, DemoView);\n\t\tsuper(m, v, c);\n\t}\n\n\tfunction _getMainModel():DemoModel {\n\t\treturn cast(model, DemoModel);\n\t}\n\n\toverride function _setupComponents() {\n\t\t_setupMenuComponent();\n\t\t_setupScreenGuideComponent();\n\t\t_setupScreenTestComponent();\n\t\t_setupSpritesComponent();\n\t\t_setupLocalisationComponent();\n\t\t_setupBunnymarkComponent();\n\t\t_setupCoinsComponent();\n\t\t_setupTypekitComponent();\n\t\t_setupReelsComponent();\n\t\t_setupAudioComponent();\n\t\t_setupSpritesheetsComponent();\n\t\t_setupSkeletonComponent();\n\t\t_setupVideoComponent();\n\t\t_setupLiveVideoComponent();\n\t\t_setupPhysicsComponent();\n\t\t_setupPreloaderComponent();\n\t}\n\n\tfunction _setupLiveVideoComponent() {\n\t\tvar liveVideoView:LiveVideoView = new LiveVideoView(_view.gameStage, _view.gameContainer);\n\t\tvar liveVideoController:LiveVideoController = new LiveVideoController(null, liveVideoView, comms, _getMainModel());\n\t}\n\n\tfunction _setupVideoComponent() {\n\t\tvar videoView:VideoView = new VideoView(_view.gameStage, _view.gameContainer);\n\t\tvar videoController:VideoController = new VideoController(null, videoView, comms, _getMainModel());\n\t}\n\n\tfunction _setupPhysicsComponent() {\n\t\tvar physicsView:PhysicsView = new PhysicsView(_view.gameStage, _view.gameContainer);\n\t\tvar physicsController:PhysicsController = new PhysicsController(null, physicsView, comms, _getMainModel());\n\t}\n\n\tfunction _setupSkeletonComponent() {\n\t\tvar skeletonView:SkeletonView = new SkeletonView(_view.gameStage, _view.gameContainer);\n\t\tvar skeletonController:SkeletonController = new SkeletonController(null, skeletonView, comms, _getMainModel());\n\t}\n\n\tfunction _setupSpritesheetsComponent() {\n\t\tvar spritessheetsView:SpritessheetsView = new SpritessheetsView(_view.gameStage, _view.gameContainer);\n\t\tvar spritessheetsController:SpritessheetsController = new SpritessheetsController(null, spritessheetsView, comms, _getMainModel());\n\t}\n\n\tfunction _setupReelsComponent() {\n\t\tvar reelsView:ReelsView = new ReelsView(_view.gameStage, _view.gameContainer);\n\t\tvar reelsController:ReelsController = new ReelsController(null, reelsView, comms, _getMainModel());\n\t}\n\n\tfunction _setupAudioComponent() {\n\t\tvar audioView:AudioView = new AudioView(_view.gameStage, _view.gameContainer);\n\t\tvar audioController:AudioController = new AudioController(null, audioView, comms, _getMainModel());\n\t}\n\n\tfunction _setupTypekitComponent() {\n\t\tvar typekitView:TypekitView = new TypekitView(_view.gameStage, _view.gameContainer);\n\t\tvar typekitController:TypekitController = new TypekitController(null, typekitView, comms, _getMainModel());\n\t}\n\n\tfunction _setupCoinsComponent() {\n\t\tvar coinsView:CoinsView = new CoinsView(_view.gameStage, _view.gameContainer);\n\t\tvar coinsController:CoinsController = new CoinsController(null, coinsView, comms, _getMainModel());\n\t}\n\n\tfunction _setupBunnymarkComponent() {\n\t\tvar bunnymarkView:BunnymarkView = new BunnymarkView(_view.gameStage, _view.gameContainer);\n\t\tvar bunnymarkController:BunnymarkController = new BunnymarkController(null, bunnymarkView, comms, _getMainModel());\n\t}\n\n\tfunction _setupLocalisationComponent() {\n\t\tvar localisationView:LocalisationView = new LocalisationView(_view.gameStage, _view.gameContainer);\n\t\tvar localisationController:LocalisationController = new LocalisationController(null, localisationView, comms, _getMainModel());\n\t}\n\n\tfunction _setupSpritesComponent() {\n\t\tvar spritesView:SpritesView = new SpritesView(_view.gameStage, _view.gameContainer);\n\t\tvar spritesController:SpritesController = new SpritesController(null, spritesView, comms, _getMainModel());\n\t}\n\n\tfunction _setupScreenTestComponent() {\n\t\tvar screenTestView:ScreenTestView = new ScreenTestView(_view.gameStage, _view.gameContainer);\n\t\tvar screenTestController:ScreenTestController = new ScreenTestController(null, screenTestView, comms, _getMainModel());\n\t}\n\n\tfunction _setupMenuComponent() {\n\t\tvar menuView:MenuView = new MenuView(_view.gameStage, _view.gameContainer);\n\t\tvar menuController:MenuController = new MenuController(null, menuView, comms, _getMainModel());\n\t}\n\n\tfunction _setupScreenGuideComponent() {\n\t\tvar screenGuideView:ScreenGuideView = new ScreenGuideView(_view.gameStage, _view.gameContainer);\n\t\tvar screenGuideController:ScreenGuideController = new ScreenGuideController(null, screenGuideView, comms, _getMainModel());\n\t}\n\n\tfunction _setupPreloaderComponent() {\n\t\tvar preloaderView:PreloaderView = new PreloaderView(_view.gameStage, _view.gameContainer);\n\t\tvar preloaderController:PreloaderController = new PreloaderController(null, preloaderView, comms, _getMainModel());\n\t}\n}","package arm.pixidemo.core.utils;\n\nimport js.Browser;\n\nclass BrowserUtils {\n\n\tpublic static function getPixelRatio():Float {\n\t\tvar pixelRatio = (Browser.window.devicePixelRatio <= 2) ? Math.floor(Browser.window.devicePixelRatio) : 2;\n\t\tvar iOS:EReg = ~/(iPad|iPhone|iPod)/i;\n\t\tif(iOS.match(Browser.navigator.userAgent)) {\n\t\t\tif(Browser.window.screen.width == 320 && Browser.window.screen.height == 480) {\n\t\t\t\tpixelRatio = 1;\n\t\t\t}\n\t\t}\n\t\treturn pixelRatio;\n\t}\n\n}","package arm.pixidemo.model;\n\nimport arm.mvc.model.Model;\n\nclass DemoModel extends Model {\n\n\tpublic function new() {\n\t\tsuper();\n\t}\n}","package arm.pixidemo.resources;\n\nclass Layout implements Dynamic<String> {\n\n\tstatic var _instance:Layout;\n\n\tpublic static inline function getInstance():Layout {\n\t\treturn (_instance == null) ? _instance = new Layout() : _instance;\n\t}\n\n\tpublic function getLayout(value:String):Dynamic {\n\t\treturn Reflect.field(Layout, value);\n\t}\n\n\tfunction new() {\n\n\t}\n}","package arm.pixidemo.resources;\n\nclass Messages implements Dynamic<String> {\n\n\tstatic var _instance:Messages;\n\n\tpublic static inline function getInstance():Messages {\n\t\treturn (_instance == null) ? _instance = new Messages() : _instance;\n\t}\n\n\tpublic function getMessage(value:String, ?substitite:Dynamic):String {\n\t\tvar msg:String = Reflect.field(Messages, value);\n\t\tif (substitite != null) msg = StringCore.substitute(msg, substitite);\n\t\treturn msg;\n\t}\n\n\tfunction new() {\n\n\t}\n}","package arm.pixidemo.resources;\n\nclass Settings implements Dynamic<String> {\n\n\tstatic var _instance:Settings;\n\n\tpublic static inline function getInstance():Settings {\n\t\treturn (_instance == null) ? _instance = new Settings() : _instance;\n\t}\n\n\tpublic function getSetting(value:String):Dynamic {\n\t\treturn Reflect.field(Settings, value);\n\t}\n\n\tfunction new() {\n\n\t}\n}","package arm.pixidemo.resources;\n\nimport howler.Howl;\n\nclass Sounds implements Dynamic<Howl> {\n\n\tstatic var _instance:Sounds;\n\n\tpublic static inline function getInstance():Sounds {\n\t\treturn (_instance == null) ? _instance = new Sounds() : _instance;\n\t}\n\n\tpublic function getSound(value:String):Howl {\n\t\treturn Reflect.field(Sounds, value);\n\t}\n\n\tfunction new() {\n\n\t}\n}","package arm.pixidemo.view;\n\nimport arm.mvc.view.View;\nimport pixi.display.DisplayObjectContainer;\n\nimport pixi.display.Stage;\n\nclass DemoView extends View {\n\n\tpublic var gameStage(default, default):Stage;\n\tpublic var gameContainer(default, default):DisplayObjectContainer;\n\n\tpublic function new(stage, ?container) {\n\t\tsuper(stage, container);\n\t\tgameStage = cast(stage, Stage);\n\t\tgameContainer = cast(container, DisplayObjectContainer);\n\t}\n\n\toverride function get_stage():Stage {\n\t\treturn cast(stage, Stage);\n\t}\n\n\toverride function get_container():DisplayObjectContainer {\n\t\treturn cast(container, DisplayObjectContainer);\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash9\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\treturn makeStack(\"$s\");\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\t\tvar stack = [];\n\t\t\t\tfor (site in callsites) {\n\t\t\t\t\tvar method = null;\n\t\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\t\tif (fullName != null) {\n\t\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t\t}\n\t\t\t\treturn stack;\n\t\t\t}\n\t\t\tvar a = makeStack(untyped __new__(\"Error\").stack);\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\t\treturn a;\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif flash9\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\treturn makeStack(\"$e\");\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash9\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a : Array<String> = untyped __eval__(s);\n\t\t\tvar m = new Array();\n\t\t\tfor( i in 0...a.length - if(s == \"$s\") 2 else 0 ) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.unshift(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.unshift(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.unshift(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tvar m = [];\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tm.push(Module(line)); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped #if flash9 __global__[\"trace\"] #else __trace__ #end(pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a String,\n\tfrom which the Unserializer class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a new Serializer() instance, call its serialize() method with\n\t\tany argument and finally retrieve the String representation from\n\t\ttoString()\n\t- call Serializer.run() to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t`http://haxe.org/manual/serialization/format`\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set USE_CACHE to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttp://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = untyped __js__(\"typeof\")(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( untyped __js__(\"typeof\")(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash9\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if flash9\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash9 || php || cs || java) v.length #elseif cpp v.__length() #else v[untyped \"length\"] #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.toString());\n\t\t\tcase #if (neko || cs) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || flash8 || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\t#else\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar charsBuf = new StringBuf();\n\t\t\t\tvar b64 = BASE64;\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b2 << 2) | (b3 >> 6)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(b3 & 63));\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b2 << 2) & 63));\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b1 << 4) & 63));\n\t\t\t\t}\n\t\t\t\tvar chars = charsBuf.toString();\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash9 try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java) Reflect.hasField(v, \"hxSerialize\") #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash9\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tbuf.add(\"o\");\n\t\t\tserializeFields(v);\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash9\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.__Index());\n\t\t\t} else\n\t\t\t\tserializeString(v.__Tag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.__EnumParams();\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t}\n\t\t\t#elseif (java || cs)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = v[untyped \"length\"];\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash9\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash9\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif flash\n\t\t\tvar me = this;\n\t\t\tid = untyped _global[\"setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash9\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif flash\n\t\t\t\tuntyped _global[\"clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe Unserializer class is the complement to the Serializer class. It parses\n\ta serialization String and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a new Unserializer() instance with a given serialization\n\t\tString, then call its unserialize() method until all values are\n\t\textracted\n\t- call Unserializer.run() to unserialize a single value from a given\n\t\tString\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a Class or Enum instance from a given String. By\n\t\tdefault, the haxe Type Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. resolveClass(name:String):Class<Dynamic> is called to determine a\n\t\t\t\tClass from a class name\n\t\t2. resolveEnum(name:String):Enum<Dynamic> is called to determine an\n\t\t\t\tEnum from an enum name\n\n\t\tThis value is applied when a new Unserializer instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = Type;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash9\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = Type;\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n \t\tsetResolver(r);\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = {\n\t\t\t\tresolveClass : function(_) { return null; },\n\t\t\t\tresolveEnum : function(_) { return null; }\n\t\t\t};\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from Type.createEmptyInstance, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\tvar p1 = pos;\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\t// + - . , 0-9\n \t\t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\t\tpos++;\n \t\t\t\telse\n \t\t\t\t\tbreak;\n \t\t\t}\n \t\t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\treturn a;\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d = Date.fromString(buf.substr(pos,19));\n\t\t\tcache.push(d);\n\t\t\tpos += 19;\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : BytesData;\n\n\tfunction new(length,b) {\n\t\tthis.length = length;\n\t\tthis.b = b;\n\t\t#if flash9\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#end\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(b,pos);\n\t\t#elseif flash9\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn untyped __call__(\"ord\", b[pos]);\n\t\t#elseif cpp\n\t\treturn untyped b[pos];\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\t#if neko\n\t\tuntyped __dollar__sset(b,pos,v);\n\t\t#elseif flash9\n\t\tb[pos] = v;\n\t\t#elseif php\n\t\tb[pos] = untyped __call__(\"chr\", v);\n\t\t#elseif cpp\n\t\tuntyped b[pos] = v;\n\t\t#elseif java\n\t\tb[pos] = cast v;\n\t\t#elseif cs\n\t\tb[pos] = cast v;\n\t\t#else\n\t\tb[pos] = v & 0xFF;\n\t\t#end\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\t#if !neko\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\ttry untyped __dollar__sblit(b,pos,src.b,srcpos,len) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif php\n\t\tb = untyped __php__(\"substr($this->b, 0, $pos) . substr($src->b, $srcpos, $len) . substr($this->b, $pos+$len)\"); //__call__(\"substr\", b, 0, pos)+__call__(\"substr\", src.b, srcpos, len)+__call__(\"substr\", b, pos+len);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tif( len > 0 ) b.writeBytes(src.b,srcpos,len);\n\t\t#elseif java\n\t\tjava.lang.System.arraycopy(src.b, srcpos, b, pos, len);\n\t\t#elseif cs\n\t\tcs.system.Array.Copy(src.b, srcpos, b, pos, len);\n\t\t#elseif cpp\n\t\tb.blit(pos, src.b, srcpos, len);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = src.b;\n\t\tif( b1 == b2 && pos > srcpos ) {\n\t\t\tvar i = len;\n\t\t\twhile( i > 0 ) {\n\t\t\t\ti--;\n\t\t\t\tb1[i + pos] = b2[i + srcpos];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor( i in 0...len )\n\t\t\tb1[i+pos] = b2[i+srcpos];\n\t\t#end\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) {\n\t\t#if flash9\n\t\tvar v4 = value&0xFF;\n\t\tv4 |= v4<<8;\n\t\tv4 |= v4<<16;\n\t\tb.position = pos;\n\t\tfor( i in 0...len>>2 )\n\t\t\tb.writeUnsignedInt(v4);\n\t\tpos += len&~3;\n\t\tfor( i in 0...len&3 )\n\t\t\tset(pos++,value);\n\t\t#elseif cpp\n\t\tuntyped __global__.__hxcpp_memory_memset(b,pos,len,value);\n\t\t#else\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t\t#end\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new Bytes(len,untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tvar b2 = new flash.utils.ByteArray();\n\t\tb.readBytes(b2,0,len);\n\t\treturn new Bytes(len,b2);\n\t\t#elseif php\n\t\treturn new Bytes(len, untyped __call__(\"substr\", b, pos, len));\n\t\t#elseif java\n\t\tvar newarr = new java.NativeArray(len);\n\t\tjava.lang.System.arraycopy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#elseif cs\n\t\tvar newarr = new cs.NativeArray(len);\n\t\tcs.system.Array.Copy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#else\n\t\treturn new Bytes(len,b.slice(pos,pos+len));\n\t\t#end\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__compare(b,other.b);\n\t\t#elseif flash9\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tb1.position = 0;\n\t\tb2.position = 0;\n\t\tb1.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tfor( i in 0...len>>2 )\n\t\t\tif( b1.readUnsignedInt() != b2.readUnsignedInt() ) {\n\t\t\t\tb1.position -= 4;\n\t\t\t\tb2.position -= 4;\n\t\t\t\tvar d = b1.readUnsignedInt() - b2.readUnsignedInt();\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn d;\n\t\t\t}\n\t\tfor( i in 0...len & 3 )\n\t\t\tif( b1.readUnsignedByte() != b2.readUnsignedByte() ) {\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn b1[b1.position-1] - b2[b2.position-1];\n\t\t\t}\n\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\treturn length - other.length;\n\t\t#elseif php\n\t\treturn untyped __php__(\"$this->b < $other->b ? -1 : ($this->b == $other->b ? 0 : 1)\");\n\t\t//#elseif cs\n\t\t//TODO: memcmp if unsafe flag is on\n\t\t#elseif cpp\n\t\treturn b.memcmp(other.b);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\t#if cpp\n\t\t\t\treturn untyped b1[i] - untyped b2[i];\n\t\t\t\t#else\n\t\t\t\treturn untyped b1[i] - untyped b2[i];\n\t\t\t\t#end\n\t\treturn length - other.length;\n\t\t#end\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\t#if neko\n\t\treturn untyped Input._double_of_bytes(sub(pos,8).b,false);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readDouble();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_double(b,pos);\n\t\t#else\n\t\tvar b = new haxe.io.BytesInput(this,pos,8);\n\t\treturn b.readDouble();\n\t\t#end\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\t#if neko\n\t\treturn untyped Input._float_of_bytes(sub(pos,4).b,false);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readFloat();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_float(b,pos);\n\t\t#else\n\t\tvar b = new haxe.io.BytesInput(this,pos,4);\n\t\treturn b.readFloat();\n\t\t#end\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\t#if neko\n\t\tuntyped $sblit(b, pos, Output._double_bytes(v,false), 0, 8);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tb.writeDouble(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_double(b,pos,v);\n\t\t#else\n\t\tthrow \"Not supported\";\n\t\t#end\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\t#if neko\n\t\tuntyped $sblit(b, pos, Output._float_bytes(v,false), 0, 4);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tb.writeFloat(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_float(b,pos,v);\n\t\t#else\n\t\tthrow \"Not supported\";\n\t\t#end\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new String(untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readUTFBytes(len);\n\t\t#elseif php\n\t\treturn untyped __call__(\"substr\", b, pos, len);\n\t\t#elseif cpp\n\t\tvar result:String=\"\";\n\t\tuntyped __global__.__hxcpp_string_of_bytes(b,result,pos,len);\n\t\treturn result;\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, pos, len);\n\t\t#elseif java\n\t\ttry\n\t\t\treturn new String(b, pos, len, \"UTF-8\")\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t\t#end\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\t#if neko\n\t\treturn new String(untyped __dollar__ssub(b,0,length));\n\t\t#elseif flash9\n\t\tb.position = 0;\n\t\treturn b.readUTFBytes(length);\n\t\t#elseif php\n\t\treturn cast b;\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, 0, length);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\treturn new String(b, 0, length, \"UTF-8\");\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\treturn getString(0,length);\n\t\t#end\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn b;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(length,untyped __dollar__smake(length));\n\t\t#elseif flash9\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.length = length;\n\t\treturn new Bytes(length,b);\n\t\t#elseif php\n\t\treturn new Bytes(length, untyped __call__(\"str_repeat\", __call__(\"chr\", 0), length));\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tif (length>0) a[length-1] = untyped 0;\n\t\treturn new Bytes(length, a);\n\t\t#elseif cs\n\t\treturn new Bytes(length, new cs.NativeArray(length));\n\t\t#elseif java\n\t\treturn new Bytes(length, new java.NativeArray(length));\n\t\t#else\n\t\tvar a = new Array();\n\t\tfor( i in 0...length )\n\t\t\ta.push(0);\n\t\treturn new Bytes(length,a);\n\t\t#end\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(s.length,untyped __dollar__ssub(s.__s,0,s.length));\n\t\t#elseif flash9\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.writeUTFBytes(s);\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif php\n\t\treturn new Bytes(untyped __call__(\"strlen\", s), cast s);\n//\t\treturn ofData(untyped __call__(\"new _hx_array\", __call__(\"array_values\", __call__(\"unpack\", \"C*\",  s))));\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tuntyped __global__.__hxcpp_bytes_of_string(a,s);\n\t\treturn new Bytes(a.length, a);\n\t\t#elseif cs\n\t\tvar b = cs.system.text.Encoding.UTF8.GetBytes(s);\n\t\treturn new Bytes(b.Length, b);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\tvar b:BytesData = untyped s.getBytes(\"UTF-8\");\n\t\t\treturn new Bytes(b.length, b);\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t       c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(a.length,a);\n\t\t#end\n\t}\n\n\tpublic static function ofData( b : BytesData ) {\n\t\t#if flash9\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif neko\n\t\treturn new Bytes(untyped __dollar__ssize(b),b);\n\t\t#elseif php\n\t\treturn new Bytes(untyped __call__(\"strlen\", b), b);\n\t\t#elseif cs\n\t\treturn new Bytes(b.Length,b);\n\t\t#else\n\t\treturn new Bytes(b.length,b);\n\t\t#end\n\t}\n\n\t/**\n\t\tRead the most efficiently possible the n-th byte of the data.\n\t\tBehavior when reading outside of the available data is unspecified.\n\t**/\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(b,pos);\n\t\t#elseif flash9\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn untyped __call__(\"ord\", b[pos]);\n\t\t#elseif cpp\n\t\treturn untyped b.unsafeGet(pos);\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements Map.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements Map.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class StringMap<T> implements Map.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : String, value : T ) : Void {\n\t\tuntyped h[\"$\"+key] = value;\n\t}\n\n\tpublic function get( key : String ) : Null<T> {\n\t\treturn untyped h[\"$\"+key];\n\t}\n\n\tpublic function exists( key : String ) : Bool {\n\t\treturn untyped h.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tkey = \"$\"+key;\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[\"$\"+i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the [Input].\n**/\nclass Eof {\n\tpublic function new() {\n\t}\n\t@:keep function toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic inline function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse\n\t\t\treturn untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\tpublic static var window(get, never):js.html.DOMWindow;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\tpublic static var document(get, never):js.html.Document;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tpublic static function get_supported() return untyped __js__(\"typeof window != \\\"undefined\\\"\");\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage mconsole;\n\nimport haxe.PosInfos;\n\n/**\n\tA ConsolePrinter is responsible for printing the output of the Console. \n\tMessages can be printed at different LogLevels and at different \n\tindentations. Implementations can also define activate/deactivate behavior \n\twhen they are set/unset as the current console printer using \n\tConsole.setPrinter()\n**/\ninterface Printer\n{\n\t/**\n\t\tPrint an array of values to the console at a LogLevel and indent level.\n\n\t\t@param\tlevel\tThe level of the message to print\n\t\t@param\tparams\tAn array of values to print\n\t\t@param\tindent\tThe indent level of the message to be printed.\n\t\t@param\tpos\t\tThe position where the message was printed.\n\t**/\n\tfunction print(level:LogLevel, params:Array<Dynamic>, indent:Int, pos:PosInfos):Void;\n}\n\n/**\n\tA base ConsolePrinter implementation for functionality shared by \n\tFlashConsolePrinter, HTMLConsolePrinter and CommandLineConsolePrinter.\n**/\nclass PrinterBase\n{\n\t/**\n\t\tWhen the printing position changes (position is className.methodName), \n\t\tprint the new position before the message.\n\t**/\n\tpublic var printPosition:Bool;\n\n\t/**\n\t\tWhen the printing line changes print the line number before the message.\n\t**/\n\tpublic var printLineNumbers:Bool;\n\n\t/**\n\t\tThe previous log's position.\n\t**/\n\tvar position:String;\n\n\t/**\n\t\tThe previous log's line number.\n\t**/\n\tvar lineNumber:String;\n\n\tfunction new()\n\t{\n\t\tprintPosition = true;\n\t\tprintLineNumbers = true;\n\t}\n\n\t/**\n\t\tPrint an array of values to the console at a LogLevel and indent level.\n\n\t\t@param\tlevel\tThe level of the message to print\n\t\t@param\tparams\tAn array of values to print\n\t\t@param\tindent\tThe indent level of the message to be printed.\n\t\t@param\tpos\t\tThe position where the message was printed.\n\t**/\n\tpublic function print(level:LogLevel, params:Array<Dynamic>, indent:Int, pos:PosInfos):Void\n\t{\n\t\tparams = params.copy();\n\t\t\n\t\t// prepare message\n\t\tfor (i in 0...params.length)\n\t\t\tparams[i] = Std.string(params[i]);\n\t\tvar message = params.join(\", \");\n\n\t\t// get position\n\t\tvar nextPosition = \"@ \" + pos.className + \".\" + pos.methodName;\n\t\tvar nextLineNumber = Std.string(pos.lineNumber);\n\n\t\t// print positions/lines\n\t\tvar lineColumn = \"\";\n\t\tvar emptyLineColumn = \"\";\n\n\t\tif (printPosition)\n\t\t{\n\t\t\tif (nextPosition != position)\n\t\t\t{\n\t\t\t\tprintLine(none, nextPosition, pos);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (printLineNumbers)\n\t\t{\n\t\t\temptyLineColumn = StringTools.lpad(\"\", \" \", 5);\n\n\t\t\tif (nextPosition != position || nextLineNumber != lineNumber)\n\t\t\t{\n\t\t\t\tlineColumn = StringTools.lpad(nextLineNumber, \" \", 4) + \" \";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlineColumn = emptyLineColumn;\n\t\t\t}\n\t\t}\n\n\t\t// update position\n\t\tposition = nextPosition;\n\t\tlineNumber = nextLineNumber;\n\n\t\t// determine color from level\n\t\tvar color = switch (level)\n\t\t{\n\t\t\tcase log: white;\n\t\t\tcase info: blue;\n\t\t\tcase debug: green;\n\t\t\tcase warn: yellow;\n\t\t\tcase error: red;\n\t\t}\n\n\t\t// indent message\n\t\tvar indent = StringTools.lpad(\"\", \" \", indent * 2);\n\t\tmessage = lineColumn + indent + message;\n\t\tmessage = message.split(\"\\n\").join(\"\\n\" + emptyLineColumn + indent);\n\n\t\t// print message\n\t\tprintLine(color, message, pos);\n\t}\n\n\t/**\n\t\tAbstract implementation.\n\t**/\n\tfunction printLine(color:ConsoleColor, line:String, pos:PosInfos)\n\t{\n\t\tthrow \"method not implemented in ConsolePrinterBase\";\n\t}\n}\n\n/**\n\tAn enum defining possible colors for console output.\n**/\nenum ConsoleColor\n{\n\tnone;\n\twhite;\n\tblue;\n\tgreen;\n\tyellow;\n\tred;\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage mconsole;\n\nimport mconsole.Printer;\nimport haxe.PosInfos;\n\n#if (js && !nodejs)\n#if haxe3\nimport js.Browser;\nimport js.html.Element;\n#else\nimport js.Dom;\nprivate typedef Element = HtmlDom;\nprivate typedef Browser = js.Lib;\n\n#end\n/**\n\tA Printer that prints formatted logs to an HTML element.\n**/\n#if haxe3\nclass ConsoleView extends PrinterBase implements Printer\n#else\nclass ConsoleView extends PrinterBase, implements Printer\n#end\n{\n\t/**\n\t\tThe styles added to the document for the console printer.\n\t**/\n\tinline static var CONSOLE_STYLES =\n\"#console {\n\tfont-family:monospace;\n\tbackground-color:#002B36;\n\tbackground-color:rgba(0%,16.9%,21.2%,0.95);\n\tpadding:8px;\n\theight:600px;\n\tmax-height:600px;\n\toverflow-y:scroll;\n\tposition:absolute;\n\tleft:0px;\n\ttop:0px;\n\tright:0px;\n\tmargin:0px;\n\tz-index:10000;\n}\n#console a { text-decoration:none; }\n#console a:hover div { background-color:#063642 }\n#console a div span { display:none; float:right; color:white; }\n#console a:hover div span { display:block; }\";\n\t\n\t/**\n\t\tThe HTML element to print to, created when the printer is constructed \n\t\tand attached to document.body.\n\t**/\n\tpublic var element(default, null):Element;\n\n\t/**\n\t\tThe projects home directory, determined at compilation time by a macro. \n\t\tUsed to determine absolute URLs to log positions, so that clicking on a \n\t\tlog can open the correct file (and line, if supported) in a users editor.\n\t**/\n\tvar projectHome:String;\n\n\t/**\n\t\tIs the log output currently scrolled to the bottom. When true new logs will \n\t\tcause the log output window to scroll to display new log entries.\n\t**/\n\tvar atBottom:Bool;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\n\t\tatBottom = true;\n\t\tprojectHome = ConsoleMacro.getCwd();\n\n\t\t// create element\n\t\tvar document = Browser.document;\n\t\telement = document.createElement(\"pre\");\n\t\telement.id = \"console\";\n\t\t\n\t\tvar style = document.createElement(\"style\");\n\t\telement.appendChild(style);\n\n\t\tvar rules = document.createTextNode(CONSOLE_STYLES);\n\n\t\tuntyped\n\t\t{\n\t\t\tstyle.type = 'text/css';\n\t\t\tif (style.styleSheet) style.styleSheet.cssText = rules.nodeValue;\n\t\t\telse style.appendChild(rules);\n\t\t}\n\n\t\t// listen for scroll events\n\t\tvar me = this;\n\t\telement.onscroll = function(e) { me.updateScroll(); }\n\t}\n\n\t/**\n\t\tWhen output scrolls, evaluate whether output is scrolled to the bottom.\n\t**/\n\tfunction updateScroll()\n\t{\n\t\tatBottom = element.scrollTop - (element.scrollHeight - element.clientHeight) == 0;\n\t}\n\t\n\t/**\n\t\tPrints a single line of coloured output to the log panel. Each line is \n\t\tlinked to open the position where it was printed using the sublime URL \n\t\tscheme (mac only).\n\n\t\thttps://github.com/hiddenbek/subl-handler\n\t**/\n\toverride function printLine(color:ConsoleColor, line:String, pos:PosInfos)\n\t{\n\t\tvar style = switch (color)\n\t\t{\n\t\t\tcase none: \"#839496\";\n\t\t\tcase white: \"#ffffff\";\n\t\t\tcase blue: \"#248bd2\";\n\t\t\tcase green: \"#859900\";\n\t\t\tcase yellow: \"#b58900\";\n\t\t\tcase red: \"#dc322f\";\n\t\t};\n\n\t\tvar file = pos.fileName + \":\" + pos.lineNumber;\n\t\tvar fileName = pos.className.split(\".\").join(\"/\") + \".hx\";\n\t\t#if textmate\n\t\tvar link = ' href=\"txmt://open/?url=file://' + projectHome + 'src/' + fileName + '&line=' + pos.lineNumber + '\"';\n\t\t#else\n\t\tvar link = '';\n\t\t#end\n\t\telement.innerHTML = element.innerHTML + \"<a\"+link+\"><div style='color:\" + style + \"'>\" + line + \n\t\t\t\"<span>\" + file + \"</span></div></a>\";\n\n\t\tif (atBottom) element.scrollTop = element.scrollHeight;\n\t}\n\n\tpublic function attach()\n\t{\n\t\tBrowser.document.body.appendChild(element);\n\t\t\n\t}\n\n\tpublic function remove()\n\t{\n\t\tBrowser.document.body.removeChild(element);\n\t}\n}\n\n#elseif flash\n\nimport flash.text.TextField;\nimport flash.text.TextFormat;\nimport flash.display.Sprite;\n\n/**\n\tA Printer that prints formatted logs to a Flash TextField.\n**/\n#if haxe3\nclass ConsoleView extends PrinterBase implements Printer\n#else\nclass ConsoleView extends PrinterBase, implements Printer\n#end\n{\n\t/**\n\t\tThe sprite container for the log panel\n\t**/\n\tpublic var sprite(default, null):Sprite;\n\n\t/**\n\t\tThe background color of the log panel.\n\t**/\n\tvar background:Sprite;\n\n\t/**\n\t\tThe log output text field.\n\t**/\n\tvar textField:TextField;\n\n\t/**\n\t\tIs the panel currently scrolled to the bottom? When true, new messages \n\t\twill automatically scroll to the bottom.\n\t**/\n\tvar atBottom:Bool;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\n\t\tatBottom = true;\n\n\t\t// create panel\n\t\tsprite = new Sprite();\n\t\t\n\t\tbackground = new Sprite();\n\t\tsprite.addChild(background);\n\n\t\tbackground.graphics.beginFill(0x002B36, 0.95);\n\t\tbackground.graphics.drawRect(0, 0, 100, 100);\n\t\tbackground.width = background.height = 1000;\n\n\t\ttextField = new TextField();\n\t\tsprite.addChild(textField);\n\n\t\ttextField.mouseWheelEnabled = true;\n\t\ttextField.x = textField.y = 8;\n\t\ttextField.width = 800;\n\t\ttextField.multiline = true;\n\t\ttextField.wordWrap = true;\n\n\t\tvar format = new TextFormat();\n\t\tformat.font = \"_typewriter\";\n\t\tformat.size = 13;\n\t\tformat.color = 0xFFFFFF;\n\t\ttextField.defaultTextFormat = format;\n\n\t\t// listen for scrolling\n\t\ttextField.addEventListener(flash.events.Event.SCROLL, textScrolled);\n\n\t\t// attach\n\t\tvar current = flash.Lib.current;\n\t\tvar stage = current.stage;\n\t\t\n\t\tstage.scaleMode = flash.display.StageScaleMode.NO_SCALE;\n\t\tstage.addEventListener(flash.events.Event.RESIZE, resize);\n\t\t\n\t\tresize(null);\n\t}\n\n\t/**\n\t\tResize the log panel when the stage resizes.\n\t**/\n\tfunction resize(_)\n\t{\n\t\tvar stage = flash.Lib.current.stage;\n\n\t\tbackground.width = stage.stageWidth;\n\t\tbackground.height = stage.stageHeight;\n\n\t\ttextField.width = stage.stageWidth - 16;\n\t\ttextField.height = stage.stageHeight - 16;\n\n\t\tupdateScroll();\n\t}\n\n\t/**\n\t\tWhen the log output scrolls, evaluate atBottom.\n\t**/\n\tfunction textScrolled(_)\n\t{\n\t\tatBottom = textField.scrollV == textField.maxScrollV;\n\t}\n\n\t/**\n\t\tScroll to the bottom of output if atBottom is true.\n\t**/\n\tfunction updateScroll()\n\t{\n\t\tif (atBottom) textField.scrollV = textField.maxScrollV;\n\t}\n\n\t/**\n\t\tAdd a single formatted line of output to the log panel. Scroll to the \n\t\tbottom of the output if atBottom is true.\n\t**/\n\toverride function printLine(color:ConsoleColor, line:String, pos:PosInfos)\n\t{\n\t\tvar format = new TextFormat();\n\t\tformat.color = switch (color)\n\t\t{\n\t\t\tcase none: 0x839496;\n\t\t\tcase white: 0xffffff;\n\t\t\tcase blue: 0x248bd2;\n\t\t\tcase green: 0x859900;\n\t\t\tcase yellow: 0xb58900;\n\t\t\tcase red: 0xdc322f;\n\t\t};\n\t\t\n\t\tvar start = textField.text.length;\n\t\ttextField.appendText(line + \"\\n\");\n\t\ttextField.setTextFormat(format, start, textField.text.length);\n\n\t\tupdateScroll();\n\t}\n\n\tpublic function attach()\n\t{\n\t\tflash.Lib.current.addChild(sprite);\n\t}\n\n\tpublic function remove()\n\t{\n\t\tflash.Lib.current.removeChild(sprite);\n\t}\n}\n\n#else\n\nclass ConsoleView implements Printer\n{\n\tpublic function new() {}\n\n\tpublic function print(level:LogLevel, params:Array<Dynamic>, indent:Int, pos:PosInfos) {}\n\tpublic function attach() {}\n\tpublic function remove() {}\n}\n\n#end\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage mconsole;\n\nimport haxe.PosInfos;\n\n#if haxe3\nimport Map;\nimport haxe.CallStack;\nimport haxe.ds.StringMap;\n#else\nimport haxe.Stack;\nprivate typedef CallStack = haxe.Stack;\nprivate typedef StringMap<T> = Hash<T>;\n#end\n\n/**\n\tThis console implementation assumes the availability of the WebKit console. \n\tWe inline calls to the native API rather than simply creating an extern so \n\twe can add additional console methods (such as enterDebugger). This also \n\tmeans we can convert some Haxe structures (XML for example) into something \n\tmore readable in the console.\n\n\tIn flash, we call the WebKit console API through ExternalInterface.\n**/\nclass Console\n{\n\t#if no_console // null implementation\n\n\tpublic static function start() {}\n\tpublic static function stop() {}\n\tpublic static function addPrinter(printer:Printer) {}\n\tpublic static function removePrinter(printer:Printer) {}\n\n\tinline public static function log(message:Dynamic, ?pos:PosInfos) {}\n\tinline public static function info(message:Dynamic, ?pos:PosInfos) {}\n\tinline public static function debug(message:Dynamic, ?pos:PosInfos) {}\n\tinline public static function warn(message:Dynamic, ?pos:PosInfos) {}\n\tinline public static function error(message:Dynamic, ?stack:Bool=false, ?pos:PosInfos) {}\n\tinline public static function trace() {}\n\tinline public static function assert(expression:Bool, message:Dynamic) {}\n\tinline public static function count(?title:String) {}\n\tinline public static function group(message:Dynamic) {}\n\tinline public static function groupEnd() {}\n\tinline public static function time(name:String) {}\n\tinline public static function timeEnd(name:String) {}\n\tinline public static function markTimeline(label:String) {}\n\tinline public static function profile(?title:String) {}\n\tinline public static function profileEnd(?title:String) {}\n\n    public static var defaultPrinter = null;\n\n\t#else\n\n\t/**\n\t\tThe default console printer.\n\t**/\n\tpublic static var defaultPrinter = \n\n\t#if (cpp && nme)\n\t\tnew LogPrinter(haxe.Log.trace);\n\t#elseif (js && samsung && !browser)\n\t\tnew AlertPrinter();\n\t#elseif (flash || (js && !nodejs))\n\t\tnew ConsoleView();\n\t#elseif (sys || nodejs)\n\t\tnew FilePrinter();\n\t#end\n\n\t/**\n\t\tThe ConsolePrinters to print output to.\n\t**/\n\n\tstatic var printers:Array<Printer> = cast [defaultPrinter];\n\t\n\t/**\n\t\tThe current group depth, incremented when group(name) is called, and \n\t\tdecremented when groupEnd() is called.\n\t**/\n\tstatic var groupDepth = 0;\n\n\t/**\n\t\tA map of named timestamps.\n\t**/\n\tstatic var times = new StringMap<Float>();\n\n\t/**\n\t\tA map of counters by a unique posInfo identifier.\n\t**/\n\tstatic var counts = new StringMap<Int>();\n\n\t/**\n\t\tThe previous value of haxe.Log.trace if redirectTraces has been called, \n\t\tor null if it has not.\n\t**/\n\tstatic var previousTrace:Dynamic;\n\n\t/**\n\t\tIs the console currently active?\n\t**/\n\tstatic var running = false;\n\n\t#if flash\n\t\n\t/**\n\t\tMagic: The only way to get Haxe XML objects to print nicely in the \n\t\tWebKit console is if they are HTMLDom objects. So we log XML as:\n\t\t\t{__xml__:true, xml:xml.toString()}\n\t\tWe call this \"bridge\" function via external interface, which checks for \n\t\t__xml__ == true, and parses XML into a DOM using a DOMParser if it is.\n\t**/\n\tstatic var BRIDGE = \"__mconsole__\";\n\n\t/**\n\t\tEval'd to create the bridge.\n\t**/\n\tstatic var CREATE_BRIDGE_SCRIPT = BRIDGE + \n\" = function() {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) {\n    var arg = arguments[i];\n    args.push(arg.___xml___ ? new DOMParser().parseFromString(arg.xml,'text/xml').firstChild : arg);\n  }\n  console[arguments[0]].apply(console, args);\n}\";\n\t\n\t/**\n\t\tEval'd to remove the bridge.\n\t**/\n\tstatic var REMOVE_BRIDGE_SCRIPT = \"delete window.\" + BRIDGE;\n\t#end\n\t\n\n\t/**\n\t\tStarts the console, redirecting haxe.Log.trace and adding a default \n\t\tprinter if WebKit is not available.\n\n\t\tThe trace method accepts a variable number of arguments which are \n\t\tpassed to the console. If the first argument is a string that matches a \n\t\tlog level (log, info, warn...) then the trace is logged at that level.\n\t**/\n\tpublic static function start()\n\t{\n\t\tif (running) return;\n\t\trunning = true;\n\n\t\t// redirect trace\n\t\tpreviousTrace = haxe.Log.trace;\n\t\thaxe.Log.trace = haxeTrace;\n\n\t\tif (hasConsole)\n\t\t{\n\t\t\t#if flash\n\t\t\t// create bridge\n\t\t\tflash.external.ExternalInterface.call(\"eval\", CREATE_BRIDGE_SCRIPT);\n\t\t\t#end\n\t\t}\n\t\telse\n\t\t{\n\t\t\t#if ((js && !nodejs) || flash)\n\t\t\t// attach default printer to document/stage\n\t\t\t// defaultPrinter.attach();\n\t\t\t#end\n\t\t}\n\t}\n\n\t/**\n\t\tRestores the console to an inactive state.\n\t**/\n\tpublic static function stop()\n\t{\n\t\tif (!running) return;\n\t\trunning = false;\n\n\t\t// restore previous trace\n\t\thaxe.Log.trace = previousTrace;\n\t\tpreviousTrace = null;\n\n\t\t#if flash\n\t\tif (hasConsole)\n\t\t{\n\t\t\t// cleanup bridge\n\t\t\tflash.external.ExternalInterface.call(\"eval\", REMOVE_BRIDGE_SCRIPT);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t#if (js || flash)\n\t\t\t// remove default printer to document/stage\n\t\t\tdefaultPrinter.remove();\n\t\t\t#end\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tAdd a console printer.\n\t**/\n\tpublic static function addPrinter(printer:Printer)\n\t{\n\t\tremovePrinter(printer);\n\t\tprinters.push(printer);\n\t}\n\n\t/**\n\t\tRemove a console printer.\n\t**/\n\tpublic static function removePrinter(printer:Printer)\n\t{\n\t\tprinters.remove(printer);\n\t}\n\n\t/**\n\t\tThe method called by Haxe trace. Checks if the first parameter matches \n\t\ta log level, and forwards the log to the appropriate handler.\n\t**/\n\tstatic function haxeTrace(value:Dynamic, ?pos:PosInfos)\n\t{\n\t\tvar params = pos.customParams;\n\t\tif (params == null) params = [];\n\t\telse pos.customParams = null;\n\t\t\n\t\tvar level = switch (value)\n\t\t{\n\t\t\tcase \"log\": LogLevel.log;\n\t\t\tcase \"warn\": LogLevel.warn;\n\t\t\tcase \"info\": LogLevel.info;\n\t\t\tcase \"debug\": LogLevel.debug;\n\t\t\tcase \"error\": LogLevel.error;\n\t\t\tdefault:\n\t\t\t\tparams.unshift(value);\n\t\t\t\tLogLevel.log;\n\t\t}\n\n\t\tif (hasConsole) callConsole(Std.string(level), params);\n\t\tprint(level, params, pos);\n\t}\n\n\t/**\n\t\tPrint a message to each of the printers.\n\t**/\n\tinline static function print(level:LogLevel, params:Array<Dynamic>, pos:PosInfos)\n\t{\n\t\tfor (printer in printers) printer.print(level, params, groupDepth, pos);\n\t}\n\n\t/**\n\t\tLogs the message.\n\t**/\n\tinline public static function log(message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"log\", [message]);\n\t\tprint(LogLevel.log, [message], pos);\n\t}\n\n\t/**\n\t\tLogs the message.\n\t**/\n\tinline public static function info(message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"info\", [message]);\n\t\tprint(LogLevel.info, [message], pos);\n\t}\n\n\t/**\n\t\tLogs the message.\n\t**/\n\tinline public static function debug(message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"debug\", [message]);\n\t\tprint(LogLevel.debug, [message], pos);\n\t}\n\n\t/**\n\t\tLogs a \"warning\" icon followed by a color-coded message.\n\t**/\n\tinline public static function warn(message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"warn\", [message]);\n\t\tprint(LogLevel.warn, [message], pos);\n\t}\n\n\t/**\n\t\tLogs an \"error\" icon followed by a color-coded message.\n\t**/\n\tinline public static function error(message:Dynamic, ?stack:Array<StackItem>=null, ?pos:PosInfos):Void\n\t{\n\t\tif (stack == null) stack = CallStack.callStack();\n\t\tvar stackTrace = stack.length > 0 ? \"\\n\" + StackHelper.toString(stack) : \"\";\n\n\t\tif (hasConsole)\n\t\t{\n\t\t\t#if js\n\t\t\tcallConsole(\"error\", [message]);\n\t\t\t#elseif flash\n\t\t\t// can't send flash stack trace to WebKit, so warn instead\n\t\t\tcallConsole(\"warn\", [\"Error: \" + message + stackTrace]);\n\t\t\t#end\n\t\t}\n\n\t\tprint(LogLevel.error, [\"Error: \" + message + stackTrace], pos);\n\t}\n\n\t/**\n\t\tLogs a stack trace at the moment the function is called. The stack \n\t\ttrace lists the functions on the call stack (functions that have been \n\t\tcalled and have not yet finished executing and returned) and the values \n\t\tof any arguments passed to those functions.\n\t**/\n\tinline public static function trace(?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole)\n\t\t{\n\t\t\t#if js\n\t\t\tcallConsole(\"trace\", []);\n\t\t\t#elseif flash\n\t\t\t// can't send flash stack trace to WebKit, so info instead\n\t\t\tvar stack = StackHelper.toString(CallStack.callStack());\n\t\t\tcallConsole(\"info\", [\"Stack trace:\\n\" + stack]);\n\t\t\t#end\n\t\t}\n\n\t\tvar stack = StackHelper.toString(CallStack.callStack());\n\t\tprint(LogLevel.error, [\"Stack trace:\\n\" + stack], pos);\n\t}\n\n\t/**\n\t\tIf expression evaluates to false, logs the message.\n\t**/\n\tinline public static function assert(expression:Bool, message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"assert\", [expression, message]);\n\n\t\tif (!expression)\n\t\t{\n\t\t\tvar stack = StackHelper.toString(CallStack.callStack());\n\t\t\tprint(LogLevel.error, [\"Assertion failed: \" + message + \"\\n\" + stack], pos);\n\t\t\tthrow message;\n\t\t}\n\t}\n\n\t/**\n\t\tLogs the number of times this line of code has executed, and an \n\t\toptional title.\n\t**/\n\tinline public static function count(title:String, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"count\", [title]);\n\n\t\tvar position = pos.fileName + \":\" + pos.lineNumber;\n\t\tvar count = (counts.exists(position) ? counts.get(position) + 1 : 1);\n\t\tcounts.set(position, count);\n\t\tprint(LogLevel.log, [title + \": \" + count], pos);\n\t}\n\n\t/**\n\t\tLogs the message object and begins an indented block for further \n\t\tlog entries.\n\t**/\n\tinline public static function group(message:Dynamic, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"group\", [message]);\n\n\t\tprint(LogLevel.log, [message], pos);\n\t\tgroupDepth += 1;\n\t}\n\n\t/**\n\t\tEnds an indented block of log entries.\n\t**/\n\tinline public static function groupEnd(?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"groupEnd\", []);\n\t\tif (groupDepth > 0) groupDepth -= 1;\n\t}\n\n\t/**\n\t\tStarts a timer and gives it a name.\n\t**/\n\tinline public static function time(name:String, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"time\", [name]);\n\t\t// Use Sys.time() in macros, see: https://github.com/haxenme/NME/issues/21\n\t\ttimes.set(name, #if macro Sys.time() #else haxe.Timer.stamp() #end);\n\t}\n\n\t/**\n\t\tLogs the time since Console.time(name) was called, and restarts the timer.\n\t**/\n\tinline public static function timeEnd(name:String, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"timeEnd\", [name]);\n\t\t\n\t\tif (times.exists(name))\n\t\t{\n\t\t\t// Use Sys.time() in macros, see: https://github.com/haxenme/NME/issues/21\n\t\t\tprint(LogLevel.log, [name + \": \" + Std.int((#if macro Sys.time() #else haxe.Timer.stamp() #end - times.get(name)) * 1000) + \"ms\"], pos);\n\t\t\ttimes.remove(name);\n\t\t}\n\t}\n\n\t/**\n\t\tAdds a label to the timeline view marking when the point when the \n\t\tmethod was called.\n\t**/\n\tinline public static function markTimeline(label:String, ?pos:PosInfos):Void\n\t{\n\t\tif (hasConsole) callConsole(\"markTimeline\", [label]);\n\n\t\t// TODO: native implementation\n\t}\n\n\t/**\n\t\tBegins profiling JavaScript—tracking the number of times each function \n\t\tis called, the time spent in that function, and the time spent in \n\t\tnested groups of functions. If a title is provided, the profile is \n\t\tnamed.\n\t*/\n\tinline public static function profile(?title:String, ?pos:PosInfos):Void\n\t{\n\t\t#if js\n\t\tif (hasConsole) callConsole(\"profile\", [title]);\n\t\t#end\n\n\t\t// not currently supported outside of JS/WebKit\n\t}\n\n\t/**\n\t\tEnds one or more JavaScript profiles. If a title is provided and a \n\t\trunning profile has a matching title, only the current run of that \n\t\tprofile is ended. Otherwise, the current run of all profiles is ended.\n\t*/\n\tinline public static function profileEnd(?title:String, ?pos:PosInfos):Void\n\t{\n\t\t#if js\n\t\tif (hasConsole) callConsole(\"profileEnd\", [title]);\n\t\t#end\n\n\t\t// not currently supported outside of JS/WebKit\n\t}\n\n\t/**\n\t\tInserts a breakpoint at the calling position.\n\t**/\n\tinline public static function enterDebugger()\n\t{\n\t\t#if js\n\t\tuntyped __js__(\"debugger\");\n\t\t#elseif flash\n\t\tflash.system.ApplicationDomain.currentDomain.getDefinition(\"flash.debugger::enterDebugger\")();\n\t\t#end\n\t}\n\n\t//------------------------------------------------------------------------- WebKit\n\n\t/**\n\t\tThe console method used to print xml.\n\t**/\n\tstatic var dirxml = \"dirxml\";\n\n\t/**\n\t\tIs the WebKit console API available?\n\t**/\n\tstatic var hasConsole = detectConsole();\n\n\t/**\n\t\tDetects if the WebKit console API is available, either natively in \n\t\tJavaScript or via ExternalConnection in Flash.\n\t**/\n\tstatic function detectConsole():Bool\n\t{ \n\t\t#if (js && samsung && !browser)\n\t\treturn false;\n\t\t#elseif (js && !nodejs)\n\t\tif (untyped console != null && console[dirxml] == null) dirxml = \"log\";\n\t\treturn untyped __js__(\"console != undefined && console.log != undefined && console.warn != undefined\");\n\t\t#elseif flash\n\t\treturn flash.external.ExternalInterface.available &&\n\t\t\tflash.external.ExternalInterface.call(\"console.error.toString\") != null;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tCalls a method on the WebKit console API, either directly in JS or via \n\t\tExternalInterface in Flash running in a WebKit browser.\n\t**/\n\tinline static function callConsole(method:String, params:Array<Dynamic>)\n\t{\n\t\t#if (js && !nodejs)\n\t\tif (untyped console[method] != null)\n\t\t{\n\t\t\tif (method == \"log\" && Std.is(params[0], Xml)) method = dirxml;\n\t\t\t\n\t\t\tif (untyped console[method].apply != null)\n\t\t\t\tuntyped console[method].apply(console, mconsole.Console.toConsoleValues(params));\n\t\t\telse if (untyped Function.prototype.bind != null)\n\t\t\t\tuntyped Function.prototype.bind.call(console[method], console).apply(console, mconsole.Console.toConsoleValues(params));\n\t\t}\n\t\t\t\n\t\t#elseif flash\n\t\tparams = params.copy();\n\t\tparams.unshift(method);\n\t\tparams.unshift(BRIDGE); // the bridge function, see Console.start\n\t\tReflect.callMethod(null, flash.external.ExternalInterface.call, toConsoleValues(params));\n\t\t#end\n\t}\n\n\t/**\n\t\tConvert parameters for console methods into 'native' objects that will \n\t\tprint.\n\t**/\n\tstatic function toConsoleValues(params:Array<Dynamic>):Array<Dynamic>\n\t{\n\t\tfor (i in 0...params.length) params[i] = toConsoleValue(params[i]);\n\t\treturn params;\n\t}\n\n\t/**\n\t\tConverts a value into the anything that will print nicely in the \n\t\tconsole.\n\t**/\n\tstatic function toConsoleValue(value:Dynamic):Dynamic\n\t{\n\t\tvar typeClass = Type.getClass(value);\n\t\tvar typeName = typeClass == null ? \"\" : Type.getClassName(typeClass);\n\n\t\tif (typeName == \"Xml\")\n\t\t{\n\t\t\t#if js\n\t\t\tvar parser = untyped __js__(\"new DOMParser()\");\n\t\t\treturn parser.parseFromString(value.toString(), \"text/xml\").firstChild;\n\t\t\t#elseif flash\n\t\t\treturn {___xml___:true, xml:value.toString()};\n\t\t\t#end\n\t\t}\n\t\t#if haxe3\n\t\telse if (typeName == \"Map\" || typeName == \"StringMap\" || typeName == \"IntMap\")\n\t\t{\n\t\t\tvar native = {};\n\t\t\tvar map:IMap<Dynamic, Dynamic> = cast value;\n\t\t\tfor (key in map.keys())\n\t\t\t{\n\t\t\t\tReflect.setField(native, Std.string(key), toConsoleValue(map.get(key)));\n\t\t\t}\n\t\t\treturn native;\n\t\t}\n\t\t#else\n\t\telse if (typeName == \"Hash\")\n\t\t{\n\t\t\tvar native = {};\n\t\t\tvar hash = cast(value, Hash<Dynamic>);\n\t\t\tfor (key in hash.keys())\n\t\t\t{\n\t\t\t\tReflect.setField(native, Std.string(key), toConsoleValue(hash.get(key)));\n\t\t\t}\n\t\t\treturn native;\n\t\t}\n\t\telse if (typeName == \"IntHash\")\n\t\t{\n\t\t\tvar native = {};\n\t\t\tvar hash = cast(value, IntHash<Dynamic>);\n\t\t\tfor (key in hash.keys())\n\t\t\t{\n\t\t\t\tReflect.setField(native, Std.string(key), toConsoleValue(hash.get(key)));\n\t\t\t}\n\t\t\treturn native;\n\t\t}\n\t\t#end\n\t\telse\n\t\t{\n\t\t\tswitch (Type.typeof(value))\n\t\t\t{\n\t\t\t\tcase TEnum(e):\n\t\t\t\t\tvar native = [];\n\t\t\t\t\tvar name = Type.getEnumName(e) + \".\" + Type.enumConstructor(value);\n\t\t\t\t\tvar params:Array<Dynamic> = Type.enumParameters(value);\n\n\t\t\t\t\tif (params.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnative.push(name + \"(\");\n\t\t\t\t\t\tfor (i in 0...params.length) native.push(toConsoleValue(params[i]));\n\t\t\t\t\t\tnative.push(\")\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn [name];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn native;\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\t\n\t\t\tif (typeName == \"Array\" || typeName == \"List\" || typeName == \"haxe.FastList\")\n\t\t\t{\n\t\t\t\tvar native = [];\n\t\t\t\tvar iterable:Iterable<Dynamic> = cast value;\n\t\t\t\tfor (i in iterable) native.push(toConsoleValue(i));\n\t\t\t\treturn native;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t}\n\n\t#end\n}\n","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover;\n\nimport haxe.PosInfos;\n\n#if haxe3\nimport haxe.CallStack;\n#else\nimport haxe.Stack;\nprivate typedef CallStack = haxe.Stack;\n#end\n\nclass Exception\n{\n\t/**\n\t * The exception type. \n\t * \n\t * Should be the fully qualified name of the Exception class. e.g. 'massive.io.IOException'\n\t */\n\tpublic var type(default, null):String;\n\t\n\t/**\n\t * A description of the exception\n\t */\n\tpublic var message(default, null):String;\n\t\n\t/**\n\t * The pos infos from where the exception was created.\n\t */\n\tpublic var info(default, null):PosInfos;\n\n\t/**\n\t* An optional reference to a lower level exception that\n\t* triggered the current exception to be thrown\n\t*/\n\tpublic var cause(default, null):Dynamic;\n\tpublic var causeExceptionStack(default, null):Array<StackItem>;\n\tpublic var causeCallStack(default, null):Array<StackItem>;\n\t\n\t/**\n\t * @param\tmessage\t\t\ta description of the exception\n\t */\n\tpublic function new(message:String, ?cause:Dynamic, ?info:PosInfos) \n\t{\n\t\ttype = here().className;\n\t\tthis.message = message;\n\t\tthis.cause = cause;\n\t\tthis.info = info;\n\n\t\tif(cause != null)\n\t\t{\n\t\t\tcauseExceptionStack = CallStack.exceptionStack();\n\t\t\tcauseCallStack = CallStack.callStack();\n\t\t}\n\t}\n\n\t/**\n\t * Returns a string representation of this exception.\n\t * \n\t * Format: <type>: <message> at <className>#<methodName> (<lineNumber>)\n\t */\n\tpublic function toString():String\n\t{\n\t\tvar str:String = type + \": \" + message;\n\t\tif (info != null)\n\t\t\tstr += \" at \" + info.className + \"#\" + info.methodName + \" (\" + info.lineNumber + \")\";\n\t\tif (cause != null)\n        \tstr += \"\\n\\t Caused by: \" + cause; \n\t\treturn str;\n\t}\n\n\t//////////////////\n\n\tfunction here(?info:PosInfos):PosInfos\n\t{\n\t\treturn info;\n\t}\n}\n","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage;\n\n\nimport mcover.coverage.CoverageException;\nimport mcover.coverage.DataTypes;\n\nimport mcover.coverage.client.TraceClient;\nimport mcover.coverage.CoverageReportClient;\n\n#if neko\nimport neko.vm.Mutex;\n#elseif cpp\nimport cpp.vm.Mutex;\n#end\n\n#if haxe3\nimport haxe.ds.StringMap;\nimport haxe.ds.IntMap;\n#else\nprivate typedef StringMap<T> = Hash<T>\nprivate typedef IntMap<T> = IntHash<T>\n#end\n\ninterface CoverageLogger\n{\n\t\t/*\n\t * Handler which if present, should be called when the client has completed its processing of the results.\n\t */\n\tvar completionHandler(default, default):Float -> Void;\n\n\tvar coverage(default, null):Coverage;\n\n\n\tvar currentTest(default, set_currentTest):String;\n\n\tfunction report(?skipClients:Bool=false):Void;\n\tfunction reportCurrentTest(?skipClients:Bool=false):Void;\n\n\t/**\n\t * Add a coverage clients to interpret coverage results.\n\t * \n\t * @param client  client to interpret coverage results \n\t * @see mcover.coverage.CoverageReportClient\n\t * @see mcover.coverage.client.PrintClient\n\t */\n\tfunction addClient(client:CoverageReportClient):Void;\n\tfunction removeClient(client:CoverageReportClient):Void;\n\tfunction getClients():Array<CoverageReportClient>;\n\n\n\tfunction initializeCoverage(resourceName:String):Void;\n\n\tfunction logStatement(id:Int):Void;\n\n\tfunction logBranch(id:Int, value:Dynamic, ?compareValue:Dynamic=null):Dynamic;\n\n\n}\n\n@IgnoreLogging\nclass CoverageLoggerImpl implements CoverageLogger\n{\n\t#if (neko||cpp)\n\tstatic public var mutex:Mutex;\n\t#end\n\n\t/**\n\t * Handler called when all clients \n\t * have completed processing the results.\n\t */\n\tpublic var completionHandler(default, default):Float -> Void;\n\n\tpublic var coverage(default, null):Coverage;\n\n\tpublic var currentTest(default, set_currentTest):String;\n\n\t/*\n\t * total execution count for statements by id\n\t*/\n\tvar allStatementResultsById:IntMap<Int>;\n\t\n\t/*\n\t * total execution summary for branches by id\n\t*/\n\tvar allBranchResultsById:IntMap<BranchResult>;\n\n\t/*\n\t * stores a cache of test results against currentTest string\n\t*/\n\tvar filteredResultsMap:StringMap<FilteredCoverageResults>;\n\n\t/*\n\t * results for active 'currentTest'\n\t*/\n\tvar currentFilteredResults:FilteredCoverageResults;\n\n\tvar clients:Array<CoverageReportClient>;\n\tvar clientCompleteCount:Int;\n\n\t@IgnoreCover\n\tpublic function new()\n\t{\n\t\tallStatementResultsById = new IntMap();\n\t\tallBranchResultsById = new IntMap();\n\t\tfilteredResultsMap = new StringMap();\n\t\tclients = [];\n\t}\n\n\tpublic function report(?skipClients:Bool=false)\n\t{\n\t\tgenerateReportResults(false);\n\n\t\tif(!skipClients)\n\t\t{\t\n\t\t\treportToClients();\n\t\t}\n\t}\n\n\tpublic function reportCurrentTest(?skipClients:Bool=false)\n\t{\n\t\tif(currentTest == null) throw new CoverageException(\"No test specified to report on.\");\n\t\tgenerateReportResults(true);\t\n\t\t\n\t\tif(!skipClients)\n\t\t{\n\t\t\treportToClients();\n\t\t}\n\t}\n\n\tfunction generateReportResults(?currentTestOnly:Bool=false)\n\t{\n\t\tif(coverage == null)\n\t\t{\n\t\t\tinitializeCoverage(null);\t\n\t\t}\n\t\t\n\t\tif(currentTestOnly)\n\t\t{\n\t\t\tcoverage.setStatementResultsMap(currentFilteredResults.statementResultsById);\n\t\t\tcoverage.setBranchResultsMap(currentFilteredResults.branchResultsById);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcoverage.setStatementResultsMap(allStatementResultsById);\n\t\t\tcoverage.setBranchResultsMap(allBranchResultsById);\n\t\t}\n\n\t\tcoverage.getResults(false);\n\t}\n\n\t\n\tpublic function addClient(client:CoverageReportClient)\n\t{\n\t\tif(client == null) throw \"Null Client\";\n\t\tfor(c in clients)\n\t\t{\n\t\t\tif(c == client) return;\n\t\t}\n\n\t\tclient.completionHandler = clientCompletionHandler;\n\t\tclients.push(client);\n\t}\n\n\tpublic function removeClient(client:CoverageReportClient)\n\t{\n\t\tclient.completionHandler = null;\n\t\tclients.remove(client);\n\t}\n\n\tpublic function getClients():Array<CoverageReportClient>\n\t{\n\t\treturn clients.concat([]);\n\t}\n\n\tpublic function initializeCoverage(resourceName:String):Void\n\t{\n\t\tif(resourceName == null) resourceName = MCoverage.RESOURCE_DATA;\n\t\tvar serializedData:String = haxe.Resource.getString(resourceName);\n\t\tif(serializedData == null) throw new CoverageException(\"No generated coverage data found in haxe Resource '\" + resourceName  + \"'\");\n\t\ttry\n\t\t{\n\t\t\tcoverage = haxe.Unserializer.run(serializedData);\n\t\t}\n\t\tcatch(e:Dynamic)\n\t\t{\n\t\t\tthrow new CoverageException(\"Unable to unserialize coverage data in \" + resourceName, e);\n\t\t}\n\t}\n\n\t/**\n\t* Method called from injected code each time a code block executes. \n\t* Developers should not class this method directly.\n\t**/\n\t@IgnoreCover\n\tpublic function logStatement(id:Int)\n\t{\t\n\t\t#if (neko||cpp)\n\t\t\tif(mutex == null) mutex = new Mutex();\n\t\t \tmutex.acquire();\n\t\t#end\n\n\t\tupdateStatementMap(allStatementResultsById, id);\n\n\t\tif(currentFilteredResults != null)\n\t\t{\t\t\t\t\n\t\t\tupdateStatementMap(currentFilteredResults.statementResultsById, id);\n\t\t}\n\t\t#if (neko||cpp) mutex.release(); #end\n\t}\n\n\t@IgnoreCover\n\tfunction updateStatementMap(map:IntMap<Int>, id:Int)\n\t{\n\t\tvar count = 1;\n\n\t\tif(map.exists(id))\n\t\t{\n\t\t\tcount = map.get(id) + 1;\n\t\t}\n\t\tmap.set(id, count);\n\t}\n\t\n\t/**\n\t* Method called from injected code each time a binary operation resolves to true or false \n\t* Developers should not class this method directly.\n\t* @param id\t\t\t\tbranch id\n\t* @param value \t\t\tboolean or value to compare with compareValue\n\t* @param compareValue\tsecondary value to compare with\n\t**/\n\t@IgnoreCover\n\tpublic function logBranch(id:Int, value:Dynamic, ?compareValue:Dynamic=null):Dynamic\n\t{\n\t\t#if (neko||cpp)\n\t\t\tif(mutex == null) mutex = new Mutex();\n\t\t \tmutex.acquire();\n\t\t#end\n\n\t\tvar bool = false;\n\n\t\tif(compareValue != null)\n\t\t{\n\t\t\tbool = value == compareValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool = value;\n\t\t}\n\n\t\tupdateBranchMap(allBranchResultsById, id, bool);\n\n\t\tif(currentFilteredResults != null)\n\t\t{\n\t\t\tupdateBranchMap(currentFilteredResults.branchResultsById, id, bool);\n\t\t}\n\n\t\t#if (neko||cpp) mutex.release(); #end\n\t\treturn value;\n\t}\n\n\t@IgnoreCover\n\tfunction updateBranchMap(map:IntMap<BranchResult>, id:Int, value:Bool)\n\t{\n\t\tvar r:BranchResult = null;\n\t\t\n\t\tif(map.exists(id))\n\t\t{\n\t\t\tr = map.get(id);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = {id:id, trueCount:0, falseCount:0, total:0};\n\t\t\tmap.set(id, r);\n\t\t}\n\n\t\t//record current value\n\t\tif(value) r.trueCount ++;\n\t\telse r.falseCount ++;\n\n\t\tr.total ++;\n\t}\n\n\t///////////////////////////////////\n\n\tfunction set_currentTest(value:String):String\n\t{\n\t\tcurrentTest = value;\n\n\t\tif(value == null)\n\t\t{\n\t\t\tcurrentFilteredResults = null;\n\t\t\treturn value;\n\t\t}\n\n\t\tif(!filteredResultsMap.exists(value))\n\t\t{\n\t\t\tvar result:FilteredCoverageResults = {filter:value, statementResultsById:new IntMap(), branchResultsById:new IntMap()};\n\t\t\tfilteredResultsMap.set(value, result); \n\t\t}\n\n\t\tcurrentFilteredResults = filteredResultsMap.get(value);\n\n\t\treturn value;\n\t}\n\n\n\tfunction reportToClients()\n\t{\n\t\tif(clients.length == 0)\n\t\t{\n\t\t\taddClient(new TraceClient());\n\t\t}\n\t\t\n\t\tclientCompleteCount = 0;\n\t\t\t\n\t\tfor (client in clients)\n\t\t{\t\n\t\t\tclient.report(coverage);\n\t\t}\n\t}\n\n\tfunction clientCompletionHandler(client:CoverageReportClient):Void\n\t{\n\t\tclientCompleteCount ++;\n\t\t\n\t\tif (clientCompleteCount == clients.length)\n\t\t{\n\t\t\tif (completionHandler != null)\n\t\t\t{\n\t\t\t\texecuteCompletionHandler();\n\n\t\t\t\t// #if php\n\t\t\t\t// \texecuteCompletionHandler();\n\t\t\t\t// #else\n\t\t\t\t// \tTimer.delay(executeCompletionHandler, 1);\n\t\t\t\t// #end\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction executeCompletionHandler()\n\t{\n\t\tvar percent:Float = coverage.getPercentage();\n\t\tcompletionHandler(percent);\n\t}\n\n}\n\ntypedef FilteredCoverageResults =\n{\n\t/*\n\t * name of class being covered\n\t*/\t\n\tfilter:String,\n\n\t/*\n\t * statement execution counts for current test\n\t*/\n\tstatementResultsById:IntMap<Int>,\n\t\n\t/*\n\t * branch execution counts for current test\n\t*/\n\tbranchResultsById:IntMap<BranchResult>\n}\n\n","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage;\n\n#if neko\nimport neko.vm.Deque;\nimport neko.vm.Mutex;\n#elseif cpp\nimport cpp.vm.Deque;\nimport cpp.vm.Mutex;\n#end\n\nimport mcover.coverage.CoverageLogger;\nimport mcover.coverage.DataTypes;\n\n@IgnoreLogging\n@IgnoreCover\nclass MCoverage\n{\n\tstatic public var RESOURCE_DATA:String = \"MCoverData\";\n\n\t#if (neko||cpp)\n\t\tstatic public var mutex:Mutex;\n\t#end\n\n\tstatic public var logger(default, null):CoverageLogger;\n\n\t@IgnoreLogging\n\t@IgnoreCover\n\tpublic static function getLogger():CoverageLogger\n\t{\n\t\t#if (neko||cpp)\n\t\t\tif(mutex == null) mutex = new Mutex();\n\t\t \tmutex.acquire();\n\t\t#end\n\t\tif(logger == null)\n\t\t{\n\t\t\tlogger = new CoverageLoggerImpl();\n\t\t}\n\t\t#if (neko||cpp) mutex.release(); #end\n\t\treturn logger;\n\t}\n\n\tfunction new()\n\t{\n\t\t\n\t}\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\n@IgnoreLogging\n@:keep\nclass AbstractNode\n{\n\tpublic var id:Null<Int>;\n\tpublic var name:String;\n\n\tvar resultCache:CoverageResult;\n\n\t@IgnoreCover\n\tfunction new()\n\t{\n\n\t}\n\n\t@IgnoreLogging\n\tpublic function getResults(?cache:Bool=true):CoverageResult\n\t{\n\t\tif(resultCache == null || !cache)\n\t\t{\n\t\t\tresultCache = emptyResult();\n\t\t}\n\n\t\treturn resultCache;\n\t}\n\t\n\t@IgnoreLogging\n\tpublic function getPercentage():Float\n\t{\n\t\tvar r = getResults();\n\t\ttry\n\t\t{\n\t\t\tvar count = r.bt + r.bf + r.sc + r.mc;\n\t\t\tvar total = 2*r.b + r.s + r.m;\n\n\t\t\tif(count == 0 || total == 0) return 0;\n\n\t\t\treturn Math.round((count/total)*10000)/100;\n\t\t}\n\t\tcatch(e:Dynamic){}\n\t\treturn 0;\n\t}\n\t\n\tpublic function getClasses():Array<Clazz>\n\t{\n\t\treturn [];\n\t}\n\n\tpublic function lookupBranch(path:Array<Int>):Branch\n\t{\n\t\treturn null;\n\t}\n\n\tpublic function lookupStatement(path:Array<Int>):Statement\n\t{\n\t\treturn null;\n\t}\n\n\t\n\tpublic function getMissingBranches():Array<Branch>\n\t{\n\t\treturn [];\n\t}\n\n\tpublic function getMissingStatements():Array<Statement>\n\t{\n\t\treturn [];\n\t}\n\n\t//////////////\n\t\n\t@IgnoreLogging\n\tfunction emptyResult():CoverageResult\n\t{\n\t\treturn {lc:0, lp:0, l:0, sc:0, s:0, bt:0, bf:0,bc:0,b:0, mc:0, m:0, cc:0, c:0, fc:0, f:0, pc:0, p:0};\n\t}\n\n\t@IgnoreLogging\n\tfunction hxSerialize( s : haxe.Serializer )\n\t{\n\t\ts.serialize(id);\n        s.serialize(name);\n    }\n    \n    @IgnoreLogging\n\tfunction hxUnserialize( s : haxe.Unserializer )\n    {\n    \tid = s.unserialize();\n        name = s.unserialize();\n    }\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\n/**\n* Reprents a unique code block {} within an application\n* Contains a number of properties relating to it's location and context.\n*/\n@IgnoreLogging\n@:keep class AbstractBlock extends AbstractNode\n{\n\tpublic var file:String;\n\t\n\tpublic var packageName:String;\n\tpublic var className:String;\n\tpublic var qualifiedClassName:String;\n\tpublic var methodName:String;\n\n\tpublic var min:Int;\n\tpublic var max:Int;\n\n\tpublic var location:String;\n\tpublic var lines:Array<Int>;\n\n\tpublic var lookup:Array<Int>;\n\n\tfunction new()\n\t{\n\t\tsuper();\n\t\tlines = [];\n\t}\n\n\tpublic function isCovered():Bool\n\t{\n\t\treturn false;\n\t}\n\n\tpublic function toString():String\n\t{\n\t\treturn qualifiedClassName + \"#\" + toLocalString();\n\t}\n\n\tpublic function toLocalString():String\n\t{\n\t\treturn methodName + \" | \" + location;\n\t}\n\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(file);\n        s.serialize(packageName);\n        s.serialize(className);\n        s.serialize(qualifiedClassName);\n        s.serialize(methodName);\n        s.serialize(min);\n        s.serialize(max);\n        s.serialize(location);\n        s.serialize(lookup);\n        s.serialize(lines);\n    } \n    \n    @IgnoreLogging\n\toverride function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        file = s.unserialize();\n        packageName = s.unserialize();\n        className = s.unserialize();\n        qualifiedClassName = s.unserialize();\n        methodName = s.unserialize();\n        min = s.unserialize();\n        max = s.unserialize();\n        location = s.unserialize();\n        lookup = s.unserialize();\n        lines = s.unserialize();\n    }\n\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\n#if haxe3\nimport haxe.ds.StringMap;\nimport haxe.ds.IntMap;\n#else\nprivate typedef StringMap<T> = Hash<T>\nprivate typedef IntMap<T> = IntHash<T>\n#end\n\nimport mcover.coverage.data.AbstractNode;\nimport mcover.coverage.data.CoverageResult;\n\n@IgnoreLogging\n@:keep class AbstractNodeList extends AbstractNode\n{\n\tvar itemsById:IntMap<AbstractNode>;\n\tvar items:StringMap<Int>;\n\tpublic var itemCount(default, null):Int;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\t\titemCount = 0;\n\t\titemsById = new IntMap();\n\t\titems = new StringMap();\n\t}\n\n\tpublic function getItemByName(name:String, cls:Class<AbstractNode>):AbstractNode\n\t{\n\t\tif(!items.exists(name))\n\t\t{\n\t\t\tvar item:AbstractNode = Type.createInstance(cls, []);\n\t\t\titem.id = itemCount ++;\n\t\t\titem.name = name;\n\t\t\titems.set(name, item.id);\n\t\t\titemsById.set(item.id, item);\n\t\t}\n\t\treturn itemsById.get(items.get(name));\n\t}\n\n\toverride public function lookupBranch(path:Array<Int>):Branch\n\t{\n\t\tvar itemId = path.shift();\n\t\tif(itemId == null || !itemsById.exists(itemId)) return null;\n\t\treturn itemsById.get(itemId).lookupBranch(path);\n\t}\n\n\toverride public function lookupStatement(path:Array<Int>):Statement\n\t{\n\t\tvar itemId = path.shift();\n\t\tif(itemId == null|| !itemsById.exists(itemId)) return null;\n\t\treturn itemsById.get(itemId).lookupStatement(path);\n\t}\n\n\n\toverride public function getMissingBranches():Array<Branch>\n\t{\n\t\tvar a:Array<Branch> = [];\n\t\tfor(node in itemsById)\n\t\t{\n\t\t\tvar tmp = node.getMissingBranches();\n\t\t\ta = a.concat(tmp);\n\t\t}\n\t\ta.sort(DataUtil.sortOnBlockName);\n\t\treturn a;\n\t}\n\n\toverride public function getMissingStatements():Array<Statement>\n\t{\n\t\tvar a:Array<Statement> = [];\n\t\tfor(node in itemsById)\n\t\t{\n\t\t\tvar tmp = node.getMissingStatements();\n\t\t\ta = a.concat(tmp);\n\t\t}\n\n\t\ta.sort(DataUtil.sortOnBlockName);\n\t\treturn a;\n\t}\n\n\toverride public function getClasses():Array<Clazz>\n\t{\n\t\tvar a:Array<Clazz> = [];\n\t\tfor(node in itemsById)\n\t\t{\n\t\t\tvar tmp = node.getClasses();\n\t\t\ta = a.concat(tmp);\n\t\t}\n\t\treturn a;\n\t}\n\n\t@IgnoreLogging\n\toverride public function getResults(?cache:Bool=true):CoverageResult\n\t{\n\t\tif(resultCache == null || !cache)\n\t\t{\n\t\t\tresultCache = emptyResult();\n\t\t\tfor(node in itemsById)\n\t\t\t{\n\t\t\t\tvar tmp = node.getResults(cache);\n\t\t\t\tresultCache = appendResults(resultCache, tmp);\n\t\t\t}\n\t\t}\n\n\t\treturn resultCache;\n\t}\n\n\n\n\tfunction appendResults(to:CoverageResult, from:CoverageResult):CoverageResult\n\t{\n\t\tto.sc += from.sc;\n\t\tto.s += from.s;\n\t\tto.bt += from.bt;\n\t\tto.bf += from.bf;\n\t\tto.bc += from.bc;\n\t\tto.b += from.b;\n\t\tto.mc += from.mc;\n\t\tto.m += from.m;\n\t\tto.cc += from.cc;\n\t\tto.c += from.c;\t\n\t\tto.fc += from.fc;\n\t\tto.f += from.f;\t\n\t\tto.pc += from.pc;\n\t\tto.p += from.p;\t\n\n\t\tto.lc += from.lc;\n\t\tto.lp += from.lp;\n\t\tto.l += from.l;\n\n\t\treturn to;\n\t}\n\t\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(itemsById);\n        s.serialize(items);\n        s.serialize(itemCount);\n    }\n    \n    @IgnoreLogging\n\toverride function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        itemsById = s.unserialize();\n        items = s.unserialize();\n        itemCount = s.unserialize();\n    }\n\n\n}\n","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n@IgnoreLogging\n@:keep class Branch extends AbstractBlock\n{\n\tpublic var trueCount:Int;\n\tpublic var falseCount:Int;\n\n\tpublic var totalCount(get_totalCount, null):Int;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\t\ttrueCount = 0;\n\t\tfalseCount = 0;\n\t}\n\n\tfunction get_totalCount():Int\n\t{\n\t\treturn trueCount + falseCount;\n\t}\n\n\toverride public function isCovered():Bool\n\t{\n\t\treturn trueCount > 0 && falseCount > 0;\n\t}\n\n\tpublic function isPartiallyCovered():Bool\n\t{\n\t\treturn !isCovered() && (trueCount > 0 || falseCount > 0);\n\t}\n\n\toverride public function toLocalString():String\n\t{\n\t\tvar s = super.toLocalString();\n\t\tif(!isCovered())\n\t\t{\n\t\t\ts += \" | \";\n\t\t\tif(trueCount == 0) s += \"t\";\n\t\t\tif(trueCount == 0 && falseCount == 0) s +=\",\";\n\t\t\tif(falseCount == 0) s += \"f\";\n\t\t\n\t\t}\n\t\treturn s;\n\t}\n\n\t///////////\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(trueCount);\n        s.serialize(falseCount);\n    }\n    \n    @IgnoreLogging\n\toverride function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        trueCount = s.unserialize();\n        falseCount = s.unserialize();\n    }\n}\n\ntypedef BranchResult =\n{\n\tid:Int,\n\ttrueCount:Int,\n\tfalseCount:Int,\n\ttotal:Int, //total true and false counts;\n}\n","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\nimport mcover.coverage.data.CoverageResult;\n@IgnoreLogging\n@:keep class Clazz extends AbstractNodeList\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\tpublic function getMethods():Array<Method>\n\t{\n\t\tvar a:Array<Method> = [];\n\t\tfor(item in itemsById)\n\t\t{\n\t\t\tif(Type.getClass(item) == Method)\n\t\t\t{\n\t\t\t\ta.push(cast(item, Method));\t\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\toverride function appendResults(to:CoverageResult, from:CoverageResult):CoverageResult\n\t{\n\t\tto = super.appendResults(to, from);\n\t\tto.mc += (from.sc > 0) ? 1 : 0; \n\t\tto.m += 1;\t\n\t\treturn to;\n\t}\n\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\n#if haxe3\nimport haxe.ds.IntMap;\n#else\nprivate typedef IntMap<T> = IntHash<T>\n#end\n\nimport mcover.coverage.data.CoverageResult;\nimport mcover.coverage.data.Branch;\n\n@IgnoreLogging\n@:keep class Coverage extends AbstractNodeList\n{\n\tvar statements:IntMap<Array<Int>>;\n\tvar branches:IntMap<Array<Int>>;\n\n\t/*\n\t * total execution count for statements by id\n\t*/\n\tpublic var statementResultsById(default, null):IntMap<Int>;\n\t\n\t/*\n\t * total execution summary for branches by id\n\t*/\n\tpublic var branchResultsById(default, null):IntMap<BranchResult>;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\t\tstatements = new IntMap();\n\t\tbranches = new IntMap();\t\t\n\t\tstatementResultsById = new IntMap();\n\t\tbranchResultsById = new IntMap();\n\t}\n\n\tpublic function setStatementResultsMap(map:IntMap<Int>)\n\t{\n\t\tstatementResultsById = map;\n\t}\n\n\tpublic function setBranchResultsMap(map:IntMap<BranchResult>)\n\t{\n\t\tbranchResultsById = map;\n\t}\n\n\tpublic function addStatement(block:Statement)\n\t{\n\t\tverifyBlockData(block);\n\t\tif(statements.exists(block.id)) throw new Exception(\"Statement already exists: \" + block.id + \" \" + block.toString());\n\t\t\n\t\tvar packg = cast(getItemByName(block.packageName, Package), Package);\n\t\tvar file = cast(packg.getItemByName(block.file, File), File);\n\t\tvar clazz = cast(file.getItemByName(block.qualifiedClassName, Clazz), Clazz);\n\t\tvar method = cast(clazz.getItemByName(block.methodName, Method), Method);\n\n\t\tmethod.addStatement(block);\n\n\t\tblock.lookup = [packg.id, file.id, clazz.id,method.id,block.id];\n\t\tstatements.set(block.id, block.lookup.concat([]));\n\t}\n\n\tpublic function addBranch(block:Branch)\n\t{\n\t\tverifyBlockData(block);\n\t\tif(branches.exists(block.id)) throw new Exception(\"Branch already exists: \" + block.id + \" \" + block.toString());\n\t\t\n\t\tvar packg = cast(getItemByName(block.packageName, Package), Package);\n\t\tvar file = cast(packg.getItemByName(block.file, File), File);\n\t\tvar clazz = cast(file.getItemByName(block.qualifiedClassName, Clazz), Clazz);\n\t\tvar method = cast(clazz.getItemByName(block.methodName, Method), Method);\n\n\t\tmethod.addBranch(block);\n\n\t\tblock.lookup = [packg.id, file.id, clazz.id,method.id,block.id];\n\t\tbranches.set(block.id, block.lookup.concat([]));\n\t}\n\n\tfunction verifyBlockData(block:AbstractBlock)\n\t{\n\t\tif(block.id == null) throw new Exception(\"id cannot be null\");\n\t\tif(block.packageName == null) throw new Exception(\"packageName cannot be null\");\n\t\tif(block.file == null) throw new Exception(\"file cannot be null\");\n\t\tif(block.qualifiedClassName == null) throw new Exception(\"qualifiedClassName cannot be null\");\n\t\tif(block.methodName == null) throw new Exception(\"methodName cannot be null\");\n\t}\n\n\tpublic function getBranchById(id:Int):Branch\n\t{\n\t\tif(!branches.exists(id)) throw new Exception(\"Branch does not exist: \" + id);\n\n\t\tvar lookup:Array<Int> = branches.get(id).concat([]);\n\t\treturn lookupBranch(lookup);\n\t}\n\n\n\tpublic function getStatementById(id:Int):Statement\n\t{\n\t\tif(!statements.exists(id)) throw new Exception(\"Statement does not exist: \" + id);\n\t\tvar lookup:Array<Int> = statements.get(id).concat([]);\n\t\treturn lookupStatement(lookup);\n\t}\n\n\n\n    override public function getMissingBranches():Array<Branch>\n\t{\n\t\tvar a = super.getMissingBranches();\n\t\ta.sort(DataUtil.sortOnBlockName);\n\t\treturn a;\n\t}\n\n\toverride public function getMissingStatements():Array<Statement>\n\t{\n\t\tvar a = super.getMissingStatements();\n\t\ta.sort(DataUtil.sortOnBlockName);\n\t\treturn a;\n\t}\n\n\toverride public function getClasses():Array<Clazz>\n\t{\n\t\tvar a = super.getClasses();\n\t\ta.sort(DataUtil.sortOnNodeName);\n\t\treturn a;\n\t}\n\n\tpublic function getClassByName(name:String):Clazz\n\t{\n\t\tvar index = name.lastIndexOf(\".\");\n\n\t\tvar packageName = index > 1 ? name.substr(0, index) : \"\";\n\n\t\tif(!items.exists(packageName)) return null;\n\n\t\tvar pckgId = items.get(packageName);\n\t\t\n\t\tvar pckg = cast(itemsById.get(pckgId), Package);\n\t\t\n\t\tvar classes = pckg.getClasses();\n\n\t\tfor(cls in classes)\n\t\t{\n\t\t\tif(cls.name == name)\n\t\t\t{\n\t\t\t\treturn cls;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\t\n\t}\n\n\tpublic function getPackages():Array<Package>\n\t{\n\t\tvar a:Array<Package> = [];\n\t\tfor(item in itemsById)\n\t\t{\n\t\t\ta.push(cast(item, Package));\n\t\t}\n\t\ta.sort(DataUtil.sortOnNodeName);\n\n\t\treturn a;\n\t}\n\n\t@IgnoreLogging\n\toverride public function getResults(?cache:Bool=true):CoverageResult\n\t{\n\t\tif(resultCache == null || !cache)\n\t\t{\n\t\t\tfor(lookup in statements)\n\t\t\t{\n\t\t\t\tvar statement = lookupStatement(lookup.concat([]));\n\t\t\t\tif(statementResultsById.exists(statement.id))\n\t\t\t\t{\n\t\t\t\t\tstatement.count = statementResultsById.get(statement.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstatement.count = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(lookup in branches)\n\t\t\t{\n\t\t\t\tvar branch = lookupBranch(lookup.concat([]));\n\t\t\t\tif(branchResultsById.exists(branch.id))\n\t\t\t\t{\n\t\t\t\t\tvar result = branchResultsById.get(branch.id);\n\t\t\t\t\tbranch.trueCount = result.trueCount;\n\t\t\t\t\tbranch.falseCount = result.falseCount;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbranch.trueCount = 0;\n\t\t\t\t\tbranch.falseCount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsuper.getResults(cache);\n\t\t}\n\t\treturn resultCache;\n\t}\n\n\toverride function appendResults(to:CoverageResult, from:CoverageResult):CoverageResult\n\t{\n\t\tto = super.appendResults(to, from);\n\t\tto.pc += (from.sc > 0) ? 1 : 0; \n\t\tto.p += 1;\t\n\t\treturn to;\n\t}\n\n\t///////////////\n\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(statements);\n        s.serialize(branches);\n        s.serialize(statementResultsById);\n     \ts.serialize(branchResultsById);      \n    }\n    \n    @IgnoreLogging\n\toverride function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        statements = s.unserialize();\n        branches = s.unserialize();\n       \tstatementResultsById = s.unserialize();\n        branchResultsById = s.unserialize();\n    }\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\nclass DataUtil\n{\n\t@IgnoreCover\n\tpublic function new(){}\n\n\t@IgnoreLogging\n\tstatic public function sortOnNodeId(a:AbstractNode, b:AbstractNode)\n\t{\n\t\treturn a.id-b.id;\n\t}\n\n\t@IgnoreLogging\n\tstatic public function sortOnNodeName(a:AbstractNode, b:AbstractNode)\n\t{\n\t\tvar nodeA = a.name.toLowerCase();\n        var nodeB = b.name.toLowerCase();\n        \n        if (nodeA < nodeB) return -1;\n        if (nodeA > nodeB) return 1;\n\n\t\treturn 0;\n\t}\n\n\t@IgnoreLogging\n\tstatic public function sortOnBlockName(a:AbstractBlock, b:AbstractBlock)\n\t{\n\t\tvar blockA = a.toString().toLowerCase();\n        var blockB = b.toString().toLowerCase();\n        \n        if (blockA < blockB) return -1;\n        if (blockA > blockB) return 1;\n        return 0;\n\t}\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\nimport mcover.coverage.data.CoverageResult;\n\n@IgnoreLogging\n@:keep class File extends AbstractNodeList\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\toverride public function getClasses():Array<Clazz>\n\t{\n\t\tvar a:Array<Clazz> = [];\n\t\tfor(item in itemsById)\n\t\t{\n\t\t\tif(Type.getClass(item) == Clazz)\n\t\t\t{\n\t\t\t\ta.push(cast(item, Clazz));\t\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\toverride function appendResults(to:CoverageResult, from:CoverageResult):CoverageResult\n\t{\n\t\tto = super.appendResults(to, from);\n\t\tto.cc += (from.sc > 0) ? 1 : 0; \n\t\tto.c += 1;\t\n\t\treturn to;\n\t}\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\n#if haxe3\nimport haxe.ds.IntMap;\n#else\nprivate typedef IntMap<T> = IntHash<T>\n#end\n\nimport mcover.coverage.data.CoverageResult;\nimport mcover.coverage.data.Statement;\nimport mcover.coverage.data.Branch;\n\n@IgnoreLogging\n@:keep class Method extends AbstractNode\n{\n\tvar statementsById:IntMap<Statement>;\n\tvar branchesById:IntMap<Branch>;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\n\t\tstatementsById = new IntMap();\n\t\tbranchesById = new IntMap();\n\t}\n\n\tpublic function addStatement(value:Statement)\n\t{\n\t\tstatementsById.set(value.id, value);\n\t}\n\n\tpublic function addBranch(value:Branch)\n\t{\n\t\tbranchesById.set(value.id, value);\n\t}\n\n\tpublic function getStatementById(id:Int):Statement\n\t{\n\t\tif(statementsById.exists(id)) return statementsById.get(id);\n\t\treturn null;\n\t}\n\n\tpublic function getBranchById(id:Int):Branch\n\t{\n\t\tif(branchesById.exists(id)) return branchesById.get(id);\n\t\treturn null;\n\t}\n\n\toverride public function lookupBranch(path:Array<Int>):Branch\n\t{\n\t\tvar itemId = path.shift();\n\t\tif(itemId == null || !branchesById.exists(itemId)) return null;\n\t\treturn branchesById.get(itemId);\n\t}\n\n\toverride  public function lookupStatement(path:Array<Int>):Statement\n\t{\n\t\tvar itemId = path.shift();\n\t\tif(itemId == null || !statementsById.exists(itemId)) return null;\n\t\treturn statementsById.get(itemId);\n\t}\n\n\toverride public function getMissingBranches():Array<Branch>\n\t{\n\t\tvar a:Array<Branch> = [];\n\t\tfor(branch in branchesById)\n\t\t{\n\t\t\tif(!branch.isCovered()) a.push(branch);\n\t\t}\n\t\treturn a;\n\t}\n\n\toverride public function getMissingStatements():Array<Statement>\n\t{\n\t\tvar a:Array<Statement> = [];\n\t\tfor(statement in statementsById)\n\t\t{\n\t\t\tif(!statement.isCovered()) a.push(statement);\n\t\t}\n\t\treturn a;\n\t}\n\n\toverride public function getResults(?cache:Bool=true):CoverageResult\n\t{\n\t\tif(resultCache == null || !cache)\n\t\t{\n\t\t\tresultCache = emptyResult();\n\n\t\t\tvar covered:Bool;\n\n\t\t\tfor(statement in statementsById)\n\t\t\t{\n\t\t\t\tcovered = (statement.count > 0);\n\t\t\t\tresultCache.sc += covered ? 1 : 0;\n\t\t\t\tresultCache.s += 1;\n\n\t\t\t\tfor(line in statement.lines)\n\t\t\t\t{\n\t\t\t\t\tresultCache.lc += covered ? 1: 0;\n\t\t\t\t\tresultCache.l += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(branch in branchesById)\n\t\t\t{\n\t\t\t\tcovered = branch.isCovered();\n\t\t\t\tresultCache.bt += (branch.trueCount > 0) ? 1 : 0;\n\t\t\t\tresultCache.bf += (branch.falseCount > 0) ? 1 : 0;\n\t\t\t\tresultCache.bc += covered ? 1 : 0;\n\t\t\t\tresultCache.b += 1;\n\n\t\t\t\tvar partiallyCovered = branch.isPartiallyCovered();\n\n\t\t\t\tfor(line in branch.lines)\n\t\t\t\t{\n\t\t\t\t\tif(covered)\n\t\t\t\t\t{\n\t\t\t\t\t\tresultCache.lc += 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(partiallyCovered)\n\t\t\t\t\t{\n\t\t\t\t\t\tresultCache.lp += 1;\n\t\t\t\t\t}\n\t\t\t\t\tresultCache.l += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn resultCache;\n\t}\n\n\t///////////\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(statementsById);\n        s.serialize(branchesById);\n    }\n\t\n\t@IgnoreLogging\n   \toverride function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        statementsById = s.unserialize();\n        branchesById = s.unserialize();\n    }\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n\nimport mcover.coverage.data.CoverageResult;\n@IgnoreLogging\n@:keep class Package extends AbstractNodeList\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic function getFiles():Array<File>\n\t{\n\t\tvar a:Array<File> = [];\n\t\tfor(item in itemsById)\n\t\t{\n\t\t\tif(Type.getClass(item) == File)\n\t\t\t{\n\t\t\t\ta.push(cast(item, File));\t\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\toverride function appendResults(to:CoverageResult, from:CoverageResult):CoverageResult\n\t{\n\t\tto = super.appendResults(to, from);\n\t\tto.fc += (from.sc > 0) ? 1 : 0; \n\t\tto.f += 1;\t\n\t\treturn to;\n\t}\n\n\n}","/****\n* Copyright 2013 Massive Interactive. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or without modification, are\n* permitted provided that the following conditions are met:\n* \n*    1. Redistributions of source code must retain the above copyright notice, this list of\n*       conditions and the following disclaimer.\n* \n*    2. Redistributions in binary form must reproduce the above copyright notice, this list\n*       of conditions and the following disclaimer in the documentation and/or other materials\n*       provided with the distribution.\n* \n* THIS SOFTWARE IS PROVIDED BY MASSIVE INTERACTIVE ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MASSIVE INTERACTIVE OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* \n* The views and conclusions contained in the software and documentation are those of the\n* authors and should not be interpreted as representing official policies, either expressed\n* or implied, of Massive Interactive.\n****/\n\npackage mcover.coverage.data;\n@IgnoreLogging\n@:keep class Statement extends AbstractBlock\n{\n\tpublic var count:Int;\n\n\tpublic function new()\n\t{\n\t\tsuper();\n\t\tcount = 0;\n\t}\n\n\toverride public function isCovered():Bool\n\t{\n\t\treturn count > 0;\n\t}\n\n\n\t///////////\n\t@IgnoreLogging\n\toverride function hxSerialize( s : haxe.Serializer )\n\t{\n\t\tsuper.hxSerialize(s);\n        s.serialize(count);\n    }\n    @IgnoreLogging\n    override function hxUnserialize( s : haxe.Unserializer )\n    {\n    \tsuper.hxUnserialize(s);\n        count = s.unserialize();\n    }\n}","﻿package motion.actuators;\n\n\nimport motion.easing.IEasing;\nimport motion.Actuate;\n\n@:keepSub\n\n\nclass GenericActuator<T> implements IGenericActuator {\n\t\n\t\n\tprivate var duration:Float;\n\tprivate var id:String;\n\tprivate var properties:Dynamic;\n\tprivate var target:T;\n\tprivate var _autoVisible:Bool;\n\tprivate var _delay:Float;\n\tprivate var _ease:IEasing;\n\tprivate var _onComplete:Dynamic;\n\tprivate var _onCompleteParams:Array <Dynamic>;\n\tprivate var _onRepeat:Dynamic;\n\tprivate var _onRepeatParams:Array <Dynamic>;\n\tprivate var _onUpdate:Dynamic;\n\tprivate var _onUpdateParams:Array <Dynamic>;\n\tprivate var _onResume:Dynamic;\n\tprivate var _onResumeParams:Array <Dynamic>;\n\tprivate var _onPause:Dynamic;\n\tprivate var _onPauseParams:Array <Dynamic>;\n\tprivate var _reflect:Bool;\n\tprivate var _repeat:Int;\n\tprivate var _reverse:Bool;\n\tprivate var _smartRotation:Bool;\n\tprivate var _snapping:Bool;\n\tprivate var special:Bool;\n\t\n\t\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\n\t\t\n\t\t_autoVisible = true;\n\t\t_delay = 0;\n\t\t_reflect = false;\n\t\t_repeat = 0;\n\t\t_reverse = false;\n\t\t_smartRotation = false;\n\t\t_snapping = false;\n\t\tspecial = false;\n\t\t\n\t\tthis.target = target;\n\t\tthis.properties = properties;\n\t\tthis.duration = duration;\n\t\t\n\t\t_ease = Actuate.defaultEase;\n\t\t\n\t}\n\t\n\t\n\tprivate function apply ():Void {\n\t\t\n\t\tfor (i in Reflect.fields (properties)) {\n\t\t\t\n\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\n\t\t\tif (#if flash false && #end Reflect.hasField (target, i)) {\n\t\t\t\t\n\t\t\t\tReflect.setField (target, i, Reflect.field (properties, i));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tReflect.setProperty (target, i, Reflect.field (properties, i));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tReflect.setField (target, i, Reflect.field (properties, i));\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Flash performs faster when objects are set to visible = false rather than only alpha = 0. autoVisible toggles automatically based on alpha values\n\t * @param\tvalue\t\tWhether autoVisible should be enabled (Default is true)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function autoVisible (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_autoVisible = value;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function callMethod (method:Dynamic, params:Array<Dynamic> = null):Dynamic {\n\t\t\n\t\tif (params == null) {\n\t\t\t\n\t\t\tparams = [];\n\t\t\t\n\t\t}\n\t\t\n\t\t#if neko\n\t\t\n\t\tvar diff = untyped ($nargs)(method) - params.length;\n\t\t\n\t\tif (diff > 0) {\n\t\t\t\n\t\t\tparams = params.copy ();\n\t\t\t\n\t\t\tfor (i in 0...diff) {\n\t\t\t\t\n\t\t\t\tparams.push (null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn Reflect.callMethod (method, method, params);\n\t\t\n\t}\n\t\n\t\n\tprivate function change ():Void {\n\t\t\n\t\tif (_onUpdate != null) {\n\t\t\t\n\t\t\tcallMethod (_onUpdate, _onUpdateParams);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function complete (sendEvent:Bool = true):Void {\n\t\t\n\t\tif (sendEvent) {\n\t\t\t\n\t\t\tchange ();\n\t\t\t\n\t\t\tif (_onComplete != null) {\n\t\t\t\t\n\t\t\t\tcallMethod (_onComplete, _onCompleteParams);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tActuate.unload (this);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Increases the delay before a tween is executed\n\t * @param\tduration\t\tThe amount of seconds to delay\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function delay (duration:Float):GenericActuator<T> {\n\t\t\n\t\t_delay = duration;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets the easing which is used when running the tween\n\t * @param\teasing\t\tAn easing equation, like Elastic.easeIn or Quad.easeOut\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function ease (easing:IEasing):GenericActuator<T> {\n\t\t\n\t\t_ease = easing;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate function move ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Defines a function which will be called when the tween finishes\n\t * @param\thandler\t\tThe function you would like to be called\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function onComplete (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onComplete = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onCompleteParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onCompleteParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (duration == 0) {\n\t\t\t\n\t\t\tcomplete ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Defines a function which will be called when the tween repeats\n\t * @param\thandler\t\tThe function you would like to be called\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function onRepeat (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onRepeat = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onRepeatParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onRepeatParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Defines a function which will be called when the tween updates\n\t * @param\thandler\t\tThe function you would like to be called\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function onUpdate (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onUpdate = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onUpdateParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onUpdateParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t/**\n\t * Defines a function which will be called when the tween is paused\n\t * @param\thandler\t\tThe function you would like to be called\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function onPause (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onPause = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onPauseParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onPauseParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t/**\n\t * Defines a function which will be called when the tween resumed after pause\n\t * @param\thandler\t\tThe function you would like to be called\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function onResume (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onResume = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onResumeParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onResumeParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate function pause ():Void {\n\t\t\n\t\tif (_onPause != null)\n\t\t\tcallMethod(_onPause, _onPauseParams);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Automatically changes the reverse value when the tween repeats. Repeat must be enabled for this to have any effect\n\t * @param\tvalue\t\tWhether reflect should be enabled (Default is true)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function reflect (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_reflect = value;\n\t\tspecial = true;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Repeats the tween after it finishes\n\t * @param\ttimes\t\tThe number of times you would like the tween to repeat, or -1 if you would like to repeat the tween indefinitely (Default is -1)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function repeat (?times:Null<Int>):GenericActuator<T> {\n\t\t\n\t\tif (times == null) {\n\t\t\t\n\t\t\ttimes = -1;\n\t\t\t\n\t\t}\n\t\t\n\t\t_repeat = times;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate function resume ():Void {\n\t\t\n\t\tif (_onResume != null)\n\t\t\tcallMethod(_onResume, _onResumeParams);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets if the tween should be handled in reverse\n\t * @param\tvalue\t\tWhether the tween should be reversed (Default is true)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function reverse (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_reverse = value;\n\t\tspecial = true;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Enabling smartRotation can prevent undesired results when tweening rotation values\n\t * @param\tvalue\t\tWhether smart rotation should be enabled (Default is true)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function smartRotation (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_smartRotation = value;\n\t\tspecial = true;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Snapping causes tween values to be rounded automatically\n\t * @param\tvalue\t\tWhether tween values should be rounded (Default is true)\n\t * @return\t\tThe current actuator instance\n\t */\n\tpublic function snapping (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_snapping = value;\n\t\tspecial = true;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate function stop (properties:Dynamic, complete:Bool, sendEvent:Bool):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","﻿package motion.actuators;\n\n\nimport motion.actuators.GenericActuator;\n#if (flash || nme || openfl)\nimport flash.display.DisplayObject;\nimport flash.events.Event;\nimport flash.Lib;\n#else\n#if neko\nimport haxe.Log;\nimport haxe.PosInfos;\n#end\nimport haxe.Timer;\n#end\n\n\nclass SimpleActuator<T, U> extends GenericActuator<T> {\n\t\n\t\n\t#if actuate_manual_time\n\tpublic static var getTime:Void->Float;\n\t#end\n\t\n\tprivate var timeOffset:Float;\n\t\n\tprivate static var actuators = new Array<SimpleActuator<Dynamic, Dynamic>> ();\n\tprivate static var actuatorsLength = 0;\n\tprivate static var addedEvent = false;\n\t\n\t#if (!flash && !nme && !openfl)\n\tprivate static var timer:Timer;\n\t#end\n\t\n\tprivate var active:Bool;\n\tprivate var cacheVisible:Bool;\n\tprivate var detailsLength:Int;\n\tprivate var initialized:Bool;\n\tprivate var paused:Bool;\n\tprivate var pauseTime:Float;\n\tprivate var propertyDetails:Array <PropertyDetails<U>>;\n\tprivate var sendChange:Bool;\n\tprivate var setVisible:Bool;\n\tprivate var startTime:Float;\n\tprivate var toggleVisible:Bool;\n\t\n\t\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\n\t\t\n\t\tactive = true;\n\t\tpropertyDetails = new Array ();\n\t\tsendChange = false;\n\t\tpaused = false;\n\t\tcacheVisible = false;\n\t\tinitialized = false;\n\t\tsetVisible = false;\n\t\ttoggleVisible = false;\n\t\t\n\t\t#if !actuate_manual_time\n\t\t\t#if (flash || nme || openfl)\n\t\t\tstartTime = Lib.getTimer () / 1000;\n\t\t\t#else\n\t\t\tstartTime = Timer.stamp ();\n\t\t\t#end\n\t\t#else\n\t\tstartTime = getTime();\n\t\t#end\n\t\t\n\t\tsuper (target, duration, properties);\n\t\t\n\t\tif (!addedEvent) {\n\t\t\t\n\t\t\taddedEvent = true;\n\t\t\t#if !actuate_manual_update\n\t\t\t\t#if (flash || nme || openfl)\n\t\t\t\tLib.current.stage.addEventListener (Event.ENTER_FRAME, stage_onEnterFrame);\n\t\t\t\t#else\n\t\t\t\ttimer = new Timer (Std.int(1000 / 30));\n\t\t\t\ttimer.run = stage_onEnterFrame;\n\t\t\t\t#end\t\t\t\n\t\t\t#end\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override function autoVisible (?value:Null<Bool>):GenericActuator<T> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t_autoVisible = value;\n\t\t\n\t\tif (!value) {\n\t\t\t\n\t\t\ttoggleVisible = false;\n\t\t\t\n\t\t\tif (setVisible) {\n\t\t\t\t\n\t\t\t\tsetField (target, \"visible\", cacheVisible);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override function delay (duration:Float):GenericActuator<T> {\n\t\t\n\t\t_delay = duration;\n\t\ttimeOffset = startTime + duration;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function getField<V> (target:V, propertyName:String):Dynamic {\n\t\t\n\t\t#if (haxe_209 || haxe3)\n\t\t\n\t\tvar value = null;\n\t\t\n\t\tif (Reflect.hasField (target, propertyName)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tvalue = untyped target[propertyName];\n\t\t\t#else\n\t\t\tvalue = Reflect.field (target, propertyName);\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvalue = Reflect.getProperty (target, propertyName);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t\t#else\n\t\t\n\t\treturn Reflect.field (target, propertyName);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function initialize ():Void {\n\t\t\n\t\tvar details:PropertyDetails<U>;\n\t\tvar start:Float;\n\t\t\n\t\tfor (i in Reflect.fields (properties)) {\n\t\t\t\n\t\t\tvar isField = true;\n\t\t\t\n\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\n\t\t\tif (Reflect.hasField (target, i) #if flash && !untyped (target).hasOwnProperty (\"set_\" + i) #elseif html5 && !(untyped (target).__properties__ && untyped (target).__properties__[\"set_\" + i]) #end) {\n\t\t\t\t\n\t\t\t\tstart = Reflect.field (target, i);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tisField = false;\n\t\t\t\tstart = Reflect.getProperty (target, i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tstart = Reflect.field (target, i);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (Std.is (start, Float)) {\n\t\t\t\t\n\t\t\t\tdetails = new PropertyDetails (cast target, i, start, getField (properties, i) - start, isField);\n\t\t\t\tpropertyDetails.push (details);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdetailsLength = propertyDetails.length;\n\t\tinitialized = true;\n\t\t\n\t}\n\t\n\t\n\tprivate override function move ():Void {\n\t\t\n\t\t#if (flash || nme || openfl)\n\t\ttoggleVisible = (Reflect.hasField (properties, \"alpha\") && Std.is (target, DisplayObject));\n\t\t#else\n\t\ttoggleVisible = (Reflect.hasField (properties, \"alpha\") && Reflect.hasField (properties, \"visible\"));\n\t\t#end\n\t\t\n\t\tif (toggleVisible && properties.alpha != 0 && !getField (target, \"visible\")) {\n\t\t\t\n\t\t\tsetVisible = true;\n\t\t\tcacheVisible = getField (target, \"visible\");\n\t\t\tsetField (target, \"visible\", true);\n\t\t\t\n\t\t}\n\t\t\n\t\ttimeOffset = startTime;\n\t\tactuators.push (this);\n\t\t++actuatorsLength;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override function onUpdate (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\n\t\t\n\t\t_onUpdate = handler;\n\t\t\n\t\tif (parameters == null) {\n\t\t\t\n\t\t\t_onUpdateParams = [];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t_onUpdateParams = parameters;\n\t\t\t\n\t\t}\n\t\t\n\t\tsendChange = true;\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tprivate override function pause ():Void {\n\t\t\n\t\tif (!paused)\n\t\t{\n\t\t\tpaused = true;\n\t\t\n\t\t\tsuper.pause();\n\t\t\t\n\t\t\t\n\t\t\t#if !actuate_manual_time\n\t\t\t\t#if (flash || nme || openfl)\n\t\t\t\tpauseTime = Lib.getTimer ();\n\t\t\t\t#else\n\t\t\t\tpauseTime = Timer.stamp ();\n\t\t\t\t#end\n\t\t\t#else\n\t\t\tpauseTime = getTime();\n\t\t\t#end\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate override function resume ():Void {\n\t\t\n\t\tif (paused) {\n\t\t\t\n\t\t\t\n\t\t\tpaused = false;\n\t\t\t\n\t\t\t#if !actuate_manual_time\n\t\t\t\t#if (flash || nme || openfl)\n\t\t\t\ttimeOffset += (Lib.getTimer () - pauseTime) / 1000;\n\t\t\t\t#else\n\t\t\t\ttimeOffset += (Timer.stamp () - pauseTime) / 1000;\n\t\t\t\t#end\n\t\t\t#else\n\t\t\ttimeOffset += (getTime() - pauseTime) / 1000;\n\t\t\t#end\n\t\t\t\n\t\t\tsuper.resume();\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:generic private inline function setField<V> (target:V, propertyName:String, value:Dynamic):Void {\n\t\t\n\t\tif (Reflect.hasField (target, propertyName)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tuntyped target[propertyName] = value;\n\t\t\t#else\n\t\t\tReflect.setField (target, propertyName, value);\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (haxe_209 || haxe3)\n\t\t\tReflect.setProperty (target, propertyName, value);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function setProperty (details:PropertyDetails<U>, value:Dynamic):Void {\n\t\t\n\t\tif (details.isField) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tuntyped details.target[details.propertyName] = value;\n\t\t\t#else\n\t\t\tReflect.setField (details.target, details.propertyName, value);\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (haxe_209 || haxe3)\n\t\t\tReflect.setProperty (details.target, details.propertyName, value);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function stop (properties:Dynamic, complete:Bool, sendEvent:Bool):Void {\n\t\t\n\t\tif (active) {\n\t\t\t\n\t\t\tif (properties == null) {\n\t\t\t\t\n\t\t\t\tactive = false;\n\t\t\t\t\n\t\t\t\tif (complete) {\n\t\t\t\t\t\n\t\t\t\t\tapply ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.complete (sendEvent);\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (i in Reflect.fields (properties)) {\n\t\t\t\t\n\t\t\t\tif (Reflect.hasField (this.properties, i)) {\n\t\t\t\t\t\n\t\t\t\t\tactive = false;\n\t\t\t\t\t\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tapply ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.complete (sendEvent);\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function update (currentTime:Float):Void {\n\t\t\n\t\tif (!paused) {\n\t\t\t\n\t\t\tvar details:PropertyDetails<U>;\n\t\t\tvar easing:Float;\n\t\t\tvar i:Int;\n\t\t\t\n\t\t\tvar tweenPosition:Float = (currentTime - timeOffset) / duration;\n\t\t\t\n\t\t\tif (tweenPosition > 1) {\n\t\t\t\t\n\t\t\t\ttweenPosition = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!initialized) {\n\t\t\t\t\n\t\t\t\tinitialize ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!special) {\n\t\t\t\t\n\t\t\t\teasing = _ease.calculate (tweenPosition);\n\t\t\t\t\n\t\t\t\tfor (i in 0...detailsLength) {\n\t\t\t\t\t\n\t\t\t\t\tdetails = propertyDetails[i];\n\t\t\t\t\tsetProperty (details, details.start + (details.change * easing));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (!_reverse) {\n\t\t\t\t\t\n\t\t\t\t\teasing = _ease.calculate (tweenPosition);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\teasing = _ease.calculate (1 - tweenPosition);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar endValue:Float;\n\t\t\t\t\n\t\t\t\tfor (i in 0...detailsLength) {\n\t\t\t\t\t\n\t\t\t\t\tdetails = propertyDetails[i];\n\t\t\t\t\t\n\t\t\t\t\tif (_smartRotation && (details.propertyName == \"rotation\" || details.propertyName == \"rotationX\" || details.propertyName == \"rotationY\" || details.propertyName == \"rotationZ\")) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar rotation:Float = details.change % 360;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (rotation > 180) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trotation -= 360;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (rotation < -180) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trotation += 360;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tendValue = details.start + rotation * easing;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tendValue = details.start + (details.change * easing);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!_snapping) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetProperty (details, endValue);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetProperty (details, Math.round (endValue));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (tweenPosition == 1) {\n\t\t\t\t\n\t\t\t\tif (_repeat == 0) {\n\t\t\t\t\t\n\t\t\t\t\tactive = false;\n\t\t\t\t\t\n\t\t\t\t\tif (toggleVisible && getField (target, \"alpha\") == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetField (target, \"visible\", false);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcomplete (true);\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (_onRepeat != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcallMethod (_onRepeat, _onRepeatParams);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (_reflect) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_reverse = !_reverse;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstartTime = currentTime;\n\t\t\t\t\ttimeOffset = startTime + _delay;\n\t\t\t\t\t\n\t\t\t\t\tif (_repeat > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_repeat --;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (sendChange) {\n\t\t\t\t\n\t\t\t\tchange ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t#if actuate_manual_update \n\tpublic \n\t#else \n\tprivate \n\t#end\n\tstatic function stage_onEnterFrame (#if (flash || nme || openfl) event:Event #end):Void {\n\t\t#if !actuate_manual_time\n\t\t\t#if (flash || nme || openfl)\n\t\t\tvar currentTime:Float = Lib.getTimer () / 1000;\n\t\t\t#else\n\t\t\tvar currentTime = Timer.stamp ();\n\t\t\t#end\n\t\t#else\n\t\t\tvar currentTime = getTime();\n\t\t#end\n\n\t\tvar actuator:SimpleActuator<Dynamic, Dynamic>;\n\t\t\n\t\tvar j:Int = 0;\n\t\tvar cleanup = false;\n\t\t\n\t\tfor (i in 0...actuatorsLength) {\n\t\t\t\n\t\t\tactuator = actuators[j];\n\t\t\t\n\t\t\tif (actuator != null && actuator.active) {\n\t\t\t\t\n\t\t\t\tif (currentTime > actuator.timeOffset) {\n\t\t\t\t\t\n\t\t\t\t\tactuator.update (currentTime);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tj++;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tactuators.splice (j, 1);\n\t\t\t\t--actuatorsLength;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if (!nme && neko || !nme && cpp)\n\n// Custom haxe.Timer implementation for C++ and Neko\n\ntypedef TimerList = Array <Timer>;\n\n\nclass Timer {\n\t\n\t\n\tstatic var sRunningTimers:TimerList = [];\n\t\n\tvar mTime:Float;\n\tvar mFireAt:Float;\n\tvar mRunning:Bool;\n\t\n\t\n\tpublic function new (time:Float) {\n\t\t\n\t\tmTime = time;\n\t\tsRunningTimers.push (this);\n\t\tmFireAt = GetMS () + mTime;\n\t\tmRunning = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function measure<T>( f : Void -> T, ?pos : haxe.PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\thaxe.Log.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\t\n\t\n\t// Set this with \"run=...\"\n\tdynamic public function run () {\n\t\t\n\t\t\n\t\t\n\t}\n   \n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tif (mRunning) {\n\t\t\t\n\t\t\tmRunning = false;\n\t\t\tsRunningTimers.remove (this);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tstatic function GetMS ():Float {\n\t\t\n\t\treturn stamp () * 1000.0;\n\t\t\n\t}\n\t\n\n   // From std/haxe/Timer.hx\n\tpublic static function delay (f:Void -> Void, time:Int) {\n\t\t\n\t\tvar t = new Timer (time);\n\t\t\n\t\tt.run = function () {\n\t\t\tt.stop ();\n\t\t\tf ();\n\t\t};\n\t\t\n\t\treturn t;\n\t\t\n\t}\n\t\n\t\n\tstatic public function stamp ():Float {\n\t\t\n\t\treturn Date.now().getTime ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n","﻿/**\n * @author Joshua Granick\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\n\n\npackage motion.easing;\n\n\n\nclass Expo {\n\t\n\t\n\tstatic public var easeIn (get_easeIn, never):IEasing;\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\n\tstatic public var easeOut (get_easeOut, never):IEasing;\n\t\n\t\n\tprivate static function get_easeIn ():IEasing {\n\t\t\n\t\treturn new ExpoEaseIn ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_easeInOut ():IEasing {\n\t\t\n\t\treturn new ExpoEaseInOut ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_easeOut ():IEasing {\n\t\t\n\t\treturn new ExpoEaseOut ();\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass ExpoEaseIn implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn k == 0 ? 0 : Math.pow(2, 10 * (k - 1));\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass ExpoEaseInOut implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\tif (k == 0) { return 0; }\n\t\tif (k == 1) { return 1; }\n\t\tif ((k /= 1 / 2.0) < 1.0) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (k - 1));\n\t\t}\n\t\treturn 0.5 * (2 - Math.pow(2, -10 * --k));\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\tif (t == 0) {\n\t\t\treturn b;\n\t\t}\n\t\tif (t == d) {\n\t\t\treturn b + c;\n\t\t}\n\t\tif ((t /= d / 2.0) < 1.0) {\n\t\t\treturn c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t\t}\n\t\treturn c / 2 * (2 - Math.pow(2, -10 * --t)) + b;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass ExpoEaseOut implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn k == 1 ? 1 : (1 - Math.pow(2, -10 * k));\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn t == d ? b + c : c * (1 - Math.pow(2, -10 * t / d)) + b;\n\t\t\n\t}\n\t\n\t\n}","﻿package motion;\n\n\nimport haxe.ds.ObjectMap;\nimport motion.actuators.FilterActuator;\nimport motion.actuators.GenericActuator;\nimport motion.actuators.IGenericActuator;\nimport motion.actuators.MethodActuator;\nimport motion.actuators.MotionPathActuator;\nimport motion.actuators.SimpleActuator;\nimport motion.actuators.TransformActuator;\nimport motion.easing.Expo;\nimport motion.easing.IEasing;\n#if (flash || nme || openfl)\nimport flash.display.DisplayObject;\n#end\n\n@:access(motion.actuators)\n\n\nclass Actuate {\n\t\n\t\n\tpublic static var defaultActuator:Class<IGenericActuator> = SimpleActuator;\n\tpublic static var defaultEase:IEasing = Expo.easeOut;\n\tprivate static var targetLibraries = new ObjectMap<Dynamic, Array<IGenericActuator>> ();\n\t\n\t\n\t/**\n\t * Copies properties from one object to another. Conflicting tweens are stopped automatically\n\t * @example\t\t<code>Actuate.apply (MyClip, { alpha: 1 } );</code>\n\t * @param\ttarget\t\tThe object to copy to\n\t * @param\tproperties\t\tThe object to copy from\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like onComplete or onUpdate handlers\n\t */\n\t/*@:generic*/ public static function apply<T> (target:T, properties:Dynamic, customActuator:Class<GenericActuator<T>> = null):GenericActuator<T> {\n\t\t\n\t\tstop (target, properties);\n\t\t\n\t\tif (customActuator == null) {\n\t\t\t\n\t\t\tcustomActuator = cast defaultActuator;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar actuator:GenericActuator<T> = Type.createInstance (customActuator, [ target, 0, properties ]);\n\t\tactuator.apply ();\n\t\t\n\t\treturn actuator;\n\t\t\n\t}\n\t\n\t\n\t#if (flash || nme || openfl)\n\t\n\t/**\n\t * Creates a new effects tween \n\t * @param\ttarget\t\tThe object to tween\n\t * @param\tduration\t\tThe length of the tween in seconds\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\n\t * @return\t\tAn EffectsOptions instance, which is used to select the kind of effect you would like to apply to the target\n\t */\n\tpublic static function effects (target:DisplayObject, duration:Float, overwrite:Bool = true):EffectsOptions {\n\t\t\n\t\treturn new EffectsOptions (target, duration, overwrite);\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n\tprivate static function getLibrary<T> (target:T, allowCreation:Bool = true):Array<IGenericActuator> {\n\t\t\n\t\tif (!targetLibraries.exists (target) && allowCreation) {\n\t\t\t\n\t\t\ttargetLibraries.set (target, new Array<IGenericActuator> ());\n\t\t\t\n\t\t}\n\t\t\n\t\treturn targetLibraries.get (target);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates a new MotionPath tween\n\t * @param\ttarget\t\tThe object to tween\n\t * @param\tduration\t\tThe length of the tween in seconds\n\t * @param\tproperties\t\tAn object containing a motion path for each property you wish to tween\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */\n\t/*@:generic*/ public static function motionPath<T> (target:T, duration:Float, properties:Dynamic, overwrite:Bool = true):GenericActuator<T> {\n\t\t\n\t\treturn tween (target, duration, properties, overwrite, MotionPathActuator);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Pauses tweens for the specified target objects\n\t * @param\t... targets\t\tThe target objects which will have their tweens paused. Passing no value pauses tweens for all objects\n\t */\n\t///*@:generic*/ public static function pause (... targets:Array):void {\n\t/*@:generic*/ public static function pause<T> (target:T):Void {\n\t\t\n\t\tif (Std.is (target, IGenericActuator)) {\n\t\t\t\n\t\t\tvar actuator:IGenericActuator = cast target;\n\t\t\tactuator.pause ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar library = getLibrary (target, false);\n\t\t\t\n\t\t\tif (library != null) {\n\t\t\t\t\n\t\t\t\tfor (actuator in library) {\n\t\t\t\t\t\n\t\t\t\t\tactuator.pause ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function pauseAll ():Void {\n\t\t\n\t\tfor (library in targetLibraries) {\n\t\t\t\n\t\t\tfor (actuator in library) {\n\t\t\t\t\n\t\t\t\tactuator.pause ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Resets Actuate by stopping and removing tweens for all objects\n\t */\n\tpublic static function reset ():Void {\n\t\t\n\t\tfor (library in targetLibraries) {\n\t\t\t\n\t\t\tvar i = library.length - 1;\n\t\t\t\n\t\t\twhile (i >= 0) {\n\t\t\t\t\n\t\t\t\tlibrary[i].stop (null, false, false);\n\t\t\t\ti--;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttargetLibraries = new ObjectMap<Dynamic, Array<IGenericActuator>> ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Resumes paused tweens for the specified target objects\n\t * @param\t... targets\t\tThe target objects which will have their tweens resumed. Passing no value resumes tweens for all objects\n\t */\n\t/*@:generic*/ public static function resume<T> (target:T):Void {\n\t\t\n\t\tif (Std.is (target, IGenericActuator)) {\n\t\t\t\n\t\t\tvar actuator:IGenericActuator = cast target;\n\t\t\tactuator.resume ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar library = getLibrary (target, false);\n\t\t\t\n\t\t\tif (library != null) {\n\t\t\t\t\n\t\t\t\tfor (actuator in library) {\n\t\t\t\t\t\n\t\t\t\t\tactuator.resume ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function resumeAll ():Void {\n\t\t\n\t\tfor (library in targetLibraries) {\n\t\t\t\n\t\t\tfor (actuator in library) {\n\t\t\t\t\n\t\t\t\tactuator.resume ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Stops all tweens for an individual object\n\t * @param\ttarget\t\tThe target object which will have its tweens stopped, or a generic actuator instance\n\t * @param\tproperties\t\tA string, array or object which contains the properties you wish to stop, like \"alpha\", [ \"x\", \"y\" ] or { alpha: null }. Passing no value removes all tweens for the object (Optional)\n\t * @param\tcomplete\t\tIf tweens should apply their final target values before stopping. Default is false (Optional) \n\t * @param\tsendEvent\tIf a complete() event should be dispatched for the specified target. Default is true (Optional)\n\t */\n\t/*@:generic*/ public static function stop<T> (target:T, properties:Dynamic = null, complete:Bool = false, sendEvent:Bool = true):Void {\n\t\t\n\t\tif (target != null) {\n\t\t\t\n\t\t\tif (Std.is (target, IGenericActuator)) {\n\t\t\t\t\n\t\t\t\tvar actuator:IGenericActuator = cast target;\n\t\t\t\tactuator.stop (null, complete, sendEvent);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar library = getLibrary (target, false);\n\t\t\t\t\n\t\t\t\tif (library != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (Std.is (properties, String)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar temp = { };\n\t\t\t\t\t\tReflect.setField (temp, properties, null);\n\t\t\t\t\t\tproperties = temp;\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (Std.is (properties, Array)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar temp = {};\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (property in cast (properties, Array <Dynamic>)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tReflect.setField (temp, property, null);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tproperties = temp;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar i = library.length - 1;\n\t\t\t\t\t\n\t\t\t\t\twhile (i >= 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlibrary[i].stop (properties, complete, sendEvent);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates a tween-based timer, which is useful for synchronizing function calls with other animations\n\t * @example\t\t<code>Actuate.timer (1).onComplete (trace, [ \"Timer is now complete\" ]);</code>\n\t * @param\tduration\t\tThe length of the timer in seconds\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like onComplete or to gain a reference to the target timer object\n\t */\n\tpublic static function timer (duration:Float, customActuator:Class<GenericActuator<TweenTimer>> = null):GenericActuator<TweenTimer> {\n\t\t\n\t\treturn cast tween (new TweenTimer (0), duration, new TweenTimer (1), false, cast customActuator);\n\t\t\n\t}\n\t\n\t\n\t#if (flash || nme || openfl)\n\t\n\t/**\n\t * Creates a new transform tween\n\t * @example\t\t<code>Actuate.transform (MyClip, 1).color (0xFF0000);</code>\n\t * @param\ttarget\t\tThe object to tween\n\t * @param\tduration\t\tThe length of the tween in seconds\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\n\t * @return\t\tA TransformOptions instance, which is used to select the kind of transform you would like to apply to the target\n\t */\n\t/*@:generic*/ public static function transform<T> (target:T, duration:Float = 0, overwrite:Bool = true):TransformOptions<T> {\n\t\t\n\t\treturn new TransformOptions (target, duration, overwrite);\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n\t/**\n\t * Creates a new tween\n\t * @example\t\t<code>Actuate.tween (MyClip, 1, { alpha: 1 } ).onComplete (trace, [ \"MyClip is now visible\" ]);</code>\n\t * @param\ttarget\t\tThe object to tween\n\t * @param\tduration\t\tThe length of the tween in seconds\n\t * @param\tproperties\t\tThe end values to tween the target to\n\t * @param\toverwrite\t\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */ \n\t/*@:generic*/ public static function tween<T> (target:T, duration:Float, properties:Dynamic, overwrite:Bool = true, customActuator:Class<GenericActuator<T>> = null):GenericActuator<T> {\n\t\t\n\t\tif (target != null) {\n\t\t\t\n\t\t\tif (duration > 0) {\n\t\t\t\t\n\t\t\t\tif (customActuator == null) {\n\t\t\t\t\t\n\t\t\t\t\tcustomActuator = cast defaultActuator;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar actuator:GenericActuator<T> = Type.createInstance (customActuator, [ target, duration, properties ]);\n\t\t\t\tvar library = getLibrary (actuator.target);\n\t\t\t\t\n\t\t\t\tif (overwrite) {\n\t\t\t\t\t\n\t\t\t\t\tvar i = library.length - 1;\n\t\t\t\t\t\n\t\t\t\t\twhile (i >= 0) {\n\t\t\t\t\t\tlibrary[i].stop (actuator.properties, false, false);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlibrary = getLibrary (actuator.target);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlibrary.push (actuator);\n\t\t\t\tactuator.move ();\n\t\t\t\t\n\t\t\t\treturn actuator;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn apply (target, properties, customActuator);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/*@:generic*/ public static function unload<T> (actuator:GenericActuator<T>):Void {\n\t\t\n\t\tvar target = actuator.target;\n\t\t\n\t\tif (targetLibraries.exists (target)) {\n\t\t\t\n\t\t\ttargetLibraries.get (target).remove (actuator);\n\t\t\t\n\t\t\tif (targetLibraries.get (target).length == 0) {\n\t\t\t\t\n\t\t\t\ttargetLibraries.remove (target);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates a new tween that updates a method rather than setting the properties of an object\n\t * @example\t\t<code>Actuate.update (trace, 1, [\"Value: \", 0], [\"\", 1]).onComplete (trace, [ \"Finished tracing values between 0 and 1\" ]);</code>\n\t * @param\ttarget\t\tThe method to update\t\t\n\t * @param\tduration\t\tThe length of the tween in seconds\n\t * @param\tstart\t\tThe starting parameters of the method call. You may use both numeric and non-numeric values\n\t * @param\tend\t\tThe ending parameters of the method call. You may use both numeric and non-numeric values, but the signature should match the start parameters\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */\n\t/*@:generic*/ public static function update<T> (target:T, duration:Float, start:Array <Dynamic> = null, end:Array <Dynamic> = null, overwrite:Bool = true):GenericActuator<T> {\n\t\t\t\t\n\t\tvar properties:Dynamic = { start: start, end: end };\n\t\t\n\t\treturn tween (target, duration, properties, overwrite, MethodActuator);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !haxe3\nimport com.eclecticdesignstudio.motion.actuators.FilterActuator;\nimport com.eclecticdesignstudio.motion.actuators.GenericActuator;\nimport com.eclecticdesignstudio.motion.actuators.TransformActuator;\nimport com.eclecticdesignstudio.motion.Actuate;\nimport flash.display.DisplayObject;\nimport flash.filters.BitmapFilter;\n//import flash.filters.ColorMatrixFilter;\nimport flash.geom.Matrix;\n#end\n\n\n#if (flash || nme || openfl)\n\nprivate class EffectsOptions {\n\n\n\tprivate var duration:Float;\n\tprivate var overwrite:Bool;\n\tprivate var target:DisplayObject;\n\n\n\tpublic function new (target:DisplayObject, duration:Float, overwrite:Bool) {\n\t\t\n\t\tthis.target = target;\n\t\tthis.duration = duration;\n\t\tthis.overwrite = overwrite;\n\t\t\n\t}\n\n\n\t/**\n\t * Creates a new BitmapFilter tween\n\t * @param\treference\t\tA reference to the target's filter, which can be an array index or the class of the filter\n\t * @param\tproperties\t\tThe end properties to use for the tween\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */\n\tpublic function filter (reference:Dynamic, properties:Dynamic):IGenericActuator {\n\t\t\n\t\tproperties.filter = reference;\n\t\t\n\t\treturn Actuate.tween (target, duration, properties, overwrite, FilterActuator);\n\t\t\n\t}\n\n\n}\n\n\nprivate class TransformOptions<T> {\n\n\n\tprivate var duration:Float;\n\tprivate var overwrite:Bool;\n\tprivate var target:T;\n\n\n\tpublic function new (target:T, duration:Float, overwrite:Bool) {\n\t\t\n\t\tthis.target = target;\n\t\tthis.duration = duration;\n\t\tthis.overwrite = overwrite;\n\t\t\n\t}\n\n\n\t/**\n\t * Creates a new ColorTransform tween\n\t * @param\tcolor\t\tThe color value\n\t * @param\tstrength\t\tThe percentage amount of tint to apply (Default is 1)\n\t * @param\talpha\t\tThe end alpha of the target. If you wish to tween alpha and tint simultaneously, you must do them both as part of the ColorTransform. A value of null will make no change to the alpha of the object (Default is null)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */\n\tpublic function color (value:Float = 0x000000, strength:Float = 1, alpha:Null <Float> = null):IGenericActuator {\n\t\t\n\t\tvar properties:Dynamic = { colorValue: value, colorStrength: strength };\n\t\t\n\t\tif (alpha != null) {\n\t\t\t\n\t\t\tproperties.colorAlpha = alpha;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn Actuate.tween (target, duration, properties, overwrite, TransformActuator);\n\t\t\n\t}\n\n\n\t/**\n\t * Creates a new SoundTransform tween\n\t * @param\tvolume\t\tThe end volume for the target, or null if you would like to ignore this property (Default is null)\n\t * @param\tpan\t\tThe end pan for the target, or null if you would like to ignore this property (Default is null)\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\n\t */\n\tpublic function sound (volume:Null <Float> = null, pan:Null <Float> = null):IGenericActuator {\n\t\t\n\t\tvar properties:Dynamic = {};\n\t\t\n\t\tif (volume != null) {\n\t\t\t\n\t\t\tproperties.soundVolume = volume;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (pan != null) {\n\t\t\t\n\t\t\tproperties.soundPan = pan;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn Actuate.tween (target, duration, properties, overwrite, TransformActuator);\n\t\t\n\t}\n\n\n}\n\n#end\n\n\nprivate class TweenTimer {\n\n\n\tpublic var progress:Float;\n\n\n\tpublic function new (progress:Float):Void {\n\t\t\n\t\tthis.progress = progress;\n\t\t\n\t}\n\n\n}","﻿package motion.actuators;\n\n\nclass MethodActuator<T> extends SimpleActuator<T, T> {\n\t\n\t\n\tprivate var currentParameters:Array <Dynamic>;\n\tprivate var tweenProperties:Dynamic;\n\t\n\t\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\n\t\t\n\t\tcurrentParameters = new Array <Dynamic> ();\n\t\ttweenProperties = { };\n\t\t\n\t\tsuper (target, duration, properties);\n\t\t\n\t\tif (!Reflect.hasField (properties, \"start\")) {\n\t\t\t\n\t\t\tthis.properties.start = new Array <Dynamic> ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!Reflect.hasField (properties, \"end\")) {\n\t\t\t\n\t\t\tthis.properties.end = this.properties.start;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...this.properties.start.length) {\n\t\t\t\n\t\t\tcurrentParameters.push (this.properties.start[i]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function apply ():Void {\n\t\t\n\t\tcallMethod (target, properties.end);\n\t\t\n\t}\n\t\n\t\n\tprivate override function complete (sendEvent:Bool = true):Void {\n\t\t\n\t\tif (initialized) {\n\t\t\t\n\t\t\tfor (i in 0...properties.start.length) {\n\t\t\t\t\n\t\t\t\tcurrentParameters[i] = Reflect.field (tweenProperties, \"param\" + i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcallMethod (target, currentParameters);\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tsuper.complete (sendEvent);\n\t\t\n\t}\n\t\n\t\n\tprivate override function initialize ():Void {\n\t\t\n\t\tvar details:PropertyDetails<T>;\n\t\tvar propertyName:String;\n\t\tvar start:Dynamic;\n\t\t\n\t\tfor (i in 0...properties.start.length) {\n\t\t\t\n\t\t\tpropertyName = \"param\" + i;\n\t\t\tstart = properties.start[i];\n\t\t\t\n\t\t\tReflect.setField (tweenProperties, propertyName, start);\n\t\t\t\n\t\t\tif (Std.is (start, Float) || Std.is (start, Int)) {\n\t\t\t\t\n\t\t\t\tdetails = new PropertyDetails (tweenProperties, propertyName, start, properties.end[i] - start);\n\t\t\t\tpropertyDetails.push (details);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdetailsLength = propertyDetails.length;\n\t\tinitialized = true;\n\t\t\n\t}\n\t\n\t\n\tprivate override function update (currentTime:Float):Void {\n\t\t\n\t\tsuper.update (currentTime);\n\t\t\n\t\tif (active) {\n\t\t\t\n\t\t\tfor (i in 0...properties.start.length) {\n\t\t\t\t\n\t\t\t\tcurrentParameters[i] = Reflect.field (tweenProperties, \"param\" + i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcallMethod (target, currentParameters);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","﻿package motion.actuators;\n\n\nimport motion.MotionPath;\n\n\nclass MotionPathActuator<T> extends SimpleActuator<T, T> {\n\t\n\t\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\n\t\t\n\t\tsuper (target, duration, properties);\n\t\t\n\t}\n\t\n\t\n\tprivate override function apply ():Void {\n\t\t\n\t\tfor (propertyName in Reflect.fields (properties)) {\n\t\t\t\n\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\n\t\t\tif (#if flash false && #end Reflect.hasField (target, propertyName)) {\n\t\t\t\t\n\t\t\t\tReflect.setField (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tReflect.setProperty (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tReflect.setField (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function initialize ():Void {\n\t\t\n\t\tvar details:PropertyPathDetails<T>;\n\t\tvar path:IComponentPath;\n\t\t\n\t\tfor (propertyName in Reflect.fields (properties)) {\n\t\t\t\n\t\t\tpath = cast (Reflect.field (properties, propertyName), IComponentPath);\n\t\t\t\n\t\t\tif (path != null) {\n\t\t\t\t\n\t\t\t\tvar isField = true;\n\t\t\t\t\n\t\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\t\n\t\t\t\tif (#if flash false && #end Reflect.hasField (target, propertyName)) {\n\t\t\t\t\t\n\t\t\t\t\tpath.start = Reflect.field (target, propertyName);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tisField = false;\n\t\t\t\t\tpath.start = Reflect.getProperty (target, propertyName);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tpath.start = Reflect.field (target, propertyName);\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tdetails = new PropertyPathDetails (target, propertyName, path, isField);\n\t\t\t\tpropertyDetails.push (details);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdetailsLength = propertyDetails.length;\n\t\tinitialized = true;\n\t\t\n\t}\n\t\n\t\n\tprivate override function update (currentTime:Float):Void {\n\t\t\n\t\tif (!paused) {\n\t\t\t\n\t\t\tvar details:PropertyPathDetails<T>;\n\t\t\tvar easing:Float;\n\t\t\t\n\t\t\tvar tweenPosition = (currentTime - timeOffset) / duration;\n\t\t\t\n\t\t\tif (tweenPosition > 1) {\n\t\t\t\t\n\t\t\t\ttweenPosition = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!initialized) {\n\t\t\t\t\n\t\t\t\tinitialize ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!special) {\n\t\t\t\t\n\t\t\t\teasing = _ease.calculate (tweenPosition);\n\t\t\t\t\n\t\t\t\tfor (details in propertyDetails) {\n\t\t\t\t\t\n\t\t\t\t\tif (details.isField) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (!_reverse) {\n\t\t\t\t\t\n\t\t\t\t\teasing = _ease.calculate (tweenPosition);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\teasing = _ease.calculate (1 - tweenPosition);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar endValue:Float;\n\t\t\t\t\n\t\t\t\tfor (details in propertyDetails) {\n\t\t\t\t\t\n\t\t\t\t\tif (!_snapping) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (details.isField) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (details.isField) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, Math.round (cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing)));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#if (haxe_209 || haxe3)\n\t\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, Math.round (cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing)));\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (tweenPosition == 1) {\n\t\t\t\t\n\t\t\t\tif (_repeat == 0) {\n\t\t\t\t\t\n\t\t\t\t\tactive = false;\n\t\t\t\t\t\n\t\t\t\t\tif (toggleVisible && getField (target, \"alpha\") == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetField (target, \"visible\", false);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcomplete (true);\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (_onRepeat != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcallMethod (_onRepeat, _onRepeatParams);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (_reflect) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_reverse = !_reverse;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstartTime = currentTime;\n\t\t\t\t\ttimeOffset = startTime + _delay;\n\t\t\t\t\t\n\t\t\t\t\tif (_repeat > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_repeat --;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (sendChange) {\n\t\t\t\t\n\t\t\t\tchange ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !haxe3\nimport com.eclecticdesignstudio.motion.MotionPath;\n#end\n\n\nclass PropertyPathDetails<T> extends PropertyDetails<T> {\n\t\n\t\n\tpublic var path:IComponentPath;\n\t\n\t\n\tpublic function new (target:T, propertyName:String, path:IComponentPath, isField:Bool = true) {\n\t\t\n\t\tsuper (target, propertyName, 0, 0, isField);\n\t\t\n\t\tthis.path = path;\n\t\t\n\t}\n\t\n\t\n}","﻿package motion.actuators;\n\n\nclass PropertyDetails<T> {\n\t\n\t\n\tpublic var change:Float;\n\tpublic var isField:Bool;\n\tpublic var propertyName:String;\n\tpublic var start:Float;\n\tpublic var target:T;\n\t\n\t\n\tpublic function new (target:T, propertyName:String, start:Float, change:Float, isField:Bool = true):Void {\n\t\t\n\t\tthis.target = target;\n\t\tthis.propertyName = propertyName;\n\t\tthis.start = start;\n\t\tthis.change = change;\n\t\tthis.isField = isField;\n\t\t\n\t}\n\t\n\t\n}","/**\n * @author Joshua Granick\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\n\n\npackage motion.easing;\n\t\n\t\nclass Cubic {\n\t\n\t\n\tstatic public var easeIn (get_easeIn, never):IEasing;\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\n\tstatic public var easeOut (get_easeOut, never):IEasing;\n\t\n\t\n\tprivate static function get_easeIn ():IEasing {\n\t\t\n\t\treturn new CubicEaseIn ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_easeInOut ():IEasing {\n\t\t\n\t\treturn new CubicEaseInOut ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_easeOut ():IEasing {\n\t\t\n\t\treturn new CubicEaseOut ();\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass CubicEaseIn implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn k * k * k;\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn c * (t /= d) * t * t + b;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass CubicEaseInOut implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn ((k /= 1 / 2) < 1) ? 0.5 * k * k * k : 0.5 * ((k -= 2) * k * k + 2);\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass CubicEaseOut implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn --k * k * k + 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn c * ((t = t / d - 1) * t * t + 1) + b;\n\t\t\n\t}\n\t\n\t\n}","/**\n * @author Joshua Granick\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\n\n\npackage motion.easing;\n\t\n\t\nclass Linear {\n\t\n\t\n\tstatic public var easeNone (get_easeNone, never):IEasing;\n\t\n\t\n\tprivate static function get_easeNone ():IEasing {\n\t\t\n\t\treturn new LinearEaseNone ();\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass LinearEaseNone implements IEasing {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function calculate (k:Float):Float {\n\t\t\n\t\treturn k;\n\t\t\n\t}\n\t\n\t\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\n\t\t\n\t\treturn c * t / d + b;\n\t\t\n\t}\n\t\n\t\n}","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\n\n/**\n\tA convenience type describing any kind of slot.\n**/\ntypedef AnySlot = Slot<Dynamic, Dynamic>;\n\n/**\n\tDefines the basic properties of a listener associated with a Signal.\n**/\n#if haxe3\nclass Slot<TSignal:msignal.Signal.AnySignal, TListener>\n#else\nclass Slot<TSignal:Signal<Dynamic, TListener>, TListener>\n#end\n{\n\t/**\n\t\tThe listener associated with this slot.\n\t\tNote: for hxcpp 2.10 this requires a getter method to compile\n\t**/\n\t#if cpp\n\t#if haxe3 @:isVar #end\n\tpublic var listener(get_listener, set_listener):TListener;\n\t#else\n\t#if haxe3 @:isVar #end\n\tpublic var listener(default, set_listener):TListener;\n\t#end\n\t\n\n\t/**\n\t\tWhether this slot is automatically removed after it has been used once.\n\t**/\n\tpublic var once(default, null):Bool;\n\n\t/**\n\t\tThe priority of this slot should be given in the execution order.\n\t\tAn Signal will call higher numbers before lower ones.\n\t\tDefaults to 0.\n\t**/\n\tpublic var priority(default, null):Int;\n\n\t/**\n\t\tWhether the listener is called on execution. Defaults to true.\n\t**/\n\tpublic var enabled:Bool;\n\n\tvar signal:TSignal;\n\t\n\tfunction new(signal:TSignal, listener:TListener, once:Bool=false, priority:Int=0)\n\t{\n\t\tthis.signal = signal;\n\t\tthis.listener = listener;\n\t\tthis.once = once;\n\t\tthis.priority = priority;\n\t\tthis.enabled = true;\n\t}\n\n\t/**\n\t\tRemoves the slot from its signal.\n\t**/\n\tpublic function remove()\n\t{\n\t\tsignal.remove(listener);\n\t}\n\n\t#if cpp\n\t/**\n\t\tHxcpp 2.10 requires a getter method for a typed function property in \n\t\torder to compile\n\t**/\n\tfunction get_listener():TListener\n\t{\n\t\treturn listener;\n\t}\n\t#end\n\n\tfunction set_listener(value:TListener):TListener\n\t{\n\t\tif (value == null) throw \"listener cannot be null\";\n\t\treturn listener = value;\n\t}\n}\n\n/**\n\tA slot that executes a listener with no arguments.\n**/\nclass Slot0 extends Slot<Signal0, Void -> Void>\n{\n\tpublic function new(signal:Signal0, listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with no arguments.\n\t**/\n\tpublic function execute()\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tlistener();\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass Slot1<TValue> extends Slot<Signal1<TValue>, TValue -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the argument to dispatch.\n\t**/\n\tpublic var param:TValue;\n\n\tpublic function new(signal:Signal1<TValue>, listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf <code>param</code> is not null, it overrides the value provided.\n\t**/\n\tpublic function execute(value1:TValue)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tif (param != null) value1 = param;\n\t\tlistener(value1);\n\t}\n}\n\n/**\n\tA slot that executes a listener with two arguments.\n**/\nclass Slot2<TValue1, TValue2> extends Slot<Signal2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the first argument to dispatch.\n\t**/\n\tpublic var param1:TValue1;\n\n\t/**\n\t\tAllows the slot to inject the second argument to dispatch.\n\t**/\n\tpublic var param2:TValue2;\n\n\tpublic function new(signal:Signal2<TValue1, TValue2>, listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with two arguments.\n\t\tIf <code>param1</code> or <code>param2</code> is set, \n\t\tthey override the values provided.\n\t**/\n\tpublic function execute(value1:TValue1, value2:TValue2)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\t\n\t\tif (param1 != null) value1 = param1;\n\t\tif (param2 != null) value2 = param2;\n\t\t\n\t\tlistener(value1, value2);\n\t}\n}\n","package pixi.resources;\n\nimport haxe.Timer;\nimport howler.Howl;\nimport arm.pixidemo.resources.Sounds;\nimport pixi.geom.Rectangle;\nimport pixi.textures.Texture;\nimport pixi.loaders.ImageLoader;\nimport pixi.loaders.SpriteSheetLoader;\nimport msignal.Signal;\nimport pixi.loaders.JsonLoader;\nimport pixi.loaders.AssetLoader;\n\nclass Loader {\n\n\tpublic static var BASE_URL:String = \"\";\n\tpublic static var BUCKET_URL:String = \"\";\n\tpublic static var SCALE_URL:String = \"\";\n\n\tpublic static var assetLoadComplete:Signal0 = new Signal0();\n\tpublic static var assetsPackLoadComplete:Signal0 = new Signal0();\n\tpublic static var assetsProgress:Signal0 = new Signal0();\n\tpublic static var soundLoadComplete:Signal0 = new Signal0();\n\tpublic static var jsonLoadComplete:Signal1<String> = new Signal1(String);\n\tpublic static var spriteSheetLoadComplete:Signal0 = new Signal0();\n\n\tstatic var _sounds:Array<Object<String>>;\n\tstatic var _soundCount:Int;\n\n\tpublic static function loadAsset(url:String) {\n\t\tvar assetLoader:AssetLoader = new AssetLoader([Loader.BASE_URL + url]);\n\t\tassetLoader.onComplete = function() { assetLoadComplete.dispatch(); };\n\t\tassetLoader.load();\n\t}\n\n\tpublic static function loadAssetsPack(urls:Array<String>) {\n\t\tvar assetLoader:AssetLoader = new AssetLoader(urls);\n\t\tassetLoader.onComplete = function() {\n\t\t\thaxe.Timer.delay(function() { assetsPackLoadComplete.dispatch(); }, 20);\n\t\t};\n\t\tassetLoader.onProgress = function(loader:AssetLoader) {\n\t\t\thaxe.Timer.delay(function() { assetsProgress.dispatch(); }, 20);\n\t\t};\n\t\tassetLoader.load();\n\t}\n\n\tpublic static function loadSpriteSheetsPack(urls:Array<String>) {\n\t\tfor (url in urls) loadSpriteSheet(url);\n\t}\n\n\tpublic static function loadSpriteSheet(url:String) {\n\t\tvar spriteSheetLoader:SpriteSheetLoader = new SpriteSheetLoader(url);\n\t\tspriteSheetLoader.on(\"loaded\", function() {\n\t\t\tvar json:MultipackSpriteSheet = spriteSheetLoader.json;\n\t\t\tif (json.multipack) {\n\t\t\t\tvar textures:Array<MultipackTexture> = json.textures;\n\t\t\t\tvar imgCount:Int = textures.length;\n\t\t\t\tvar imgLoadedCount:Int = 0;\n\t\t\t\tfor (texture in textures) {\n\t\t\t\t\tvar textureUrl:String = spriteSheetLoader.baseUrl + texture.meta.image;\n\t\t\t\t\tvar image:ImageLoader = new ImageLoader(textureUrl);\n\t\t\t\t\tvar frameData:Array<FrameData> = texture.frames;\n\n\t\t\t\t\timage.addEventListener(\"loaded\", function() {\n\t\t\t\t\t\tif (imgLoadedCount == imgCount - 1) spriteSheetLoadComplete.dispatch();\n\t\t\t\t\t\telse imgLoadedCount++;\n\t\t\t\t\t});\n\t\t\t\t\timage.load();\n\n\t\t\t\t\tfor (n in Reflect.fields(frameData)) {\n\t\t\t\t\t\tvar frameData:FrameData = Reflect.field(frameData, n);\n\t\t\t\t\t\tvar rect = frameData.frame;\n\t\t\t\t\t\tif (rect != null) {\n\t\t\t\t\t\t\tvar textureSize:Rectangle = new Rectangle(rect.x, rect.y, rect.w, rect.h);\n\t\t\t\t\t\t\tvar crop:Rectangle = textureSize.clone();\n\t\t\t\t\t\t\tvar trim:Rectangle = null;\n\n\t\t\t\t\t\t\tif (frameData.trimmed) {\n\t\t\t\t\t\t\t\tvar actualSize = frameData.sourceSize;\n\t\t\t\t\t\t\t\tvar realSize = frameData.spriteSourceSize;\n\t\t\t\t\t\t\t\ttrim = new Rectangle(realSize.x, realSize.y, actualSize.w, actualSize.h);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar txt:Texture = new Texture(image.texture.baseTexture, textureSize, crop, trim);\n\t\t\t\t\t\t\tTexture.addTextureToCache(txt, n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tspriteSheetLoadComplete.dispatch();\n\t\t\t}\n\t\t});\n\t\tspriteSheetLoader.load();\n\t}\n\n\tpublic static function loadJson(url:String, ?bucket:Bool = false, ?scale:Bool = false) {\n\t\tvar fullURL:String = Loader.BASE_URL + url;\n\t\tif (bucket) fullURL = Loader.BUCKET_URL + url;\n\t\tif (scale) fullURL = Loader.SCALE_URL + url;\n\t\tvar jsonLoader:JsonLoader = new JsonLoader(fullURL);\n\t\tjsonLoader.on(\"loaded\", function() { jsonLoadComplete.dispatch(jsonLoader.json); });\n\t\tjsonLoader.load();\n\t}\n\n\tpublic static function loadSoundsPack(sounds:Array<Object<String>>) {\n\t\tfor (soundObj in sounds) {\n\t\t\tvar options:HowlOptions = {};\n\t\t\toptions.urls = [soundObj.get(\"url\")];\n\t\t\toptions.autoplay = false;\n\t\t\toptions.onload = function() {\n\t\t\t\tsoundLoadComplete.dispatch();\n\t\t\t};\n\t\t\tReflect.setField(Sounds, soundObj.get(\"id\"), new Howl(options));\n\t\t}\n\t}\n}\n\ntypedef MultipackSpriteSheet = {\n\tvar multipack:Bool;\n\tvar textures:Array<MultipackTexture>;\n}\n\ntypedef MultipackTexture = {\n\tvar frames:Array<FrameData>;\n\tvar meta:MetaData;\n}\n\ntypedef FrameData = {\n\tvar frame:Frame;\n\tvar rotated:Bool;\n\tvar trimmed:Bool;\n\tvar format:String;\n\tvar spriteSourceSize:SpriteSourceSize;\n\tvar sourceSize:SourceSize;\n}\n\ntypedef Frame = {\n\tvar x:Float;\n\tvar y:Float;\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef SpriteSourceSize = {\n\tvar x:Float;\n\tvar y:Float;\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef SourceSize = {\n\tvar w:Float;\n\tvar h:Float;\n}\n\ntypedef MetaData = {\n\tvar app:String;\n\tvar version:String;\n\tvar image:String;\n\tvar format:String;\n\tvar size:String;\n\tvar scale:String;\n\tvar smartupdate:String;\n}","package pixi.widgets;\n\nimport pixi.text.Text;\nimport pixi.primitives.Graphics;\nimport pixi.geom.Rectangle;\nimport msignal.Signal.Signal1;\nimport pixi.display.DisplayObjectContainer;\n\nclass Button extends DisplayObjectContainer {\n\n\tpublic static inline var OVER_COLOUR:Int = 0x003366;\n\tpublic static inline var OUT_COLOUR:Int = 0x21610B;\n\tpublic static inline var TEXT_COLOUR:String = \"#FFFFFF\";\n\tpublic static inline var FONT_SIZE:Int = 16;\n\n\tvar _data:Dynamic;\n\n\tvar _label:Text;\n\tvar _rect:Rectangle;\n\tvar _background:Graphics;\n\n\tvar _enabled:Bool;\n\n\tpublic var action:Signal1<Dynamic>;\n\n\tpublic function new(label:String, width:Float, height:Float, ?data:Dynamic, ?fontSize:Int) {\n\t\tsuper();\n\t\taction = new Signal1(Dynamic);\n\t\t_data = data;\n\t\t_setupBackground(width, height);\n\t\t_setupLabel(width, height, fontSize);\n\t\tsetText(label);\n\t}\n\n\tfunction _setupBackground(width:Float, height:Float) {\n\t\t_rect = new Rectangle(0, 0, width, height);\n\t\t_background = new Graphics();\n\t\t_background.hitArea = _rect;\n\t\t_redraw(Button.OUT_COLOUR);\n\t\taddChild(_background);\n\n\t\t_background.interactive = true;\n\t\t_background.mouseover = _onMouseOver;\n\t\t_background.mouseout = _onMouseOut;\n\t\t_background.mousedown = _onMouseDown;\n\t\t_background.mouseup = _onMouseUp;\n\t\t_background.mouseupoutside = _onMouseUpOutside;\n\t\t_background.touchstart = _onTouchStart;\n\t\t_background.touchend = _onTouchEnd;\n\t\t_background.touchendoutside = _onTouchEndOutside;\n\t}\n\n\tfunction _setupLabel(width:Float, height:Float, fontSize:Int) {\n\t\tvar size:Int = (fontSize != null) ? fontSize : Button.FONT_SIZE;\n\t\tvar style:TextStyle = {};\n\t\tstyle.font = (size) + \"px Arial\";\n\t\tstyle.fill = Button.TEXT_COLOUR;\n\t\t_label = new Text(\"\", style);\n\t\t_label.anchor.set(0.5, 0.5);\n\t\t_label.x = width / 2;\n\t\t_label.y = height / 2;\n\t\taddChild(_label);\n\t}\n\n\tfunction _redraw(colour:Int) {\n\t\tvar border:Float = 1;\n\t\t_background.clear();\n\t\t_background.beginFill(0x003366);\n\t\t_background.drawRect(_rect.x, _rect.y, _rect.width, _rect.height);\n\t\t_background.endFill();\n\t\t_background.beginFill(colour);\n\t\t_background.drawRect(_rect.x + border / 2, _rect.y + border / 2, _rect.width - border, _rect.height - border);\n\t\t_background.endFill();\n\t}\n\n\tpublic function setText(label:String) {\n\t\t_label.setText(label);\n\t}\n\n\tfunction _onMouseDown(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OVER_COLOUR);\n\t}\n\n\tfunction _onMouseUp(data:InteractionData) {\n\t\tif (_enabled) {\n\t\t\taction.dispatch(_data);\n\t\t\t_redraw(Button.OUT_COLOUR);\n\t\t}\n\t}\n\n\tfunction _onMouseUpOutside(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OUT_COLOUR);\n\t}\n\n\tfunction _onMouseOver(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OVER_COLOUR);\n\t}\n\n\tfunction _onMouseOut(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OUT_COLOUR);\n\t}\n\n\tfunction _onTouchEndOutside(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OUT_COLOUR);\n\t}\n\n\tfunction _onTouchEnd(data:InteractionData) {\n\t\tif (_enabled) {\n\t\t\t_redraw(Button.OUT_COLOUR);\n\t\t\taction.dispatch(_data);\n\t\t}\n\t}\n\n\tfunction _onTouchStart(data:InteractionData) {\n\t\tif (_enabled) _redraw(Button.OVER_COLOUR);\n\t}\n\n\tpublic function enable() {\n\t\t_enabled = true;\n\t}\n\n\tpublic function disable() {\n\t\t_redraw(Button.OUT_COLOUR);\n\t\t_enabled = false;\n\t}\n}","package pixi.widgets;\n\nimport pixi.text.Text;\nimport pixi.primitives.Graphics;\nimport pixi.geom.Rectangle;\nimport pixi.display.DisplayObjectContainer;\n\nclass Label extends DisplayObjectContainer {\n\n\tpublic static inline var BACKGROUND_COLOUR:Int = 0xFFFFFF;\n\tpublic static inline var BORDER_COLOUR:Int = 0x333333;\n\tpublic static inline var TEXT_COLOUR:String = \"#333333\";\n\tpublic static inline var TEXT_SIZE:Int = 16;\n\tpublic static inline var PADDING:Int = 4;\n\n\tvar _label:Text;\n\tvar _rect:Rectangle;\n\tvar _background:Graphics;\n\tvar _style:Dynamic;\n\n\tpublic function new(label:String, width:Float, height:Float, ?style:Dynamic) {\n\t\tsuper();\n\t\t_style = (style != null) ? style : { font: (Label.TEXT_SIZE) + \"px Arial\", fill: Label.TEXT_COLOUR, align:\"center\" };\n\t\t_setupBackground(width, height);\n\t\t_setupLabel(width, height);\n\t\tsetText(label);\n\t}\n\n\tfunction _setupBackground(width:Float, height:Float) {\n\t\t_rect = new Rectangle(0, 0, width, height);\n\t\t_background = new Graphics();\n\n\t\t_background.beginFill(Label.BORDER_COLOUR);\n\t\t_background.drawRect(_rect.x, _rect.y, _rect.width, _rect.height);\n\t\t_background.endFill();\n\n\t\t_background.beginFill(Label.BACKGROUND_COLOUR);\n\t\t_background.drawRect(_rect.x + 1, _rect.y + 1, _rect.width - 2, _rect.height - 2);\n\t\t_background.endFill();\n\n\t\taddChild(_background);\n\t}\n\n\tfunction _setupLabel(width:Float, height:Float) {\n\t\t_label = new Text(\"\", _style);\n\t\t_label.anchor.x = 0.5;\n\t\t_label.x = width / 2;\n\t\t_label.y = Label.PADDING;\n\t\taddChild(_label);\n\t}\n\n\tpublic function setText(label:String) {\n\t\t_label.setText(label);\n\t}\n}","package pixi.widgets.menu;\n\nimport arm.pixidemo.view.StageProperties;\nimport pixi.display.DisplayObjectContainer;\nimport haxe.Timer;\n\nclass Menu extends DisplayObjectContainer {\n\n\tvar _itemWidth:Float;\n\tvar _itemHeight:Float;\n\tvar _menuItems:Array<MenuItem>;\n\tvar _lastPosition:Float;\n\tvar _dragging:Bool;\n\tvar _height:Float;\n\n\tpublic function new(itemWidth:Float, itemHeight:Float) {\n\t\tsuper();\n\n\t\t_itemWidth = itemWidth;\n\t\t_itemHeight = itemHeight;\n\t\t_menuItems = [];\n\t\tinteractive = true;\n\t}\n\n\tpublic function addItem(label:String, ?data:Dynamic):MenuItem {\n\t\tvar menuItem:MenuItem = new MenuItem(label, _itemWidth, _itemHeight, data);\n\t\tmenuItem.y = _itemHeight * _menuItems.length;\n\t\taddChild(menuItem);\n\t\t_menuItems.push(menuItem);\n\t\t_height = _itemHeight * _menuItems.length;\n\n\t\tif (_height > StageProperties.screenHeight) {\n\t\t\ttouchstart = _onTouchStart;\n\t\t\ttouchend = _onTouchEnd;\n\n\t\t\tmousedown = _onMouseDown;\n\t\t\tmouseup = _onMouseUp;\n\t\t}\n\t\treturn menuItem;\n\t}\n\n\tfunction _onTouchStart(data:InteractionData) {\n\t\t_lastPosition = data.getLocalPosition(parent).y;\n\t\ttouchmove = _onTouchMove;\n\t}\n\n\tfunction _onTouchMove(data:InteractionData) {\n\t\tvar point = data.getLocalPosition(parent);\n\t\tvar distance = this._lastPosition - point.y;\n\n\t\tif (_dragging || (distance < -5 || distance > 5)) {\n\t\t\tdisableMenuItems();\n\t\t\t_move(_lastPosition - point.y);\n\t\t\t_dragging = true;\n\t\t\t_lastPosition = point.y;\n\t\t}\n\t}\n\n\tfunction _onTouchEnd(data:InteractionData) {\n\t\ttouchmove = null;\n\t\t_dragging = false;\n\t\tTimer.delay(enableMenuItems, 100);\n\t}\n\n\tfunction _onMouseDown(data:InteractionData) {\n\t\t_lastPosition = data.getLocalPosition(parent).y;\n\t\tmousemove = _onMouseMove;\n\t}\n\n\tfunction _onMouseUp(data:InteractionData) {\n\t\tmousemove = null;\n\t\t_dragging = false;\n\t\tenableMenuItems();\n\t}\n\n\tfunction _onMouseMove(data:InteractionData) {\n\t\tvar point = data.getLocalPosition(parent);\n\t\tvar distance = _lastPosition - point.y;\n\n\t\tif (_dragging || (distance < -5 || distance > 5)) {\n\t\t\tdisableMenuItems();\n\t\t\t_move(_lastPosition - point.y);\n\t\t\t_dragging = true;\n\t\t\t_lastPosition = point.y;\n\t\t}\n\t}\n\n\tpublic function disableMenuItems() {\n\t\tfor (i in 0 ... _menuItems.length) _menuItems[i].disable();\n\t}\n\n\tpublic function enableMenuItems() {\n\t\tfor (i in 0 ... _menuItems.length) _menuItems[i].enable();\n\t}\n\n\tfunction _move(distance:Float) {\n\t\ty -= distance;\n\n\t\tif (y > 0) y = 0;\n\t\telse if (y < -(_height - StageProperties.screenHeight)) {\n\t\t\ty = -(_height - StageProperties.screenHeight);\n\t\t}\n\n\t\tx = Math.round(x);\n\t\ty = Math.round(y);\n\t}\n\n\tpublic function getItems():Array<MenuItem> {\n\t\treturn _menuItems;\n\t}\n}","package pixi.widgets.menu;\n\nimport msignal.Signal;\nimport pixi.display.DisplayObjectContainer;\nimport pixi.widgets.Button;\n\nclass MenuItem extends DisplayObjectContainer {\n\n\tvar _data:Dynamic;\n\tvar _button:Button;\n\n\tpublic var action:Signal1<Dynamic>;\n\n\tpublic function new(label:String, width:Float, height:Float, ?data:Dynamic) {\n\t\tsuper();\n\t\t_button = new Button(label, width, height, data);\n\t\taction = _button.action;\n\t\taddChild(_button);\n\t}\n\n\tpublic function setText(label:String) {\n\t\t_button.setText(label);\n\t}\n\n\tpublic function enable() {\n\t\t_button.enable();\n\t}\n\n\tpublic function disable() {\n\t\t_button.disable();\n\t}\n}","package pixi.widgets.menu;\n\nimport motion.easing.Cubic;\nimport motion.Actuate;\nimport pixi.primitives.Graphics;\nimport pixi.geom.Rectangle;\nimport arm.pixidemo.view.StageProperties;\nimport pixi.display.DisplayObjectContainer;\n\nclass PopoutMenu extends DisplayObjectContainer {\n\n\tpublic static inline var STATE_SHOW:String = \"STATE_SHOW\";\n\tpublic static inline var STATE_HIDE:String = \"STATE_HIDE\";\n\n\tvar _container:DisplayObjectContainer;\n\tvar _itemWidth:Float;\n\tvar _itemHeight:Float;\n\tvar _state:String;\n\tvar _menu:Menu;\n\tvar _openButton:Graphics;\n\n\tpublic function new(itemWidth:Float, itemHeight:Float) {\n\t\tsuper();\n\n\t\t_container = new DisplayObjectContainer();\n\t\t_itemWidth = itemWidth;\n\t\t_itemHeight = itemHeight;\n\t\t_state = PopoutMenu.STATE_HIDE;\n\n\t\t_setupOpenButton();\n\t\t_setupMenu(itemWidth, itemHeight);\n\n\t\taddChild(_container);\n\t}\n\n\tfunction _setupOpenButton() {\n\t\tvar buttonRect = new Rectangle(0, 0, 15, 60);\n\t\tvar hitRect = new Rectangle(0, 0, 15, 60);\n\n\t\t_openButton = new Graphics();\n\t\t_openButton.beginFill(0x21610B);\n\t\t_openButton.drawRect(buttonRect.x, buttonRect.y, buttonRect.width, buttonRect.height);\n\t\t_openButton.endFill();\n\t\t_openButton.hitArea = hitRect;\n\t\t_openButton.interactive = true;\n\t\t_openButton.touchstart = function(data:InteractionData) {};\n\t\t_openButton.touchend = _toggleShow;\n\t\t_openButton.mouseup = _toggleShow;\n\t\t_container.addChild(_openButton);\n\t}\n\n\tfunction _setupMenu(itemWidth:Float, itemHeight:Float) {\n\t\t_menu = new Menu(itemWidth, itemHeight);\n\t\t_menu.x = -itemWidth;\n\t\t_container.addChild(_menu);\n\t}\n\n\tfunction _toggleShow(data:InteractionData) {\n\t\tif (_state == PopoutMenu.STATE_SHOW) hide();\n\t\telse show();\n\t}\n\n\tpublic function show() {\n\t\t_state = PopoutMenu.STATE_SHOW;\n\t\tActuate.tween(_container, 0.3, { x: _itemWidth }).ease(Cubic.easeInOut).onComplete(_enableMenuItems);\n\t}\n\n\tpublic function hide() {\n\t\t_state = PopoutMenu.STATE_HIDE;\n\t\tActuate.tween(_container, 0.3, { x: 0 }).ease(Cubic.easeInOut).onComplete(_disableMenuItems);\n\t}\n\n\tpublic function addItem(label:String, ?data:Dynamic):MenuItem {\n\t\tvar menuItem:MenuItem = _menu.addItem(label, data);\n\t\t_updateOpenButtonPosition();\n\t\treturn menuItem;\n\t}\n\n\tfunction _enableMenuItems() {\n\t\t_menu.enableMenuItems();\n\t}\n\n\tfunction _disableMenuItems() {\n\t\t_menu.disableMenuItems();\n\t}\n\n\tfunction _updateOpenButtonPosition() {\n\t\tvar openButtonPosition = Math.floor((_menu.getItems().length - 1) / 2) * _itemHeight;\n\n\t\tif (openButtonPosition > StageProperties.screenHeight / 2) {\n\t\t\topenButtonPosition = StageProperties.screenHeight / 2;\n\t\t}\n\t\t_openButton.y = openButtonPosition;\n\t}\n\n\tpublic function resize() {\n\t\tx = (StageProperties.bucketWidth - StageProperties.screenWidth) / 2;\n\t\ty = (StageProperties.bucketHeight - StageProperties.screenHeight) / 2;\n\t\t_updateOpenButtonPosition();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class defines mathematical functions and constants.\n**/\n#if cpp @:include(\"hxMath\") #end\nextern class Math\n{\n\t/**\n\t\tRepresents the ratio of the circumference of a circle to its diameter, \n\t\tspecified by the constant, π. `PI` is approximately 3.141592653589793.\n\t**/\n\tstatic var PI(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of -1.0 / 0.0.\n\n\t\tOperations with NEGATIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var NEGATIVE_INFINITY(default, null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of 1.0 / 0.0.\n\n\t\tOperations with POSITIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var POSITIVE_INFINITY(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes an invalid number.\n\n\t\tNaN stands for \"Not a Number\". It occurs when a mathematically incorrect\n\t\toperation is executed, such as taking the square root of a negative\n\t\tnumber: Math.sqrt(-1).\n\n\t\tAll further operations with NaN as an operand will result in NaN.\n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\n\t\tIn order to test if a value is NaN, you should use Math.isNaN() function.\n\n\t\t@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected\n\t\tresults when performing arithmetic operations with NaN on Windows, \n\t\tsee [https://bugs.php.net/bug.php?id=42143]\n\t**/\n\tstatic var NaN(default, null) : Float;\n\n\t/**\n\t\tReturns the absolute value of `v`.\n\n\t\tIf `v` is positive or 0, the result is unchanged. Otherwise the result \n\t\tis -`v`.\n\t\t\n\t\tIf `v` is NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is \n\t\tPOSITIVE_INFINITY.\n\t\t\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function abs(v:Float):Float;\n\n\t/**\n\t\tReturns the smaller of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t\tIf `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t**/\n\tstatic function min(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the greater of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function max(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric sine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function sin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric cosine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function cos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric tangent of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function tan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function asin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc cosine of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function acos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function atan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent whose tangent is the quotient of \n\t\ttwo specified numbers, in radians.\n\t\t\n\t\tIf parameter `x` or `y`  is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is NaN.\n\t**/\n\tstatic function atan2(y:Float, x:Float):Float;\n\n\t/**\n\t\tReturns Euler's number, raised to the power of `v`.\n\t\t\n\t\texp(1.0) is approximately 2.718281828459.\n\t\t\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is NEGATIVE_INFINITY, the result is 0.0.\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function exp(v:Float):Float;\n\n\t/**\n\t\tReturns the natural logarithm of `v`.\n\t\t\n\t\tThis is the mathematical inverse operation of exp, \n\t\ti.e. `log(exp(v)) == v` always holds.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function log(v:Float):Float;\n\n\t/**\n\t\tReturns a specified base `v` raised to the specified power `exp`.\n\t**/\n\tstatic function pow(v:Float, exp:Float):Float;\n\n\t/**\n\t\tReturns the square root of `v`.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is 0.0.\n\t**/\n\tstatic function sqrt(v:Float):Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value.\n\t\t\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function round(v:Float):Int;\n\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function floor(v:Float):Int;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function ceil(v:Float):Int;\n\n\t/**\n\t\tReturns a pseudo-random number which is greater than or equal to 0.0, \n\t\tand less than 1.0.\n\t**/\n\tstatic function random() : Float;\n\n\t#if ((flash9 && !as3) || cpp)\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function ffloor( v : Float ) : Float;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fceil( v : Float ) : Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fround( v : Float ) : Float;\n\n\t#else\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t#end\n\n\n\t/**\n\t\tTells if `f` is a finite number.\n\n\t\tIf `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result \n\t\tis false, otherwise the result is true.\n\t**/\n\tstatic function isFinite( f : Float ) : Bool;\n\n\t/**\n\t\tTells if `f` is not a valid number.\n\n\t\tIf `f` is NaN, the result is true, otherwise the result is false. \n\t\tIn particular, both POSITIVE_INFINITY and NEGATIVE_INFINITY are\n\t\tnot considered NaN.\n\t**/\n\tstatic function isNaN( f : Float ) : Bool;\n\n\tprivate static function __init__() : Void untyped {\n\t#if flash9\n\t\tNaN = __global__[\"Number\"].NaN;\n\t\tNEGATIVE_INFINITY = __global__[\"Number\"].NEGATIVE_INFINITY;\n\t\tPOSITIVE_INFINITY = __global__[\"Number\"].POSITIVE_INFINITY;\n\t#else\n\t\t#if !js // genjs.ml will insert this only if necessary.\n\t\t\tMath.__name__ = [\"Math\"];\n\t\t#end\n\t\tMath.NaN = Number[\"NaN\"];\n\t\tMath.NEGATIVE_INFINITY = Number[\"NEGATIVE_INFINITY\"];\n\t\tMath.POSITIVE_INFINITY = Number[\"POSITIVE_INFINITY\"];\n\t#end\n\t#if js\n\t\t__feature__(\"Type.resolveClass\",$hxClasses['Math'] = Math);\n\t#end\n\t\tMath.isFinite = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isFinite\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isFinite\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isFinite\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t\tMath.isNaN = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isNaN\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isNaN\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isNaN\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t}\n\n}\n\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum XmlType {\n}\n\n@:coreApi class Xml {\n\n\tpublic static var Element(default,null) : XmlType;\n\tpublic static var PCData(default,null) : XmlType;\n\tpublic static var CData(default,null) : XmlType;\n\tpublic static var Comment(default,null) : XmlType;\n\tpublic static var DocType(default,null) : XmlType;\n\tpublic static var ProcessingInstruction(default,null) : XmlType;\n\tpublic static var Document(default,null) : XmlType;\n\n\tpublic var nodeType(default,null) : XmlType;\n\tpublic var nodeName(get,set) : String;\n\tpublic var nodeValue(get,set) : String;\n\tpublic var parent(get,null) : Xml;\n\n\tvar _nodeName : String;\n\tvar _nodeValue : String;\n\tvar _attributes : haxe.ds.StringMap<String>;\n\tvar _children : Array<Xml>;\n\tvar _parent : Xml;\n\n\tpublic static function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\tprivate function new() : Void {\n\t}\n\n\tpublic static function createElement( name : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Element;\n\t\tr._children = new Array();\n\t\tr._attributes = new haxe.ds.StringMap();\n\t\tr.set_nodeName( name );\n\t\treturn r;\n\t}\n\n\tpublic static function createPCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.PCData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.CData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createComment( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Comment;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocType( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.DocType;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createProcessingInstruction( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.ProcessingInstruction;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocument() : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Document;\n\t\tr._children = new Array();\n\t\treturn r;\n\t}\n\n\tprivate function get_nodeName() : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName;\n\t}\n\n\tprivate function set_nodeName( n : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName = n;\n\t}\n\n\tprivate function get_nodeValue() : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue;\n\t}\n\n\tprivate function set_nodeValue( v : String ) : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue = v;\n\t}\n\n\tprivate function get_parent() : Xml {\n\t\treturn _parent;\n\t}\n\n\tpublic function get( att : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.get( att );\n\t}\n\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.set( att, value );\n\t}\n\n\tpublic function remove( att : String ) : Void{\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.remove( att );\n\t}\n\n\tpublic function exists( att : String ) : Bool {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.exists( att );\n\t}\n\n\tpublic function attributes() : Iterator<String> {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.keys();\n\t}\n\n\tpublic function iterator() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function(){\n\t\t\t\treturn __this__.cur < __this__.x.length;\n\t\t\t},\n\t\t\tnext : function(){\n\t\t\t\treturn __this__.x[__this__.cur++];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elements() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tif( __this__.x[k].nodeType == Xml.Element )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk += 1;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk += 1;\n\t\t\t\t\tif( n.nodeType == Xml.Element ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk++;\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function firstChild() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn _children[0];\n\t}\n\n\tpublic function firstElement() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar cur = 0;\n\t\tvar l = _children.length;\n\t\twhile( cur < l ) {\n\t\t\tvar n = _children[cur];\n\t\t\tif( n.nodeType == Xml.Element )\n\t\t\t\treturn n;\n\t\t\tcur++;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic function addChild( x : Xml ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.push( x );\n\t}\n\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar b = _children.remove( x );\n\t\tif( b )\n\t\t\tx._parent = null;\n\t\treturn b;\n\t}\n\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.insert( pos, x );\n\t}\n\n\tpublic function toString() : String {\n\t\tif( nodeType == Xml.PCData )\n\t\t\treturn StringTools.htmlEscape(_nodeValue);\n\t\tif( nodeType == Xml.CData )\n\t\t\treturn \"<![CDATA[\"+_nodeValue+\"]]>\";\n\t\tif( nodeType == Xml.Comment )\n\t\t\treturn \"<!--\"+_nodeValue+\"-->\";\n\t\tif( nodeType == Xml.DocType )\n\t\t\treturn \"<!DOCTYPE \"+_nodeValue+\">\";\n\t\tif( nodeType == Xml.ProcessingInstruction )\n\t\t\treturn \"<?\"+_nodeValue+\"?>\";\n\t\tvar s = new StringBuf();\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"<\");\n\t\t\ts.add(_nodeName);\n\t\t\tfor( k in _attributes.keys() ){\n\t\t\t\ts.add(\" \");\n\t\t\t\ts.add(k);\n\t\t\t\ts.add(\"=\\\"\");\n\t\t\t\ts.add(_attributes.get(k));\n\t\t\t\ts.add(\"\\\"\");\n\t\t\t}\n\t\t\tif( _children.length == 0 ) {\n\t\t\t\ts.add(\"/>\");\n\t\t\t\treturn s.toString();\n\t\t\t}\n\t\t\ts.add(\">\");\n\t\t}\n\n\t\tfor( x in iterator() )\n\t\t\ts.add(x.toString());\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"</\");\n\t\t\ts.add(_nodeName);\n\t\t\ts.add(\">\");\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\tXml.Element = \"element\";\n\t\tXml.PCData = \"pcdata\";\n\t\tXml.CData = \"cdata\";\n\t\tXml.Comment = \"comment\";\n\t\tXml.DocType = \"doctype\";\n\t\tXml.ProcessingInstruction = \"processingInstruction\";\n\t\tXml.Document = \"document\";\n\t}\n\n}\n","package arm.mvc.notifications;\n\nimport msignal.Signal;\n\nclass ViewStateNotification {\n\n\tpublic static var preloader:Signal0 = new Signal0();\n\tpublic static var preloaderProgress:Signal0 = new Signal0();\n\tpublic static var preload:Signal0 = new Signal0();\n\tpublic static var create:Signal0 = new Signal0();\n\tpublic static var update:Signal1<Float> = new Signal1(Float);\n\tpublic static var destroy:Signal0 = new Signal0();\n    public static var resize:Signal0 = new Signal0();\n\n    public static function reset():Void {\n        preloader.removeAll();\n        preloaderProgress.removeAll();\n        preload.removeAll();\n        create.removeAll();\n        update.removeAll();\n        destroy.removeAll();\n        resize.removeAll();\n    }\n}","package arm.pixidemo.notifications.internal;\n\nimport msignal.Signal;\n\nclass MenuNotification {\n\n\tpublic static var click:Signal1<Int> = new Signal1(Int);\n\tpublic static var reset:Signal0 = new Signal0();\n\n}"],
"names":[],
"mappings":"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"
}