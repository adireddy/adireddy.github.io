{
    "project": {
        "name": "haxe-pixi",
        "description": "Haxe Pixi Externs",
        "version": "2.2.1",
        "url": "https://github.com/adireddy/haxe-pixi"
    },
    "files": {
        "pixi/display/CoreDisplayObject.hx": {
            "name": "pixi/display/CoreDisplayObject.hx",
            "modules": {},
            "classes": {
                "DisplayObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/CoreDisplayObjectContainer.hx": {
            "name": "pixi/display/CoreDisplayObjectContainer.hx",
            "modules": {},
            "classes": {
                "DisplayObjectContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/DisplayObjectContainer.hx": {
            "name": "pixi/display/DisplayObjectContainer.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/MovieClip.hx": {
            "name": "pixi/display/MovieClip.hx",
            "modules": {},
            "classes": {
                "MovieClip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/Sprite.hx": {
            "name": "pixi/display/Sprite.hx",
            "modules": {},
            "classes": {
                "Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/SpriteBatch.hx": {
            "name": "pixi/display/SpriteBatch.hx",
            "modules": {},
            "classes": {
                "SpriteBatch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/display/Stage.hx": {
            "name": "pixi/display/Stage.hx",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/extras/Rope.hx": {
            "name": "pixi/extras/Rope.hx",
            "modules": {},
            "classes": {
                "Rope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/extras/Strip.hx": {
            "name": "pixi/extras/Strip.hx",
            "modules": {},
            "classes": {
                "Strip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/extras/TilingSprite.hx": {
            "name": "pixi/extras/TilingSprite.hx",
            "modules": {},
            "classes": {
                "TilingSprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/AbstractFilter.hx": {
            "name": "pixi/filters/AbstractFilter.hx",
            "modules": {},
            "classes": {
                "AbstractFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/AlphaMaskFilter.hx": {
            "name": "pixi/filters/AlphaMaskFilter.hx",
            "modules": {},
            "classes": {
                "AlphaMaskFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/AsciiFilter.hx": {
            "name": "pixi/filters/AsciiFilter.hx",
            "modules": {},
            "classes": {
                "AsciiFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/BlurFilter.hx": {
            "name": "pixi/filters/BlurFilter.hx",
            "modules": {},
            "classes": {
                "BlurFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/BlurXFilter.hx": {
            "name": "pixi/filters/BlurXFilter.hx",
            "modules": {},
            "classes": {
                "BlurXFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/BlurYFilter.hx": {
            "name": "pixi/filters/BlurYFilter.hx",
            "modules": {},
            "classes": {
                "BlurYFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/ColorMatrixFilter.hx": {
            "name": "pixi/filters/ColorMatrixFilter.hx",
            "modules": {},
            "classes": {
                "ColorMatrixFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/ColorStepFilter.hx": {
            "name": "pixi/filters/ColorStepFilter.hx",
            "modules": {},
            "classes": {
                "ColorStepFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/ConvolutionFilter.hx": {
            "name": "pixi/filters/ConvolutionFilter.hx",
            "modules": {},
            "classes": {
                "ConvolutionFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/CrossHatchFilter.hx": {
            "name": "pixi/filters/CrossHatchFilter.hx",
            "modules": {},
            "classes": {
                "CrossHatchFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/DisplacementFilter.hx": {
            "name": "pixi/filters/DisplacementFilter.hx",
            "modules": {},
            "classes": {
                "DisplacementFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/DotScreenFilter.hx": {
            "name": "pixi/filters/DotScreenFilter.hx",
            "modules": {},
            "classes": {
                "DotScreenFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/FilterBlock.hx": {
            "name": "pixi/filters/FilterBlock.hx",
            "modules": {},
            "classes": {
                "FilterBlock": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/GrayFilter.hx": {
            "name": "pixi/filters/GrayFilter.hx",
            "modules": {},
            "classes": {
                "GrayFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/InvertFilter.hx": {
            "name": "pixi/filters/InvertFilter.hx",
            "modules": {},
            "classes": {
                "InvertFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/NoiseFilter.hx": {
            "name": "pixi/filters/NoiseFilter.hx",
            "modules": {},
            "classes": {
                "NoiseFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/NormalMapFilter.hx": {
            "name": "pixi/filters/NormalMapFilter.hx",
            "modules": {},
            "classes": {
                "NormalMapFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/PixelateFilter.hx": {
            "name": "pixi/filters/PixelateFilter.hx",
            "modules": {},
            "classes": {
                "PixelateFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/RGBSplitFilter.hx": {
            "name": "pixi/filters/RGBSplitFilter.hx",
            "modules": {},
            "classes": {
                "RGBSplitFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/SepiaFilter.hx": {
            "name": "pixi/filters/SepiaFilter.hx",
            "modules": {},
            "classes": {
                "SepiaFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/SmartBlurFilter.hx": {
            "name": "pixi/filters/SmartBlurFilter.hx",
            "modules": {},
            "classes": {
                "SmartBlurFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/TiltShiftFilter.hx": {
            "name": "pixi/filters/TiltShiftFilter.hx",
            "modules": {},
            "classes": {
                "TiltShiftFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/TiltShiftXFilter.hx": {
            "name": "pixi/filters/TiltShiftXFilter.hx",
            "modules": {},
            "classes": {
                "TiltShiftXFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/TiltShiftYFilter.hx": {
            "name": "pixi/filters/TiltShiftYFilter.hx",
            "modules": {},
            "classes": {
                "TiltShiftYFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/filters/TwistFilter.hx": {
            "name": "pixi/filters/TwistFilter.hx",
            "modules": {},
            "classes": {
                "TwistFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Circle.hx": {
            "name": "pixi/geom/Circle.hx",
            "modules": {},
            "classes": {
                "Circle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Ellipse.hx": {
            "name": "pixi/geom/Ellipse.hx",
            "modules": {},
            "classes": {
                "Ellipse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Matrix.hx": {
            "name": "pixi/geom/Matrix.hx",
            "modules": {},
            "classes": {
                "Matrix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Point.hx": {
            "name": "pixi/geom/Point.hx",
            "modules": {},
            "classes": {
                "Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Polygon.hx": {
            "name": "pixi/geom/Polygon.hx",
            "modules": {},
            "classes": {
                "Polygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/Rectangle.hx": {
            "name": "pixi/geom/Rectangle.hx",
            "modules": {},
            "classes": {
                "Rectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/geom/RoundedRectangle.hx": {
            "name": "pixi/geom/RoundedRectangle.hx",
            "modules": {},
            "classes": {
                "RoundedRectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/AssetLoader.hx": {
            "name": "pixi/loaders/AssetLoader.hx",
            "modules": {},
            "classes": {
                "AssetLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/AtlasLoader.hx": {
            "name": "pixi/loaders/AtlasLoader.hx",
            "modules": {},
            "classes": {
                "AtlasLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/BitmapFontLoader.hx": {
            "name": "pixi/loaders/BitmapFontLoader.hx",
            "modules": {},
            "classes": {
                "BitmapFontLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/ImageLoader.hx": {
            "name": "pixi/loaders/ImageLoader.hx",
            "modules": {},
            "classes": {
                "ImageLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/JsonLoader.hx": {
            "name": "pixi/loaders/JsonLoader.hx",
            "modules": {},
            "classes": {
                "JsonLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/SpineLoader.hx": {
            "name": "pixi/loaders/SpineLoader.hx",
            "modules": {},
            "classes": {
                "SpineLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/loaders/SpriteSheetLoader.hx": {
            "name": "pixi/loaders/SpriteSheetLoader.hx",
            "modules": {},
            "classes": {
                "SpriteSheetLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/plugins/particles/cloudkid/AnimatedParticle.hx": {
            "name": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "modules": {},
            "classes": {
                "AnimatedParticle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/plugins/particles/cloudkid/Emitter.hx": {
            "name": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "modules": {},
            "classes": {
                "Emitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/plugins/particles/cloudkid/Particle.hx": {
            "name": "pixi/plugins/particles/cloudkid/Particle.hx",
            "modules": {},
            "classes": {
                "Particle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/plugins/particles/cloudkid/ParticleUtils.hx": {
            "name": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/plugins/particles/cloudkid/PathParticle.hx": {
            "name": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "modules": {},
            "classes": {
                "PathParticle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/primitives/Graphics.hx": {
            "name": "pixi/primitives/Graphics.hx",
            "modules": {},
            "classes": {
                "Graphics": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/canvas/utils/CanvasBuffer.hx": {
            "name": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "modules": {},
            "classes": {
                "CanvasBuffer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/canvas/utils/CanvasMaskManager.hx": {
            "name": "pixi/renderers/canvas/utils/CanvasMaskManager.hx",
            "modules": {},
            "classes": {
                "CanvasMaskManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/canvas/utils/CanvasTinter.hx": {
            "name": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/canvas/CanvasGraphics.hx": {
            "name": "pixi/renderers/canvas/CanvasGraphics.hx",
            "modules": {},
            "classes": {
                "CanvasGraphics": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/canvas/CanvasRenderer.hx": {
            "name": "pixi/renderers/canvas/CanvasRenderer.hx",
            "modules": {},
            "classes": {
                "CanvasRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx": {
            "name": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "modules": {},
            "classes": {
                "ComplexPrimitiveShader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/shaders/PixiFastShader.hx": {
            "name": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "modules": {},
            "classes": {
                "PixiFastShader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/shaders/PixiShader.hx": {
            "name": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "modules": {},
            "classes": {
                "PixiShader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/shaders/PrimitiveShader.hx": {
            "name": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "modules": {},
            "classes": {
                "PrimitiveShader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/shaders/StripShader.hx": {
            "name": "pixi/renderers/webgl/shaders/StripShader.hx",
            "modules": {},
            "classes": {
                "StripShader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/FilterTexture.hx": {
            "name": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "modules": {},
            "classes": {
                "FilterTexture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLBlendModeManager.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLBlendModeManager.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "modules": {},
            "classes": {
                "WebGLFastSpriteBatch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLFilterManager.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "modules": {},
            "classes": {
                "WebGLFilterManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLGraphics.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLGraphics.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLMaskManager.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "modules": {},
            "classes": {
                "WebGLMaskManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLShaderManager.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "modules": {},
            "classes": {
                "WebGLShaderManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "modules": {},
            "classes": {
                "WebGLSpriteBatch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/utils/WebGLStencilManager.hx": {
            "name": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "modules": {},
            "classes": {
                "WebGLStencilManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/renderers/webgl/WebGLRenderer.hx": {
            "name": "pixi/renderers/webgl/WebGLRenderer.hx",
            "modules": {},
            "classes": {
                "WebGLRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/spine/AnimationState.hx": {
            "name": "pixi/spine/AnimationState.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/spine/Spine.hx": {
            "name": "pixi/spine/Spine.hx",
            "modules": {},
            "classes": {
                "Spine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/spine/SpineTextureLoader.hx": {
            "name": "pixi/spine/SpineTextureLoader.hx",
            "modules": {},
            "classes": {
                "SpineTextureLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/text/BitmapText.hx": {
            "name": "pixi/text/BitmapText.hx",
            "modules": {},
            "classes": {
                "BitmapText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/text/Text.hx": {
            "name": "pixi/text/Text.hx",
            "modules": {},
            "classes": {
                "Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/textures/BaseTexture.hx": {
            "name": "pixi/textures/BaseTexture.hx",
            "modules": {},
            "classes": {
                "BaseTexture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/textures/RenderTexture.hx": {
            "name": "pixi/textures/RenderTexture.hx",
            "modules": {},
            "classes": {
                "RenderTexture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/textures/Texture.hx": {
            "name": "pixi/textures/Texture.hx",
            "modules": {},
            "classes": {
                "Texture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/textures/VideoTexture.hx": {
            "name": "pixi/textures/VideoTexture.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/utils/Detector.hx": {
            "name": "pixi/utils/Detector.hx",
            "modules": {},
            "classes": {
                "Detector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/utils/Event.hx": {
            "name": "pixi/utils/Event.hx",
            "modules": {},
            "classes": {
                "Event": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/utils/EventTarget.hx": {
            "name": "pixi/utils/EventTarget.hx",
            "modules": {},
            "classes": {
                "EventTarget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/utils/Stats.hx": {
            "name": "pixi/utils/Stats.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/utils/Utils.hx": {
            "name": "pixi/utils/Utils.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/DomDefinitions.hx": {
            "name": "pixi/DomDefinitions.hx",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pixi/InteractionData.hx": {
            "name": "pixi/InteractionData.hx",
            "modules": {},
            "classes": {
                "InteractionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pixi/InteractionManager.hx": {
            "name": "pixi/InteractionManager.hx",
            "modules": {},
            "classes": {
                "InteractionManager": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "DisplayObject": {
            "name": "DisplayObject",
            "shortname": "DisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 14,
            "description": "The base class for all objects that are rendered on the screen.\nThis is an abstract class and should not be used on its own rather it should be extended.",
            "is_constructor": 1
        },
        "DisplayObjectContainer": {
            "name": "DisplayObjectContainer",
            "shortname": "DisplayObjectContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 8,
            "description": "A DisplayObjectContainer represents a collection of display objects.\nIt is the base class of all display objects that act as a container for other objects.",
            "extends": "DisplayObject",
            "is_constructor": 1
        },
        "MovieClip": {
            "name": "MovieClip",
            "shortname": "MovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/MovieClip.hx",
            "line": 8,
            "description": "A MovieClip is a simple way to display an animation depicted by a list of textures.",
            "extends": "Sprite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "textures",
                    "description": "an array of {Texture} objects that make up the animation",
                    "type": "Array<Texture>"
                }
            ]
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/Sprite.hx",
            "line": 11,
            "description": "The Sprite object is the base for all textured objects that are rendered to the screen",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture for this sprite\n\nA sprite can be created directly from an image like this :\nvar sprite = new PIXI.Sprite.fromImage('assets/image.png');\nyourStage.addChild(sprite);\nthen obviously don't forget to add it to the stage you have already created",
                    "type": "Texture"
                }
            ]
        },
        "SpriteBatch": {
            "name": "SpriteBatch",
            "shortname": "SpriteBatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/SpriteBatch.hx",
            "line": 8,
            "description": "The SpriteBatch class is a really fast version of the DisplayObjectContainer\nbuilt solely for speed, so use when you need a lot of sprites or particles.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "",
                    "type": "Texture",
                    "optional": true
                }
            ]
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/display/Stage.hx",
            "line": 9,
            "description": "A Stage represents the root of the display tree. Everything connected to the stage is rendered",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "the background color of the stage, you have to pass this in is in hex format\n     like: 0xFFFFFF for white\n\nCreating a stage is a mandatory process when you use Pixi, which is as simple as this :\nvar stage = new PIXI.Stage(0xFFFFFF);\nwhere the parameter given is the background colour of the stage, in hex\nyou will use this stage instance to add your sprites to it and therefore to the renderer\nHere is how to add a sprite to the stage :\nstage.addChild(sprite);",
                    "type": "Int"
                }
            ]
        },
        "Rope": {
            "name": "Rope",
            "shortname": "Rope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/extras/Rope.hx",
            "line": 9,
            "is_constructor": 1,
            "extends": "Strip",
            "params": [
                {
                    "name": "texture",
                    "description": "- The texture to use on the rope.",
                    "type": "Texture"
                },
                {
                    "name": "points.",
                    "description": "",
                    "type": "Array<Point>"
                }
            ]
        },
        "Strip": {
            "name": "Strip",
            "shortname": "Strip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/extras/Strip.hx",
            "line": 9,
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture to use",
                    "type": "Texture"
                }
            ]
        },
        "TilingSprite": {
            "name": "TilingSprite",
            "shortname": "TilingSprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/extras/TilingSprite.hx",
            "line": 10,
            "description": "A tiling sprite is a fast way of rendering a tiling image",
            "extends": "Sprite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "the texture of the tiling sprite",
                    "type": "Texture"
                },
                {
                    "name": "width",
                    "description": "the width of the tiling sprite",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the height of the tiling sprite",
                    "type": "Float"
                }
            ]
        },
        "AbstractFilter": {
            "name": "AbstractFilter",
            "shortname": "AbstractFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 6,
            "description": "This is the base class for creating a pixi.js filter. Currently only webGL supports filters.\nIf you want to make a custom filter this should be your base class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fragmentSrc",
                    "description": "",
                    "type": "Array<String>",
                    "optional": true
                },
                {
                    "name": "uniforms",
                    "description": "",
                    "type": "Dynamic",
                    "optional": true
                }
            ]
        },
        "AlphaMaskFilter": {
            "name": "AlphaMaskFilter",
            "shortname": "AlphaMaskFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/AlphaMaskFilter.hx",
            "line": 8,
            "description": "The AlphaMaskFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\nYou can use this filter to apply all manor of crazy warping effects\nCurrently the r property of the texture is used to offset the x and the g property of the texture is used to offset the y.",
            "extends": "AbstractFilter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture used for the displacement map * must be power of 2 texture at the moment",
                    "type": "Texture"
                }
            ]
        },
        "AsciiFilter": {
            "name": "AsciiFilter",
            "shortname": "AsciiFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/AsciiFilter.hx",
            "line": 6,
            "description": "An ASCII filter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "BlurFilter": {
            "name": "BlurFilter",
            "shortname": "BlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/BlurFilter.hx",
            "line": 6,
            "description": "The BlurFilter applies a Gaussian blur to an object.\nThe strength of the blur can be set for x- and y-axis separately (always relative to the stage).",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "BlurXFilter": {
            "name": "BlurXFilter",
            "shortname": "BlurXFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/BlurXFilter.hx",
            "line": 6,
            "description": "The BlurXFilter applies a horizontal Gaussian blur to an object.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "BlurYFilter": {
            "name": "BlurYFilter",
            "shortname": "BlurYFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/BlurYFilter.hx",
            "line": 6,
            "description": "The BlurYFilter applies a vertical Gaussian blur to an object.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "ColorMatrixFilter": {
            "name": "ColorMatrixFilter",
            "shortname": "ColorMatrixFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/ColorMatrixFilter.hx",
            "line": 6,
            "description": "The ColorMatrixFilter class lets you apply a 4x4 matrix transformation on the RGBA\ncolor and alpha values of every pixel on your displayObject to produce a result\nwith a new set of RGBA color and alpha values. It's pretty powerful!",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "ColorStepFilter": {
            "name": "ColorStepFilter",
            "shortname": "ColorStepFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/ColorStepFilter.hx",
            "line": 6,
            "description": "This lowers the color depth of your image by the given amount, producing an image with a smaller palette.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "ConvolutionFilter": {
            "name": "ConvolutionFilter",
            "shortname": "ConvolutionFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/ConvolutionFilter.hx",
            "line": 6,
            "description": "The ConvolutionFilter class applies a matrix convolution filter effect.\nA convolution combines pixels in the input image with neighboring pixels to produce a new image.\nA wide variety of image effects can be achieved through convolutions, including blurring, edge detection, sharpening, embossing, and beveling.\nThe matrix should be specified as a 9 point Array. See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.",
            "extends": "AbstractFilter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "An array of values used for matrix transformation. Specified as a 9 point Array.",
                    "type": "Array"
                },
                {
                    "name": "width",
                    "description": "Width of the object you are transforming",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Height of the object you are transforming",
                    "type": "Number"
                }
            ]
        },
        "CrossHatchFilter": {
            "name": "CrossHatchFilter",
            "shortname": "CrossHatchFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/CrossHatchFilter.hx",
            "line": 6,
            "description": "A Cross Hatch effect filter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "DisplacementFilter": {
            "name": "DisplacementFilter",
            "shortname": "DisplacementFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/DisplacementFilter.hx",
            "line": 9,
            "description": "The DisplacementFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\nYou can use this filter to apply all manor of crazy warping effects\nCurrently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.",
            "extends": "AbstractFilter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture used for the displacement map * must be power of 2 texture at the moment",
                    "type": "Texture"
                }
            ]
        },
        "DotScreenFilter": {
            "name": "DotScreenFilter",
            "shortname": "DotScreenFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/DotScreenFilter.hx",
            "line": 6,
            "description": "This filter applies a dotscreen effect making display objects appear to be made out of black and white halftone dots like an old printer.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "FilterBlock": {
            "name": "FilterBlock",
            "shortname": "FilterBlock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/FilterBlock.hx",
            "line": 6,
            "description": "A target and pass info object for filters.",
            "is_constructor": 1
        },
        "GrayFilter": {
            "name": "GrayFilter",
            "shortname": "GrayFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/GrayFilter.hx",
            "line": 6,
            "description": "This greyscales the palette of your Display Objects.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "InvertFilter": {
            "name": "InvertFilter",
            "shortname": "InvertFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/InvertFilter.hx",
            "line": 6,
            "description": "This inverts your Display Objects colors.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "NoiseFilter": {
            "name": "NoiseFilter",
            "shortname": "NoiseFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/NoiseFilter.hx",
            "line": 6,
            "description": "A Noise effect filter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "NormalMapFilter": {
            "name": "NormalMapFilter",
            "shortname": "NormalMapFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/NormalMapFilter.hx",
            "line": 9,
            "description": "The NormalMapFilter class uses the pixel values from the specified texture (called the displacement map) to perform a displacement of an object.\nYou can use this filter to apply all manor of crazy warping effects\nCurrently the r property of the texture is used offset the x and the g property of the texture is used to offset the y.",
            "extends": "AbstractFilter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture used for the displacement map * must be power of 2 texture at the moment",
                    "type": "Texture"
                }
            ]
        },
        "PixelateFilter": {
            "name": "PixelateFilter",
            "shortname": "PixelateFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/PixelateFilter.hx",
            "line": 8,
            "description": "This filter applies a pixelate effect making display objects appear 'blocky'.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "RGBSplitFilter": {
            "name": "RGBSplitFilter",
            "shortname": "RGBSplitFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/RGBSplitFilter.hx",
            "line": 6,
            "description": "An RGB Split Filter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "SepiaFilter": {
            "name": "SepiaFilter",
            "shortname": "SepiaFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/SepiaFilter.hx",
            "line": 6,
            "description": "This applies a sepia effect to your Display Objects.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "SmartBlurFilter": {
            "name": "SmartBlurFilter",
            "shortname": "SmartBlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/SmartBlurFilter.hx",
            "line": 6,
            "description": "A Smart Blur Filter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "TiltShiftFilter": {
            "name": "TiltShiftFilter",
            "shortname": "TiltShiftFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/TiltShiftFilter.hx",
            "line": 6,
            "description": "A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.",
            "is_constructor": 1
        },
        "TiltShiftXFilter": {
            "name": "TiltShiftXFilter",
            "shortname": "TiltShiftXFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 6,
            "description": "A TiltShiftXFilter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "TiltShiftYFilter": {
            "name": "TiltShiftYFilter",
            "shortname": "TiltShiftYFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 6,
            "description": "A TiltShiftYFilter.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "TwistFilter": {
            "name": "TwistFilter",
            "shortname": "TwistFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/filters/TwistFilter.hx",
            "line": 8,
            "description": "This filter applies a twist effect making display objects appear twisted in the given direction.",
            "extends": "AbstractFilter",
            "is_constructor": 1
        },
        "Circle": {
            "name": "Circle",
            "shortname": "Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Circle.hx",
            "line": 6,
            "description": "The Circle object can be used to specify a hit area for displayObjects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the center of this circle",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the center of this circle",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Float"
                }
            ]
        },
        "Ellipse": {
            "name": "Ellipse",
            "shortname": "Ellipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Ellipse.hx",
            "line": 6,
            "description": "The Ellipse object can be used to specify a hit area for displayObjects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the center of the ellipse",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the center of the ellipse",
                    "type": "Float"
                },
                {
                    "name": "width",
                    "description": "The half width of this ellipse",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The half height of this ellipse",
                    "type": "Float"
                }
            ]
        },
        "Matrix": {
            "name": "Matrix",
            "shortname": "Matrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Matrix.hx",
            "line": 6,
            "description": "The Matrix class is now an object, which makes it a lot faster,\nhere is a representation of it :\n| a | b | tx|\n| c | d | ty|\n| 0 | 0 | 1 |",
            "is_constructor": 1
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Point.hx",
            "line": 6,
            "description": "The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "position of the point on the x axis",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "position of the point on the y axis",
                    "type": "Float"
                }
            ]
        },
        "Polygon": {
            "name": "Polygon",
            "shortname": "Polygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Polygon.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "points",
                    "description": "This can be an array of Points that form the polygon,\n     a flat array of numbers that will be interpreted as [x,y, x,y, ...], or the arguments passed can be\n     all the points of the polygon e.g. `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the\n     arguments passed can be flat x,y values e.g. `new PIXI.Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are\n     Numbers.",
                    "type": "Array<Point>|Array<Number>|Point...|Number...",
                    "multiple": true
                }
            ]
        },
        "Rectangle": {
            "name": "Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/Rectangle.hx",
            "line": 6,
            "description": "the Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the upper-left corner of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the upper-left corner of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "width",
                    "description": "The overall width of this rectangle",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The overall height of this rectangle",
                    "type": "Float"
                }
            ]
        },
        "RoundedRectangle": {
            "name": "RoundedRectangle",
            "shortname": "RoundedRectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 6,
            "description": "The Rounded Rectangle object is an area defined by its position and has nice rounded corners, as indicated by its top-left corner point (x, y) and by its width and its height.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the upper-left corner of the rounded rectangle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the upper-left corner of the rounded rectangle",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The overall width of this rounded rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The overall height of this rounded rectangle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The overall radius of this corners of this rounded rectangle",
                    "type": "Number"
                }
            ]
        },
        "AssetLoader": {
            "name": "AssetLoader",
            "shortname": "AssetLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 8,
            "description": "A Class that loads a bunch of images / sprite sheet / bitmap font files. Once the\nassets have been loaded they are added to the PIXI Texture cache and can be accessed\neasily through PIXI.Texture.fromImage() and PIXI.Sprite.fromImage()\nWhen all items have been loaded this class will dispatch a 'onLoaded' event\nAs each individual item is loaded this class will dispatch a 'onProgress' event",
            "is_constructor": 1,
            "uses": [
                "EventTarget"
            ],
            "params": [
                {
                    "name": "assetURLs",
                    "description": "an array of image/sprite sheet urls that you would like loaded\n     supported. Supported image formats include 'jpeg', 'jpg', 'png', 'gif'. Supported\n     sprite sheet data formats only include 'JSON' at this time. Supported bitmap font\n     data formats include 'xml' and 'fnt'.",
                    "type": "Array<String>"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "AtlasLoader": {
            "name": "AtlasLoader",
            "shortname": "AtlasLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 8,
            "description": "The atlas file loader is used to load in Atlas data and parse it\nWhen loaded this class will dispatch a 'loaded' event\nIf loading fails this class will dispatch an 'error' event",
            "extends": "EventTarget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "the url of the JSON file",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "BitmapFontLoader": {
            "name": "BitmapFontLoader",
            "shortname": "BitmapFontLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 9,
            "description": "The xml loader is used to load in XML bitmap font data ('xml' or 'fnt')\nTo generate the data you can use http://www.angelcode.com/products/bmfont/\nThis loader will also load the image file as the data.\nWhen loaded this class will dispatch a 'loaded' event",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the sprite sheet JSON file",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "ImageLoader": {
            "name": "ImageLoader",
            "shortname": "ImageLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/ImageLoader.hx",
            "line": 9,
            "description": "The image loader class is responsible for loading images file formats ('jpeg', 'jpg', 'png' and 'gif')\nOnce the image has been loaded it is stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\nWhen loaded this class will dispatch a 'loaded' event",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the image",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "JsonLoader": {
            "name": "JsonLoader",
            "shortname": "JsonLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 8,
            "description": "The json file loader is used to load in JSON data and parse it\nWhen loaded this class will dispatch a 'loaded' event\nIf loading fails this class will dispatch an 'error' event",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the JSON file",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "SpineLoader": {
            "name": "SpineLoader",
            "shortname": "SpineLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/SpineLoader.hx",
            "line": 8,
            "description": "The Spine loader is used to load in JSON spine data\nTo generate the data you need to use http://esotericsoftware.com/ and export in the \"JSON\" format\nDue to a clash of names  You will need to change the extension of the spine file from *.json to *.anim for it to load\nSee example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source\nYou will need to generate a sprite sheet to accompany the spine data\nWhen loaded this class will dispatch a \"loaded\" event",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the JSON file",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "SpriteSheetLoader": {
            "name": "SpriteSheetLoader",
            "shortname": "SpriteSheetLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 9,
            "description": "The sprite sheet loader is used to load in JSON sprite sheet data\nTo generate the data you can use http://www.codeandweb.com/texturepacker and publish in the 'JSON' format\nThere is a free version so thats nice, although the paid version is great value for money.\nIt is highly recommended to use Sprite sheets (also know as a 'texture atlas') as it means sprites can be batched and drawn together for highly increased rendering speed.\nOnce the data has been loaded the frames are stored in the PIXI texture cache and can be accessed though PIXI.Texture.fromFrameId() and PIXI.Sprite.fromFrameId()\nThis loader will load the image file that the Spritesheet points to as well as the data.\nWhen loaded this class will dispatch a 'loaded' event",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the sprite sheet JSON file",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool",
                    "optional": true
                }
            ]
        },
        "AnimatedParticle": {
            "name": "AnimatedParticle",
            "shortname": "AnimatedParticle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "line": 6,
            "description": "An individual particle image with an animation. While this class may be functional, it\nhas not gotten thorough testing or examples yet, and is not considered to be release ready.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "emitter",
                    "description": "The emitter that controls this AnimatedParticle.",
                    "type": "Emitter"
                }
            ]
        },
        "Emitter": {
            "name": "Emitter",
            "shortname": "Emitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 247,
            "description": "A particle emitter.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "particleParent",
                    "description": "The display object to add the\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticles to.",
                    "type": "pixi.display.DisplayObjectContainer"
                },
                {
                    "name": "particleImages",
                    "description": "A texture or array of textures to use\n\t\t\t\t\t\t\t\t\t\t\tfor the particles.",
                    "type": "Array<pixi.textures.Texture>",
                    "optional": true
                },
                {
                    "name": "config",
                    "description": "A configuration object containing settings for the emitter.",
                    "type": "Dynamic",
                    "optional": true
                }
            ]
        },
        "Particle": {
            "name": "Particle",
            "shortname": "Particle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 93,
            "is_constructor": 1,
            "params": [
                {
                    "name": "emitter",
                    "description": "The emitter that controls this particle.",
                    "type": "Emitter"
                }
            ]
        },
        "PathParticle": {
            "name": "PathParticle",
            "shortname": "PathParticle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 31,
            "description": "An particle that follows a path defined by an algebraic expression, e.g. \"sin(x)\" or\n\"5x + 3\".\nTo use this class, the particle config must have a \"path\" string in the\n\"extraData\" parameter. This string should have \"x\" in it to represent movement (from the\nspeed settings of the particle). It may have numbers, parentheses, the four basic\noperations, and the following Math functions or properties (without the preceding \"Math.\"):\n\"pow\", \"sqrt\", \"abs\", \"floor\", \"round\", \"ceil\", \"E\", \"PI\", \"sin\", \"cos\", \"tan\", \"asin\",\n\"acos\", \"atan\", \"atan2\", \"log\".\nThe overall movement of the particle and the expression value become x and y positions for\nthe particle, respectively. The final position is rotated by the spawn rotation/angle of\nthe particle.\n\nSome example paths:\n\n\t\"sin(x/10) * 20\" // A sine wave path.\n\t\"cos(x/100) * 30\" // Particles curve counterclockwise (for medium speed/low lifetime particles)\n\t\"pow(x/10, 2) / 2\" // Particles curve clockwise (remember, +y is down).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "emitter",
                    "description": "The emitter that controls this PathParticle.",
                    "type": "Emitter"
                }
            ]
        },
        "Graphics": {
            "name": "Graphics",
            "shortname": "Graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/primitives/Graphics.hx",
            "line": 18,
            "description": "The Graphics class contains a set of methods that you can use to create primitive shapes and lines.\nIt is important to know that with the webGL renderer only simple polygons can be filled at this stage\nComplex polygons will not be filled. Heres an example of a complex polygon: http://www.goodboydigital.com/wp-content/uploads/2013/06/complexPolygon.png",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1
        },
        "CanvasBuffer": {
            "name": "CanvasBuffer",
            "shortname": "CanvasBuffer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 8,
            "description": "Creates a Canvas element of the given size.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "the width for the newly created canvas",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the height for the newly created canvas",
                    "type": "Float"
                }
            ]
        },
        "CanvasMaskManager": {
            "name": "CanvasMaskManager",
            "shortname": "CanvasMaskManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/canvas/utils/CanvasMaskManager.hx",
            "line": 6,
            "description": "A set of functions used to handle masking"
        },
        "CanvasGraphics": {
            "name": "CanvasGraphics",
            "shortname": "CanvasGraphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/canvas/CanvasGraphics.hx",
            "line": 9,
            "description": "A set of functions used by the canvas renderer to draw the primitive graphics data"
        },
        "CanvasRenderer": {
            "name": "CanvasRenderer",
            "shortname": "CanvasRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 11,
            "description": "The CanvasRenderer draws the Stage and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\nDon't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "the width of the canvas view",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "800"
                },
                {
                    "name": "height",
                    "description": "the height of the canvas view",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "600"
                },
                {
                    "name": "options",
                    "description": "The optional renderer parameters",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "view",
                            "description": "the canvas to use as a view, optional",
                            "type": "HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "transparent",
                            "description": "If the render view is transparent, default false",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "resolution",
                            "description": "the resolution of the renderer retina would be 2",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "clearBeforeRender",
                            "description": "This sets if the CanvasRenderer will clear the canvas or not before the new render pass.",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "ComplexPrimitiveShader": {
            "name": "ComplexPrimitiveShader",
            "shortname": "ComplexPrimitiveShader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ]
        },
        "PixiFastShader": {
            "name": "PixiFastShader",
            "shortname": "PixiFastShader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ]
        },
        "PixiShader": {
            "name": "PixiShader",
            "shortname": "PixiShader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ]
        },
        "PrimitiveShader": {
            "name": "PrimitiveShader",
            "shortname": "PrimitiveShader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ]
        },
        "StripShader": {
            "name": "StripShader",
            "shortname": "StripShader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ]
        },
        "FilterTexture": {
            "name": "FilterTexture",
            "shortname": "FilterTexture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                },
                {
                    "name": "width",
                    "description": "the horizontal range of the filter",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the vertical range of the filter",
                    "type": "Float"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ]
        },
        "WebGLMaskManager": {
            "name": "WebGLMaskManager",
            "shortname": "WebGLMaskManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "line": 6,
            "is_constructor": 1
        },
        "WebGLFastSpriteBatch": {
            "name": "WebGLFastSpriteBatch",
            "shortname": "WebGLFastSpriteBatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 11
        },
        "WebGLFilterManager": {
            "name": "WebGLFilterManager",
            "shortname": "WebGLFilterManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 9,
            "is_constructor": 1
        },
        "WebGLShaderManager": {
            "name": "WebGLShaderManager",
            "shortname": "WebGLShaderManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 6
        },
        "WebGLSpriteBatch": {
            "name": "WebGLSpriteBatch",
            "shortname": "WebGLSpriteBatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 11
        },
        "WebGLStencilManager": {
            "name": "WebGLStencilManager",
            "shortname": "WebGLStencilManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 7
        },
        "WebGLRenderer": {
            "name": "WebGLRenderer",
            "shortname": "WebGLRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 20,
            "description": "The WebGLRenderer draws the stage and all its content onto a webGL enabled canvas. This renderer\nshould be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\nSo no need for Sprite Batches or Sprite Clouds.\nDon't forget to add the view to your DOM or you will not see anything :)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "the width of the canvas view",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "the height of the canvas view",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "options",
                    "description": "The optional renderer parameters",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "view",
                            "description": "the canvas to use as a view, optional",
                            "type": "HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "transparent",
                            "description": "If the render view is transparent, default false",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "antialias",
                            "description": "sets antialias (only applicable in chrome at the moment)",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "preserveDrawingBuffer",
                            "description": "enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "resolution",
                            "description": "the resolution of the renderer retina would be 2",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ]
        },
        "Spine": {
            "name": "Spine",
            "shortname": "Spine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/spine/Spine.hx",
            "line": 8,
            "description": "A class that enables the you to import and run your spine animations in pixi.\nSpine animation data needs to be loaded using the PIXI.AssetLoader or PIXI.SpineLoader before it can be used by this class\nSee example 12 (http://www.goodboydigital.com/pixijs/examples/12/) to see a working example and check out the source",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "The url of the spine anim file to be used",
                    "type": "String"
                }
            ]
        },
        "SpineTextureLoader": {
            "name": "SpineTextureLoader",
            "shortname": "SpineTextureLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/spine/SpineTextureLoader.hx",
            "line": 7,
            "description": "Supporting class to load images from spine atlases as per spine spec.",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "basePath",
                    "description": "Tha base path where to look for the images to be loaded",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool"
                }
            ]
        },
        "BitmapText": {
            "name": "BitmapText",
            "shortname": "BitmapText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/text/BitmapText.hx",
            "line": 8,
            "description": "A Text Object will create a line(s) of text using bitmap font. To split a line you can use '\\n', '\\r' or '\\r\\n'\nYou can generate the fnt files using\nhttp://www.angelcode.com/products/bmfont/ for windows or\nhttp://www.bmglyph.com/ for mac.",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "The copy that you would like the text to display",
                    "type": "String"
                },
                {
                    "name": "style",
                    "description": "The style parameters",
                    "type": "BitmapTextStyle"
                }
            ]
        },
        "Text": {
            "name": "Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/text/Text.hx",
            "line": 9,
            "description": "A Text Object will create a line(s) of text. To split a line you can use '\\n'\nor add a wordWrap property set to true and and wordWrapWidth property with a value\nin the style object",
            "extends": "Sprite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "The copy that you would like the text to display",
                    "type": "String"
                },
                {
                    "name": "style",
                    "description": "The style parameters",
                    "type": "TextStyle",
                    "optional": true,
                    "props": [
                        {
                            "name": "font",
                            "description": "default 'bold 20px Arial' The style and size of the font",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "fill",
                            "description": "A canvas fillstyle that will be used on the text e.g '#00FF00'",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'black'"
                        },
                        {
                            "name": "align",
                            "description": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'left'"
                        },
                        {
                            "name": "stroke",
                            "description": "A canvas fillstyle that will be used on the text stroke e.g ''#FCFF00'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "strokeThickness",
                            "description": "A number that represents the thickness of the stroke. Default is 0 (no stroke)",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "wordWrap",
                            "description": "Indicates if word wrap should be used",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "wordWrapWidth",
                            "description": "The width at which text will wrap, it needs wordWrap to be set to true",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "100"
                        },
                        {
                            "name": "dropShadow",
                            "description": "Set a drop shadow for the text",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "dropShadowColor",
                            "description": "A fill style to be used on the dropshadow e.g 'red', '#00FF00'",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'#000000'"
                        },
                        {
                            "name": "dropShadowAngle",
                            "description": "Set a angle of the drop shadow",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "Math.PI/4"
                        },
                        {
                            "name": "dropShadowDistance",
                            "description": "Set a distance of the drop shadow",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "5"
                        }
                    ]
                }
            ]
        },
        "BaseTexture": {
            "name": "BaseTexture",
            "shortname": "BaseTexture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/textures/BaseTexture.hx",
            "line": 9,
            "description": "A texture stores the information that represents an image. All textures have a base texture",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "source",
                    "description": "the source object (image or canvas)",
                    "type": "String"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ]
        },
        "RenderTexture": {
            "name": "RenderTexture",
            "shortname": "RenderTexture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/textures/RenderTexture.hx",
            "line": 12,
            "description": "A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n\n__Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded otherwise black rectangles will be drawn instead.\n\nA RenderTexture takes a snapshot of any Display Object given to its render method. The position and rotation of the given Display Objects is ignored. For example:\n\n   var renderTexture = new PIXI.RenderTexture(800, 600);\n   var sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n   sprite.position.x = 800/2;\n   sprite.position.y = 600/2;\n   sprite.anchor.x = 0.5;\n   sprite.anchor.y = 0.5;\n   renderTexture.render(sprite);\n\nThe Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual position a DisplayObjectContainer should be used:\n\n   var doc = new PIXI.DisplayObjectContainer();\n   doc.addChild(sprite);\n   renderTexture.render(doc);  // Renders to center of renderTexture",
            "extends": "Texture",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "The width of the render texture",
                    "type": "Float",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "The height of the render texture",
                    "type": "Float",
                    "optional": true
                },
                {
                    "name": "renderer",
                    "description": "The renderer used for this RenderTexture",
                    "type": "CanvasRenderer|WebGLRenderer",
                    "optional": true
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "resolution",
                    "description": "The resolution of the texture being generated",
                    "type": "Float",
                    "optional": true
                }
            ]
        },
        "Texture": {
            "name": "Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/textures/Texture.hx",
            "line": 9,
            "description": "A texture stores the information that represents an image or part of an image. It cannot be added\nto the display list directly. Instead use it as the texture for a PIXI.Sprite. If no frame is provided then the whole image is used.",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "baseTexture",
                    "description": "The base texture source to create the texture from",
                    "type": "BaseTexture"
                },
                {
                    "name": "frame",
                    "description": "The rectangle frame of the texture to show",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "crop",
                    "description": "The area of original texture",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "trim",
                    "description": "Trimmed texture rectangle",
                    "type": "Rectangle",
                    "optional": true
                }
            ]
        },
        "Detector": {
            "name": "Detector",
            "shortname": "Detector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/utils/Detector.hx",
            "line": 10
        },
        "Event": {
            "name": "Event",
            "shortname": "Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/utils/Event.hx",
            "line": 6,
            "description": "Creates an homogenous object for tracking events so users can know what to expect.",
            "extends": "Object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object that the event is called on",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "The string name of the event that was triggered",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Arbitrary event data to pass along",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "EventTarget": {
            "name": "EventTarget",
            "shortname": "EventTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AssetLoader",
                "BitmapFontLoader",
                "ImageLoader",
                "JsonLoader",
                "SpineLoader",
                "SpriteSheetLoader",
                "SpineTextureLoader",
                "BaseTexture",
                "Texture"
            ],
            "file": "pixi/utils/EventTarget.hx",
            "line": 6,
            "description": "Mixins event emitter functionality to a class",
            "example": [
                "\n     function MyEmitter() {}\n\n     PIXI.EventTarget.mixin(MyEmitter.prototype);\n\n     var em = new MyEmitter();\n     em.emit('eventName', 'some data', 'some more data', {}, null, ...);"
            ]
        },
        "InteractionData": {
            "name": "InteractionData",
            "shortname": "InteractionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/InteractionData.hx",
            "line": 11,
            "description": "Holds all information related to an Interaction event",
            "is_constructor": 1
        },
        "InteractionManager": {
            "name": "InteractionManager",
            "shortname": "InteractionManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pixi/InteractionManager.hx",
            "line": 8,
            "description": "The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\nif its interactive parameter is set to true\nThis manager also supports multitouch.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "stage",
                    "description": "The stage to handle interactions",
                    "type": "Stage"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 23,
            "description": "Useful function that returns a texture of the displayObject object that can then be used to create sprites\nThis can be quite useful if your displayObject is static / complicated and needs to be reused multiple times.",
            "itemtype": "method",
            "name": "generateTexture",
            "params": [
                {
                    "name": "resolution",
                    "description": "The resolution of the texture being generated",
                    "type": "Float"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                },
                {
                    "name": "renderer",
                    "description": "The renderer used to generate the texture.",
                    "type": "CanvasRenderer|WebGLRenderer",
                    "optional": true
                }
            ],
            "return": {
                "description": "a texture of the graphics object",
                "type": "Texture"
            },
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 36,
            "description": "Retrieves the bounds of the displayObject as a rectangle object",
            "itemtype": "method",
            "name": "getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix",
                    "optional": true
                }
            ],
            "return": {
                "description": "the rectangular bounding area",
                "type": "Rectangle"
            },
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 45,
            "description": "Retrieves the local bounds of the displayObject as a rectangle object",
            "itemtype": "method",
            "name": "getLocalBounds",
            "return": {
                "description": "the rectangular bounding area",
                "type": "Rectangle"
            },
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 53,
            "description": "Sets the object's stage reference, the stage this object is connected to",
            "itemtype": "method",
            "name": "setStageReference",
            "params": [
                {
                    "name": "stage",
                    "description": "the stage that the object will have as its current stage reference",
                    "type": "Stage"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 61,
            "description": "Calculates the global position of the display object",
            "itemtype": "method",
            "name": "toGlobal",
            "params": [
                {
                    "name": "position",
                    "description": "The world origin to calculate from",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "A point object representing the position of this object",
                "type": "Point"
            },
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 70,
            "description": "Calculates the local position of the display object relative to another point",
            "itemtype": "method",
            "name": "toLocal",
            "params": [
                {
                    "name": "position",
                    "description": "The world origin to calculate from",
                    "type": "Point"
                },
                {
                    "name": "frm",
                    "description": "The DisplayObject to calculate the global position from",
                    "type": "DisplayObject",
                    "optional": true
                }
            ],
            "return": {
                "description": "A point object representing the position of this object",
                "type": "Point"
            },
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 80,
            "description": "Generates and updates the cached sprite for this object.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 87,
            "description": "The opacity of the object.",
            "itemtype": "property",
            "name": "alpha",
            "type": "Float",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 95,
            "description": "This is used to indicate if the displayObject should display a mouse hand cursor on rollover",
            "itemtype": "property",
            "name": "buttonMode",
            "type": "Bool",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 103,
            "description": "Set weather or not a the display objects is cached as a bitmap.\nThis basically takes a snap shot of the display object as it is at that moment. It can provide a performance benefit for complex static displayObjects\nTo remove filters simply set this property to 'null'",
            "itemtype": "property",
            "name": "cacheAsBitmap",
            "type": "Bool",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 112,
            "description": "This is the cursor that will be used when the mouse is over this object. To enable this the element must have interaction = true and buttonMode = true",
            "itemtype": "property",
            "name": "defaultCursor",
            "type": "String",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 120,
            "description": "The area the filter is applied to like the hitArea this is used as more of an optimisation\nrather than figuring out the dimensions of the displayObject each frame you can set this rectangle",
            "itemtype": "property",
            "name": "filterArea",
            "type": "Rectangle",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 129,
            "description": "Sets the filters for the displayObject.\n* IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\nTo remove filters simply set this property to 'null'",
            "itemtype": "property",
            "name": "filters",
            "type": "Array An array of filters",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 138,
            "description": "This is the defined area that will pick up mouse / touch events. It is null by default.\nSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)",
            "itemtype": "property",
            "name": "hitArea",
            "type": "Rectangle|Circle|Ellipse|Polygon",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 147,
            "description": "Indicates if the sprite will have touch and mouse interactivity. It is false by default",
            "itemtype": "property",
            "name": "interactive",
            "type": "Bool",
            "default": "false",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 156,
            "description": "Sets a mask for the displayObject. A mask is an object that limits the visibility of an object to the shape of the mask applied to it.\nIn PIXI a regular mask must be a PIXI.Graphics object. This allows for much faster masking in canvas as it utilises shape clipping.\nTo remove a mask, set this property to null.",
            "itemtype": "property",
            "name": "mask",
            "type": "Graphics",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 166,
            "description": "[read-only] The display object container that contains this display object.",
            "itemtype": "property",
            "name": "parent",
            "type": "DisplayObjectContainer",
            "readonly": "",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 175,
            "description": "The pivot point of the displayObject that it rotates around",
            "itemtype": "property",
            "name": "pivot",
            "type": "Point",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 183,
            "description": "The coordinate of the object relative to the local coordinates of the parent.",
            "itemtype": "property",
            "name": "position",
            "type": "Point",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 191,
            "description": "Can this object be rendered",
            "itemtype": "property",
            "name": "renderable",
            "type": "Bool",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 199,
            "description": "The rotation of the object in radians.",
            "itemtype": "property",
            "name": "rotation",
            "type": "Float",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 207,
            "description": "The scale factor of the object.",
            "itemtype": "property",
            "name": "scale",
            "type": "Point",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 215,
            "description": "[read-only] The stage the display object is connected to, or undefined if it is not connected to the stage.",
            "itemtype": "property",
            "name": "stage",
            "type": "Stage",
            "readonly": "",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 224,
            "description": "The visibility of the object.",
            "itemtype": "property",
            "name": "visible",
            "type": "Bool",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 232,
            "description": "[read-only] The multiplied alpha of the displayObject",
            "itemtype": "property",
            "name": "worldAlpha",
            "type": "Float",
            "readonly": "",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 241,
            "description": "[read-only] Indicates if the sprite is globaly visible.",
            "itemtype": "property",
            "name": "worldVisible",
            "type": "Bool",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 249,
            "description": "The position of the displayObject on the x axis relative to the local coordinates of the parent.",
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 257,
            "description": "The position of the displayObject on the y axis relative to the local coordinates of the parent.",
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 265,
            "description": "A callback that is used when the users mouse rolls over the displayObject",
            "itemtype": "method",
            "name": "mouseover",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 272,
            "description": "A callback that is used when the users mouse leaves the displayObject",
            "itemtype": "method",
            "name": "mouseout",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 279,
            "description": "A callback that is used when the users clicks on the displayObject with their mouse's left button",
            "itemtype": "method",
            "name": "click",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 286,
            "description": "A callback that is used when the user clicks the mouse's left button down over the sprite",
            "itemtype": "method",
            "name": "mousedown",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 293,
            "description": "A callback that is used when the user releases the mouse's left button that was over the displayObject\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject",
            "itemtype": "method",
            "name": "mouseup",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 301,
            "description": "Is called when mouse is moved across the renderer element",
            "itemtype": "method",
            "name": "mousemove",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 308,
            "description": "A callback that is used when the user releases the mouse's left button that was over the displayObject but is no longer over the displayObject\nfor this callback to be fired, the mouse's left button must have been pressed down over the displayObject",
            "itemtype": "method",
            "name": "mouseupoutside",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 316,
            "description": "A callback that is used when the users clicks on the displayObject with their mouse's right button",
            "itemtype": "method",
            "name": "rightclick",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 323,
            "description": "A callback that is used when the user clicks the mouse's right button down over the sprite",
            "itemtype": "method",
            "name": "rightdown",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 330,
            "description": "A callback that is used when the user releases the mouse's right button that was over the displayObject\nfor this callback to be fired the mouse's right button must have been pressed down over the displayObject",
            "itemtype": "method",
            "name": "rightup",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 338,
            "description": "A callback that is used when the user releases the mouse's right button that was over the displayObject but is no longer over the displayObject\nfor this callback to be fired, the mouse's right button must have been pressed down over the displayObject",
            "itemtype": "method",
            "name": "rightupoutside",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 346,
            "description": "A callback that is used when the users taps on the sprite with their finger\nbasically a touch version of click",
            "itemtype": "method",
            "name": "tap",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 354,
            "description": "A callback that is used when the user touches over the displayObject",
            "itemtype": "method",
            "name": "touchstart",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 361,
            "description": "A callback that is used when the user releases a touch over the displayObject",
            "itemtype": "method",
            "name": "touchend",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 368,
            "description": "A callback that is used when the user releases the touch that was over the displayObject\nfor this callback to be fired, The touch must have started over the sprite",
            "itemtype": "method",
            "name": "touchendoutside",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObject.hx",
            "line": 376,
            "description": "Is called when a touch is moved across the renderer element",
            "itemtype": "method",
            "name": "touchmove",
            "params": [
                {
                    "name": "interactionData",
                    "description": "",
                    "type": "InteractionData"
                }
            ],
            "class": "DisplayObject"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 18,
            "description": "The width of the displayObjectContainer, setting this will actually modify the scale to achieve the value set",
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 26,
            "description": "The height of the displayObjectContainer, setting this will actually modify the scale to achieve the value set",
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 34,
            "description": "[read-only] The array of children of this container.",
            "itemtype": "property",
            "name": "children",
            "type": "Array<DisplayObject>",
            "readonly": "",
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 43,
            "description": "Adds a child to the container.",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject to add to the container",
                    "type": "DisplayObject"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 51,
            "description": "Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The child to add",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to place the child in",
                    "type": "Int"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 60,
            "description": "Swaps the position of 2 Display Objects within this container.",
            "itemtype": "method",
            "name": "swapChildren",
            "params": [
                {
                    "name": "child1",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "child2",
                    "description": "",
                    "type": "DisplayObject"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 69,
            "description": "Returns the child at the specified index",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index to get the child from",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "DisplayObject"
            },
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 78,
            "description": "Removes a child from the container.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject to remove",
                    "type": "DisplayObject"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 86,
            "description": "Removes a child from the specified index position in the child list of the container.",
            "itemtype": "method",
            "name": "removeChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index to get the child from",
                    "type": "Int"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 94,
            "description": "Removes all child instances from the child list of the container.",
            "itemtype": "method",
            "name": "removeChildren",
            "params": [
                {
                    "name": "beginIndex",
                    "description": "The beginning position. Predefined value is 0.",
                    "type": "Int"
                },
                {
                    "name": "endIndex",
                    "description": "The ending position. Predefined value is children's array length.",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 103,
            "description": "Changes the position of an existing child in the display object container",
            "itemtype": "method",
            "name": "setChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "The child DisplayObject instance for which you want to change the index number",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The resulting index number for the child display object",
                    "type": "Int"
                }
            ],
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 112,
            "description": "Returns the index position of a child DisplayObject instance",
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject instance to identify",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The index position of the child display object to identify",
                "type": "Int"
            },
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/CoreDisplayObjectContainer.hx",
            "line": 121,
            "description": "Removes the current stage reference from the container and all of its children.",
            "itemtype": "method",
            "name": "removeStageReference",
            "class": "DisplayObjectContainer"
        },
        {
            "file": "pixi/display/DisplayObjectContainer.hx",
            "line": 9,
            "description": "Returns the child with the specified name",
            "itemtype": "method",
            "name": "getChildByName",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the child",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DisplayObject"
            },
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 18,
            "description": "The speed that the MovieClip will play at. Higher is faster, lower is slower",
            "itemtype": "property",
            "name": "animationSpeed",
            "type": "Float",
            "default": "1",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 27,
            "description": "Whether or not the movie clip repeats after playing.",
            "itemtype": "property",
            "name": "loop",
            "type": "Bool",
            "default": "true",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 36,
            "description": "Function to call when a MovieClip finishes playing",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 44,
            "description": "[read-only] The MovieClips current frame index (this may not have to be a whole number)",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Int",
            "default": "0",
            "readonly": "",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 54,
            "description": "[read-only] Indicates if the MovieClip is currently playing",
            "itemtype": "property",
            "name": "playing",
            "type": "Bool",
            "readonly": "",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 63,
            "description": "[read-only] totalFrames is the total number of frames in the MovieClip. This is the same as number of textures\nassigned to the MovieClip.",
            "itemtype": "property",
            "name": "totalFrames",
            "type": "Int",
            "default": "0",
            "readonly": "",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 74,
            "description": "The array of textures that make up the animation",
            "itemtype": "property",
            "name": "textures",
            "type": "Array",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 82,
            "description": "Stops the MovieClip",
            "itemtype": "method",
            "name": "stop",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 89,
            "description": "Plays the MovieClip",
            "itemtype": "method",
            "name": "play",
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 96,
            "description": "Stops the MovieClip and goes to a specific frame",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "frameNumber",
                    "description": "frame index to stop at",
                    "type": "Int"
                }
            ],
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 104,
            "description": "Goes to a specific frame and begins playing the MovieClip",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "frameNumber",
                    "description": "frame index to start at",
                    "type": "Int"
                }
            ],
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 112,
            "description": "A short hand way of creating a movieclip from an array of frame ids",
            "static": 1,
            "itemtype": "method",
            "name": "fromFrames",
            "params": [
                {
                    "name": "frames",
                    "description": "the array of frames ids the movieclip will use as its texture frames",
                    "type": "Array<String>"
                }
            ],
            "return": {
                "description": "returns the created MovieClip",
                "type": "MovieClip"
            },
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/MovieClip.hx",
            "line": 122,
            "description": "A short hand way of creating a movieclip from an array of image ids",
            "static": 1,
            "itemtype": "method",
            "name": "fromImages",
            "params": [
                {
                    "name": "frames",
                    "description": "the array of image ids the movieclip will use as its texture frames",
                    "type": "Array<String>"
                }
            ],
            "return": {
                "description": "returns the created MovieClip",
                "type": "MovieClip"
            },
            "class": "MovieClip"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 27,
            "description": "The anchor sets the origin point of the texture.\nThe default is 0,0 this means the texture's origin is the top left\nSetting than anchor to 0.5,0.5 means the textures origin is centered\nSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner",
            "itemtype": "property",
            "name": "anchor",
            "type": "Point",
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 38,
            "description": "The texture that the sprite is using",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 46,
            "description": "The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.",
            "itemtype": "property",
            "name": "tint",
            "type": "Int",
            "default": "0xFFFFFF",
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 55,
            "description": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.",
            "itemtype": "property",
            "name": "blendMode",
            "type": "Int",
            "default": "PIXI.blendModes.NORMAL;",
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 64,
            "description": "The shader that will be used to render the texture to the stage. Set to null to remove a current shader.",
            "itemtype": "property",
            "name": "shader",
            "type": "PIXI.AbstractFilter",
            "default": "null",
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 73,
            "description": "Sets the texture of the sprite",
            "itemtype": "method",
            "name": "setTexture",
            "params": [
                {
                    "name": "texture",
                    "description": "The PIXI texture that is displayed by the sprite",
                    "type": "Texture"
                }
            ],
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 81,
            "description": "Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n The frame ids are created when a Texture packer file has been loaded",
            "itemtype": "method",
            "name": "fromFrame",
            "static": 1,
            "params": [
                {
                    "name": "frameId",
                    "description": "The frame Id of the texture in the cache",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A new Sprite using a texture from the texture cache matching the frameId",
                "type": "Sprite"
            },
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Sprite.hx",
            "line": 93,
            "description": "A short hand way of creating a movieclip from an array of image ids",
            "static": 1,
            "itemtype": "method",
            "name": "fromImage",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "",
                    "type": "Bool",
                    "optional": true
                },
                {
                    "name": "scaleMode",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new Sprite using a texture from the texture cache matching the imageId",
                "type": "Sprite"
            },
            "class": "Sprite"
        },
        {
            "file": "pixi/display/Stage.hx",
            "line": 27,
            "description": "This will return the point containing global coords of the mouse.",
            "itemtype": "method",
            "name": "getMousePosition",
            "return": {
                "description": "The point containing the coords of the global InteractionData position.",
                "type": "Point"
            },
            "class": "Stage"
        },
        {
            "file": "pixi/display/Stage.hx",
            "line": 35,
            "description": "Sets the background color for the stage",
            "itemtype": "method",
            "name": "setBackgroundColor",
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "the color of the background, easiest way to pass this in is in hex format\n     like: 0xFFFFFF for white",
                    "type": "Int"
                }
            ],
            "class": "Stage"
        },
        {
            "file": "pixi/display/Stage.hx",
            "line": 44,
            "description": "Sets another DOM element which can receive mouse/touch interactions instead of the default Canvas element.\nThis is useful for when you have other DOM elements on top of the Canvas element.",
            "itemtype": "method",
            "name": "setInteractionDelegate",
            "params": [
                {
                    "name": "domElement",
                    "description": "This new domElement which will receive mouse/touch events",
                    "type": "Element"
                }
            ],
            "class": "Stage"
        },
        {
            "file": "pixi/extras/Strip.hx",
            "line": 17,
            "description": "The texture of the strip",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "Strip"
        },
        {
            "file": "pixi/extras/Strip.hx",
            "line": 25,
            "description": "Whether the strip is dirty or not",
            "itemtype": "property",
            "name": "dirty",
            "type": "Bool",
            "class": "Strip"
        },
        {
            "file": "pixi/extras/Strip.hx",
            "line": 33,
            "description": "if you need a padding, not yet implemented",
            "itemtype": "property",
            "name": "padding",
            "type": "Float",
            "class": "Strip"
        },
        {
            "file": "pixi/extras/Strip.hx",
            "line": 41,
            "description": "The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.",
            "itemtype": "property",
            "name": "blendMode",
            "type": "Int",
            "default": "PIXI.blendModes.NORMAL;",
            "class": "Strip"
        },
        {
            "file": "pixi/extras/Strip.hx",
            "line": 50,
            "description": "Triangles in canvas mode are automatically antialiased, use this value to force triangles to overlap a bit with each other.",
            "itemtype": "property",
            "name": "canvasPadding",
            "type": "Float",
            "class": "Strip"
        },
        {
            "file": "pixi/extras/TilingSprite.hx",
            "line": 22,
            "description": "The scaling of the image that is being tiled",
            "itemtype": "property",
            "name": "tileScale",
            "type": "Point",
            "class": "TilingSprite"
        },
        {
            "file": "pixi/extras/TilingSprite.hx",
            "line": 30,
            "description": "A point that represents the scale of the texture object",
            "itemtype": "property",
            "name": "tileScaleOffset",
            "type": "Point",
            "class": "TilingSprite"
        },
        {
            "file": "pixi/extras/TilingSprite.hx",
            "line": 38,
            "description": "The offset position of the image that is being tiled",
            "itemtype": "property",
            "name": "tilePosition",
            "type": "Point",
            "class": "TilingSprite"
        },
        {
            "file": "pixi/extras/TilingSprite.hx",
            "line": 46,
            "itemtype": "method",
            "name": "generateTilingTexture",
            "params": [
                {
                    "name": "forcePowerOfTwo",
                    "description": "Whether we want to force the texture to be a power of two",
                    "type": "Bool"
                }
            ],
            "class": "TilingSprite"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 16,
            "description": "Syncs the uniforms between the class object and the shaders.",
            "itemtype": "method",
            "name": "syncUniforms",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 23,
            "itemtype": "property",
            "name": "dirty",
            "type": "Bool",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 29,
            "itemtype": "property",
            "name": "padding",
            "type": "Float",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 35,
            "description": "An array of passes - some filters contain a few steps this array simply stores the steps in a liniear fashion.\nFor example the blur filter has two passes blurX and blurY.",
            "itemtype": "property",
            "name": "passes",
            "type": "Array<AbstractFilter> an array of filter objects",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 43,
            "itemtype": "property",
            "name": "shaders",
            "type": "Array an array of shaders",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 49,
            "itemtype": "property",
            "name": "uniforms",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AbstractFilter.hx",
            "line": 56,
            "itemtype": "property",
            "name": "fragmentSrc",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "AbstractFilter"
        },
        {
            "file": "pixi/filters/AlphaMaskFilter.hx",
            "line": 20,
            "description": "The texture used for the displacemtent map * must be power of 2 texture at the moment",
            "class": "AlphaMaskFilter"
        },
        {
            "file": "pixi/filters/AlphaMaskFilter.hx",
            "line": 25,
            "description": "Sets the map dimensions uniforms when the texture becomes available.",
            "itemtype": "method",
            "name": "onTextureLoaded",
            "class": "AlphaMaskFilter"
        },
        {
            "file": "pixi/filters/AsciiFilter.hx",
            "line": 15,
            "description": "The pixel size used by the filter.",
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "class": "AsciiFilter"
        },
        {
            "file": "pixi/filters/BlurFilter.hx",
            "line": 16,
            "description": "Sets the strength of both the blurX and blurY properties simultaneously",
            "class": "BlurFilter"
        },
        {
            "file": "pixi/filters/BlurFilter.hx",
            "line": 21,
            "description": "Sets the strength of the blurX property",
            "class": "BlurFilter"
        },
        {
            "file": "pixi/filters/BlurFilter.hx",
            "line": 26,
            "description": "Sets the strength of the blurX property",
            "class": "BlurFilter"
        },
        {
            "file": "pixi/filters/BlurXFilter.hx",
            "line": 15,
            "description": "Sets the strength of both the blur. Default: 2",
            "class": "BlurXFilter"
        },
        {
            "file": "pixi/filters/BlurYFilter.hx",
            "line": 15,
            "description": "Sets the strength of both the blur. Default: 2",
            "class": "BlurYFilter"
        },
        {
            "file": "pixi/filters/ColorMatrixFilter.hx",
            "line": 17,
            "description": "Sets the matrix of the color matrix filter",
            "class": "ColorMatrixFilter"
        },
        {
            "file": "pixi/filters/ColorStepFilter.hx",
            "line": 15,
            "description": "The number of steps to reduce the palette by.",
            "class": "ColorStepFilter"
        },
        {
            "file": "pixi/filters/ConvolutionFilter.hx",
            "line": 21,
            "description": "Sets the matrix of the color matrix filter",
            "class": "ConvolutionFilter"
        },
        {
            "file": "pixi/filters/ConvolutionFilter.hx",
            "line": 26,
            "description": "Width of the object you are transforming",
            "class": "ConvolutionFilter"
        },
        {
            "file": "pixi/filters/ConvolutionFilter.hx",
            "line": 31,
            "description": "Height of the object you are transforming",
            "class": "ConvolutionFilter"
        },
        {
            "file": "pixi/filters/CrossHatchFilter.hx",
            "line": 15,
            "description": "Sets the strength of both the blur. Default: 2",
            "class": "CrossHatchFilter"
        },
        {
            "file": "pixi/filters/DisplacementFilter.hx",
            "line": 21,
            "description": "The texture used for the displacemtent map * must be power of 2 texture at the moment",
            "class": "DisplacementFilter"
        },
        {
            "file": "pixi/filters/DisplacementFilter.hx",
            "line": 26,
            "description": "The multiplier used to scale the displacement result from the map calculation.",
            "class": "DisplacementFilter"
        },
        {
            "file": "pixi/filters/DisplacementFilter.hx",
            "line": 31,
            "description": "The offset used to move the displacement map.",
            "class": "DisplacementFilter"
        },
        {
            "file": "pixi/filters/DisplacementFilter.hx",
            "line": 36,
            "description": "Sets the map dimensions uniforms when the texture becomes available.",
            "itemtype": "method",
            "name": "onTextureLoaded",
            "class": "DisplacementFilter"
        },
        {
            "file": "pixi/filters/DotScreenFilter.hx",
            "line": 15,
            "description": "The scale of the effect.",
            "class": "DotScreenFilter"
        },
        {
            "file": "pixi/filters/DotScreenFilter.hx",
            "line": 20,
            "description": "The radius of the effect.",
            "class": "DotScreenFilter"
        },
        {
            "file": "pixi/filters/FilterBlock.hx",
            "line": 14,
            "description": "The renderable state of this FilterBlock.",
            "class": "FilterBlock"
        },
        {
            "file": "pixi/filters/FilterBlock.hx",
            "line": 19,
            "description": "The visible state of this FilterBlock.",
            "class": "FilterBlock"
        },
        {
            "file": "pixi/filters/GrayFilter.hx",
            "line": 15,
            "description": "The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color",
            "class": "GrayFilter"
        },
        {
            "file": "pixi/filters/InvertFilter.hx",
            "line": 15,
            "description": "The strength of the invert. 1 will fully invert the colors, 0 will make the object its normal color",
            "class": "InvertFilter"
        },
        {
            "file": "pixi/filters/NoiseFilter.hx",
            "line": 15,
            "description": "The amount of noise to apply.",
            "itemtype": "property",
            "name": "noise",
            "type": "Number",
            "class": "NoiseFilter"
        },
        {
            "file": "pixi/filters/NormalMapFilter.hx",
            "line": 21,
            "description": "The texture used for the displacemtent map * must be power of 2 texture.",
            "class": "NormalMapFilter"
        },
        {
            "file": "pixi/filters/NormalMapFilter.hx",
            "line": 26,
            "description": "The multiplier used to scale the displacement result from the map calculation.",
            "class": "NormalMapFilter"
        },
        {
            "file": "pixi/filters/NormalMapFilter.hx",
            "line": 31,
            "description": "The offset used to move the displacement map.",
            "class": "NormalMapFilter"
        },
        {
            "file": "pixi/filters/NormalMapFilter.hx",
            "line": 36,
            "description": "Sets the map dimensions uniforms when the texture becomes available.",
            "itemtype": "method",
            "name": "onTextureLoaded",
            "class": "NormalMapFilter"
        },
        {
            "file": "pixi/filters/PixelateFilter.hx",
            "line": 17,
            "description": "This a point that describes the size of the blocs. x is the width of the block and y is the the height.",
            "class": "PixelateFilter"
        },
        {
            "file": "pixi/filters/RGBSplitFilter.hx",
            "line": 15,
            "description": "The angle of the split.",
            "class": "RGBSplitFilter"
        },
        {
            "file": "pixi/filters/SepiaFilter.hx",
            "line": 15,
            "description": "The strength of the sepia. 1 will apply the full sepia effect, 0 will make the object its normal color/",
            "class": "SepiaFilter"
        },
        {
            "file": "pixi/filters/SmartBlurFilter.hx",
            "line": 15,
            "description": "The strength of the blur. Default: 2",
            "class": "SmartBlurFilter"
        },
        {
            "file": "pixi/filters/TiltShiftFilter.hx",
            "line": 14,
            "description": "The strength of the blur.",
            "class": "TiltShiftFilter"
        },
        {
            "file": "pixi/filters/TiltShiftFilter.hx",
            "line": 19,
            "description": "The X and Y value to end the effect at.",
            "class": "TiltShiftFilter"
        },
        {
            "file": "pixi/filters/TiltShiftFilter.hx",
            "line": 24,
            "description": "The strength of the gradient blur.",
            "class": "TiltShiftFilter"
        },
        {
            "file": "pixi/filters/TiltShiftFilter.hx",
            "line": 29,
            "description": "The X and Y value to start the effect at.",
            "class": "TiltShiftFilter"
        },
        {
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 15,
            "description": "The strength of the blur.",
            "class": "TiltShiftXFilter"
        },
        {
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 20,
            "description": "The X value to end the effect at.",
            "class": "TiltShiftXFilter"
        },
        {
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 25,
            "description": "The strength of the gradient blur.",
            "class": "TiltShiftXFilter"
        },
        {
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 30,
            "description": "The X value to start the effect at.",
            "class": "TiltShiftXFilter"
        },
        {
            "file": "pixi/filters/TiltShiftXFilter.hx",
            "line": 35,
            "description": "Updates the filter delta values.",
            "itemtype": "method",
            "name": "updateDelta",
            "class": "TiltShiftXFilter"
        },
        {
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 15,
            "description": "The strength of the blur.",
            "class": "TiltShiftYFilter"
        },
        {
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 20,
            "description": "The Y value to end the effect at.",
            "class": "TiltShiftYFilter"
        },
        {
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 25,
            "description": "The strength of the gradient blur.",
            "class": "TiltShiftYFilter"
        },
        {
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 30,
            "description": "The Y value to start the effect at.",
            "class": "TiltShiftYFilter"
        },
        {
            "file": "pixi/filters/TiltShiftYFilter.hx",
            "line": 35,
            "description": "Updates the filter delta values.",
            "itemtype": "method",
            "name": "updateDelta",
            "class": "TiltShiftYFilter"
        },
        {
            "file": "pixi/filters/TwistFilter.hx",
            "line": 17,
            "description": "This point describes the the offset of the twist.",
            "class": "TwistFilter"
        },
        {
            "file": "pixi/filters/TwistFilter.hx",
            "line": 22,
            "description": "The angle of the twist.",
            "class": "TwistFilter"
        },
        {
            "file": "pixi/filters/TwistFilter.hx",
            "line": 27,
            "description": "The radius of the twist.",
            "class": "TwistFilter"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 17,
            "description": "Creates a clone of this Circle instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the circle",
                "type": "Circle"
            },
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 25,
            "description": "Checks whether the x, and y coordinates passed to this function are contained within this circle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the point to test",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the point to test",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Whether the x/y coordinates are within this polygon",
                "type": "Bool"
            },
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 35,
            "description": "Returns the framing rectangle of the circle as a PIXI.Rectangle object",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "the framing rectangle",
                "type": "Rectangle"
            },
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 43,
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "default": "0",
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 50,
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "default": "0",
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Circle.hx",
            "line": 57,
            "itemtype": "property",
            "name": "radius",
            "type": "Float",
            "default": "0",
            "class": "Circle"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 18,
            "description": "Creates a clone of this Ellipse instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the ellipse",
                "type": "Ellipse"
            },
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 26,
            "description": "Checks whether the x and y coordinates passed to this function are contained within this ellipse",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the point to test",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the point to test",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Whether the x/y coords are within this ellipse",
                "type": "Bool"
            },
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 36,
            "description": "Returns the framing rectangle of the circle as a PIXI.Rectangle object",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "the framing rectangle",
                "type": "Rectangle"
            },
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 44,
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "default": "0",
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 51,
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "default": "0",
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 58,
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "default": "0",
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Ellipse.hx",
            "line": 65,
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "default": "0",
            "class": "Ellipse"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 18,
            "itemtype": "property",
            "name": "a",
            "type": "Int",
            "default": "1",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 25,
            "itemtype": "property",
            "name": "b",
            "type": "Int",
            "default": "0",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 32,
            "itemtype": "property",
            "name": "c",
            "type": "Int",
            "default": "0",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 39,
            "itemtype": "property",
            "name": "d",
            "type": "Number",
            "default": "1",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 46,
            "itemtype": "property",
            "name": "tx",
            "type": "Number",
            "default": "0",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 53,
            "itemtype": "property",
            "name": "ty",
            "type": "Number",
            "default": "0",
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 60,
            "description": "Creates a pixi matrix object based on the array given as a parameter",
            "itemtype": "method",
            "name": "fromArray",
            "params": [
                {
                    "name": "array",
                    "description": "The array that the matrix will be filled with",
                    "type": "Array"
                }
            ],
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 68,
            "description": "Creates an array from the current Matrix object",
            "itemtype": "method",
            "name": "toArray",
            "params": [
                {
                    "name": "transpose",
                    "description": "Whether we need to transpose the matrix or not",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "the newly created array which contains the matrix",
                "type": "Array"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 77,
            "description": "Get a new position with the current transformation applied.\nCan be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)",
            "itemtype": "method",
            "name": "apply",
            "params": [
                {
                    "name": "pos",
                    "description": "The origin",
                    "type": "Point"
                },
                {
                    "name": "newPos",
                    "description": "The point that the new position is assigned to (allowed to be same as input)",
                    "type": "Point",
                    "optional": true
                }
            ],
            "return": {
                "description": "The new point, transformed through this matrix",
                "type": "Point"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 88,
            "description": "Get a new position with the inverse of the current transformation applied.\nCan be used to go from the world coordinate space to a child's coordinate space. (e.g. input)",
            "itemtype": "method",
            "name": "applyInverse",
            "params": [
                {
                    "name": "pos",
                    "description": "The origin",
                    "type": "Point"
                },
                {
                    "name": "newPos",
                    "description": "The point that the new position is assigned to (allowed to be same as input)",
                    "type": "Point",
                    "optional": true
                }
            ],
            "return": {
                "description": "The new point, inverse-transformed through this matrix",
                "type": "Point"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 99,
            "description": "Translates the matrix on the x and y.",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "This matrix. Good for chaining method calls.",
                "type": "Matrix"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 109,
            "description": "Applies a scale transformation to the matrix.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "The amount to scale horizontally",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The amount to scale vertically",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "This matrix. Good for chaining method calls.",
                "type": "Matrix"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 119,
            "description": "Applies a rotation transformation to the matrix.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "The angle in radians.",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "This matrix. Good for chaining method calls.",
                "type": "Matrix"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 127,
            "description": "Appends the given Matrix to this Matrix.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix"
                }
            ],
            "return": {
                "description": "This matrix. Good for chaining method calls.",
                "type": "Matrix"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Matrix.hx",
            "line": 136,
            "description": "Resets this Matix to an identity (default) matrix.",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This matrix. Good for chaining method calls.",
                "type": "Matrix"
            },
            "class": "Matrix"
        },
        {
            "file": "pixi/geom/Point.hx",
            "line": 16,
            "description": "Creates a clone of this point",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the point",
                "type": "Point"
            },
            "class": "Point"
        },
        {
            "file": "pixi/geom/Point.hx",
            "line": 24,
            "description": "Sets the point to a new x and y position.\nIf y is ommited, both x and y will be set to x.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "position of the point on the x axis",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "position of the point on the y axis",
                    "type": "Float",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "Point"
        },
        {
            "file": "pixi/geom/Point.hx",
            "line": 34,
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "default": "0",
            "class": "Point"
        },
        {
            "file": "pixi/geom/Point.hx",
            "line": 41,
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "default": "0",
            "class": "Point"
        },
        {
            "file": "pixi/geom/Polygon.hx",
            "line": 18,
            "description": "Creates a clone of this polygon",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the polygon",
                "type": "Polygon"
            },
            "class": "Polygon"
        },
        {
            "file": "pixi/geom/Polygon.hx",
            "line": 26,
            "description": "Checks whether the x and y coordinates passed to this function are contained within this polygon",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the point to test",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the point to test",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Whether the x/y coordinates are within this polygon",
                "type": "Bool"
            },
            "class": "Polygon"
        },
        {
            "file": "pixi/geom/Polygon.hx",
            "line": 36,
            "description": "An array of the points of this polygon",
            "itemtype": "property",
            "name": "points",
            "type": "Array<Point>",
            "class": "Polygon"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 18,
            "description": "Creates a clone of this Rectangle instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the rectangle",
                "type": "Rectangle"
            },
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 26,
            "description": "Checks whether the x and y coordinates passed to this function are contained within this Rectangle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the point to test",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the point to test",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Whether the x/y coords are within this Rectangle",
                "type": "Bool"
            },
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 36,
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "default": "0",
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 43,
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "default": "0",
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 50,
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "default": "0",
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/Rectangle.hx",
            "line": 57,
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "default": "0",
            "class": "Rectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 19,
            "description": "Creates a clone of this Rounded Rectangle",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the rounded rectangle",
                "type": "RoundedRectangle"
            },
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 27,
            "description": "Checks whether the x and y coordinates given are contained within this Rounded Rectangle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the point to test",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the point to test",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Whether the x/y coordinates are within this Rounded Rectangle",
                "type": "Boolean"
            },
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 37,
            "itemtype": "property",
            "name": "x",
            "type": "Float",
            "default": "0",
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 44,
            "itemtype": "property",
            "name": "y",
            "type": "Float",
            "default": "0",
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 51,
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "default": "0",
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 58,
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "default": "0",
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/geom/RoundedRectangle.hx",
            "line": 65,
            "itemtype": "property",
            "name": "radius",
            "type": "Float",
            "default": "20",
            "class": "RoundedRectangle"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 26,
            "description": "The array of asset URLs that are going to be loaded",
            "itemtype": "property",
            "name": "assetURLs",
            "type": "Array<String>",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 34,
            "itemtype": "property",
            "name": "loadCount",
            "type": "Int",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 40,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Boolean",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 48,
            "description": "Maps file extension to loader types",
            "itemtype": "property",
            "name": "loadersByType",
            "type": "Dynamic",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 55,
            "description": "Fired when an item finishes loading",
            "itemtype": "property",
            "name": "onProgress",
            "type": "Function",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 62,
            "description": "Fired when all the assets are loaded",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 69,
            "description": "Starts loading the assets sequentially",
            "itemtype": "method",
            "name": "load",
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AssetLoader.hx",
            "line": 76,
            "description": "Given a filename, returns its extension.",
            "itemtype": "method",
            "name": "_getDataType",
            "params": [
                {
                    "name": "str",
                    "description": "the name of the asset",
                    "type": "String"
                }
            ],
            "class": "AssetLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 20,
            "description": "The url of the json file",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 28,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Boolean",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 36,
            "description": "[read-only] The base url of json file",
            "itemtype": "property",
            "name": "baseUrl",
            "type": "String",
            "readonly": "",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 45,
            "description": "[read-only] Whether the data has loaded yet",
            "itemtype": "property",
            "name": "loaded",
            "type": "Boolean",
            "readonly": "",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 54,
            "description": "Parsed json response",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/AtlasLoader.hx",
            "line": 59,
            "description": "Starts loading the JSON file",
            "itemtype": "method",
            "name": "load",
            "class": "AtlasLoader"
        },
        {
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 23,
            "description": "The url of the bitmap font data",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "BitmapFontLoader"
        },
        {
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 31,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Boolean",
            "class": "BitmapFontLoader"
        },
        {
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 39,
            "description": "[read-only] The base url of the bitmap font data",
            "itemtype": "property",
            "name": "baseUrl",
            "type": "String",
            "readonly": "",
            "class": "BitmapFontLoader"
        },
        {
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 48,
            "description": "[read-only] The texture of the bitmap font",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "BitmapFontLoader"
        },
        {
            "file": "pixi/loaders/BitmapFontLoader.hx",
            "line": 56,
            "description": "Loads the XML font data",
            "itemtype": "method",
            "name": "load",
            "class": "BitmapFontLoader"
        },
        {
            "file": "pixi/loaders/ImageLoader.hx",
            "line": 22,
            "description": "The texture being loaded",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "ImageLoader"
        },
        {
            "file": "pixi/loaders/ImageLoader.hx",
            "line": 30,
            "description": "if the image is loaded with loadFramedSpriteSheet\nframes will contain the sprite sheet frames",
            "itemtype": "property",
            "name": "frames",
            "type": "Array",
            "readonly": "",
            "class": "ImageLoader"
        },
        {
            "file": "pixi/loaders/ImageLoader.hx",
            "line": 40,
            "description": "Loads image or takes it from cache",
            "itemtype": "method",
            "name": "load",
            "class": "ImageLoader"
        },
        {
            "file": "pixi/loaders/ImageLoader.hx",
            "line": 47,
            "description": "Loads image and split it to uniform sized frames",
            "itemtype": "method",
            "name": "loadFramedSpriteSheet",
            "params": [
                {
                    "name": "frameWidth",
                    "description": "width of each frame",
                    "type": "Float"
                },
                {
                    "name": "frameHeight",
                    "description": "height of each frame",
                    "type": "Float"
                },
                {
                    "name": "textureName",
                    "description": "if given, the frames will be cached in <textureName>-<ord> format",
                    "type": "String"
                }
            ],
            "class": "ImageLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 21,
            "description": "The url of the json file",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 29,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Bool",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 37,
            "description": "[read-only] The base url of the json file",
            "itemtype": "property",
            "name": "baseUrl",
            "type": "String",
            "readonly": "",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 46,
            "description": "[read-only] Whether the data has loaded yet",
            "itemtype": "property",
            "name": "loaded",
            "type": "Bool",
            "readonly": "",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 55,
            "description": "Parsed json response",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 60,
            "description": "XDomainRequest for cross origin",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/JsonLoader.hx",
            "line": 65,
            "description": "Loads the JSON data",
            "itemtype": "method",
            "name": "load",
            "class": "JsonLoader"
        },
        {
            "file": "pixi/loaders/SpineLoader.hx",
            "line": 24,
            "description": "The url of the json file",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "SpineLoader"
        },
        {
            "file": "pixi/loaders/SpineLoader.hx",
            "line": 32,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Boolean",
            "class": "SpineLoader"
        },
        {
            "file": "pixi/loaders/SpineLoader.hx",
            "line": 40,
            "description": "[read-only] Whether the data has loaded yet",
            "itemtype": "property",
            "name": "loaded",
            "type": "Boolean",
            "readonly": "",
            "class": "SpineLoader"
        },
        {
            "file": "pixi/loaders/SpineLoader.hx",
            "line": 49,
            "description": "Loads the JSON data",
            "itemtype": "method",
            "name": "load",
            "class": "SpineLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 26,
            "description": "The url of the atlas data",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 34,
            "description": "Whether the requests should be treated as cross origin",
            "itemtype": "property",
            "name": "crossorigin",
            "type": "Boolean",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 42,
            "description": "[read-only] The base url of the bitmap font data",
            "itemtype": "property",
            "name": "baseUrl",
            "type": "String",
            "readonly": "",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 51,
            "description": "The texture being loaded",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 59,
            "description": "The frames of the sprite sheet",
            "itemtype": "property",
            "name": "frames",
            "type": "Object",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 67,
            "description": "Parsed json response",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/loaders/SpriteSheetLoader.hx",
            "line": 72,
            "description": "Loads the SpriteSheet JSON data",
            "itemtype": "method",
            "name": "load",
            "class": "SpriteSheetLoader"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "line": 15,
            "description": "Initializes the particle for use, based on the properties that have to\nhave been set already on the particle.",
            "itemtype": "method",
            "name": "init",
            "class": "AnimatedParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "line": 22,
            "description": "Sets the textures for the particle.",
            "itemtype": "method",
            "name": "applyArt",
            "params": [
                {
                    "name": "art",
                    "description": "An array of pixi.textures.Texture objects for this animated particle.",
                    "type": "Array<pixi.textures.Texture>"
                }
            ],
            "class": "AnimatedParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "line": 29,
            "description": "Updates the particle.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "delta",
                    "description": "Time elapsed since the previous frame, in __seconds__.",
                    "type": "Float"
                }
            ],
            "class": "AnimatedParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/AnimatedParticle.hx",
            "line": 36,
            "description": "Destroys the particle, removing references and preventing future use.",
            "itemtype": "method",
            "name": "destroy",
            "class": "AnimatedParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 6,
            "description": "If either ownerPos or spawnPos has changed since the previous update.",
            "itemtype": "property",
            "name": "_posChanged",
            "type": "Bool",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 12,
            "description": "Acceleration to apply to particles. Using this disables\nany interpolation of particle speed. If the particles do\nnot have a rotation speed, then they will be rotated to\nmatch the direction of travel.",
            "itemtype": "property",
            "name": "acceleration",
            "type": "pixi.geom.Point",
            "default": "null",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 22,
            "description": "If particles should be added at the back of the display list instead of the front.",
            "itemtype": "property",
            "name": "addAtBack",
            "type": "Bool",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 28,
            "description": "Angle at which to start spawning particles in a burst.",
            "itemtype": "property",
            "name": "angleStart",
            "type": "Float",
            "default": "0",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 35,
            "description": "An easing function for nonlinear interpolation of values. Accepts a single\nparameter of time as a value from 0-1, inclusive. Expected outputs are values\nfrom 0-1, inclusive.",
            "itemtype": "property",
            "name": "customEase",
            "type": "Void->Void",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 44,
            "description": "The amount of time in seconds to emit for before setting emit to false.\nA value of -1 is an unlimited amount of time.",
            "itemtype": "property",
            "name": "emitterLifetime",
            "type": "Float",
            "default": "-1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 52,
            "description": "The ending alpha of all particles.",
            "itemtype": "property",
            "name": "endAlpha",
            "type": "Float",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 59,
            "description": "The ending color of all particles, as red, green, and blue uints from 0-255.",
            "itemtype": "property",
            "name": "endColor",
            "type": "Array<Int>",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 65,
            "description": "The ending scale of all particles.",
            "itemtype": "property",
            "name": "endScale",
            "type": "Float",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 72,
            "description": "The ending speed of all particles.",
            "itemtype": "property",
            "name": "endSpeed",
            "type": "Float",
            "default": "0",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 79,
            "description": "Extra data for use in custom particles. The emitter doesn't look inside, but\npasses it on to the particle to use in init().",
            "itemtype": "property",
            "name": "extraData",
            "type": "Dynamic",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 86,
            "description": "Time between particle spawns in seconds.",
            "itemtype": "property",
            "name": "frequency",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 92,
            "description": "The maximum lifetime for a particle, in seconds.",
            "itemtype": "property",
            "name": "maxLifetime",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 98,
            "description": "Maximum number of particles to keep alive at a time. If this limit\nis reached, no more particles will spawn until some have died.",
            "itemtype": "property",
            "name": "maxParticles",
            "type": "Int",
            "default": "1000",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 106,
            "description": "The maximum start rotation for a particle, in degrees. This value\nis ignored if the spawn type is \"burst\" or \"arc\".",
            "itemtype": "property",
            "name": "maxStartRotation",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 113,
            "description": "The maximum rotation speed for a particle, in degrees per second.\nThis only visually spins the particle, it does not change direction of movement.",
            "itemtype": "property",
            "name": "maxRotationSpeed",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 120,
            "description": "A minimum multiplier for the scale of a particle at both start and\nend. A value between minimumScaleMultiplier and 1 is randomly generated\nand multiplied with startScale and endScale to provide the actual\nstartScale and endScale for each particle.",
            "itemtype": "property",
            "name": "minimumScaleMultiplier",
            "type": "Float",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 130,
            "description": "The minimum lifetime for a particle, in seconds.",
            "itemtype": "property",
            "name": "minLifetime",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 136,
            "description": "The minimum rotation speed for a particle, in degrees per second.\nThis only visually spins the particle, it does not change direction of movement.",
            "itemtype": "property",
            "name": "minRotationSpeed",
            "type": "Float",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 143,
            "description": "The world position of the emitter's owner, to add spawnPos to when\nspawning particles. To change this, use updateSpawnOrigin().",
            "itemtype": "property",
            "name": "ownerPos",
            "type": "pixi.geom.Point",
            "default": "{x:0, y:0}",
            "readonly": "",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 152,
            "description": "The display object to add particles to.",
            "itemtype": "property",
            "name": "parent",
            "type": "pixi.display.DisplayObjectContainer",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 158,
            "description": "The blend mode for all particles, as named by PIXI.blendModes.",
            "itemtype": "property",
            "name": "particleBlendMode",
            "type": "Int",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 164,
            "description": "An array of PIXI Texture objects.",
            "itemtype": "property",
            "name": "particleImages",
            "type": "Array<pixi.textures.Texture>",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 170,
            "description": "Spacing between particles in a burst. 0 gives a random angle for each particle.",
            "itemtype": "property",
            "name": "particleSpacing",
            "type": "Float",
            "default": "0",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 177,
            "description": "Float of particles to spawn each wave in a burst.",
            "itemtype": "property",
            "name": "particlesPerWave",
            "type": "Int",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 184,
            "description": "Rotation of the emitter or emitter's owner in degrees. This is added to\nthe calculated spawn angle.\nTo change this, use rotate().",
            "itemtype": "property",
            "name": "rotation",
            "type": "Float",
            "default": "0",
            "readonly": "",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 194,
            "description": "A circle relative to spawnPos to spawn particles inside if the spawn type is \"circle\".",
            "itemtype": "property",
            "name": "spawnCircle",
            "type": "pixi.geom.Circle",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 200,
            "description": "Position at which to spawn particles, relative to the emitter's owner's origin.\nFor example, the flames of a rocket travelling right might have a spawnPos\nof {x:-50, y:0}.\nto spawn at the rear of the rocket.\nTo change this, use updateSpawnPos().",
            "itemtype": "property",
            "name": "spawnPos",
            "type": "pixi.geom.Point",
            "readonly": "",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 211,
            "description": "A rectangle relative to spawnPos to spawn particles inside if the spawn type is \"rect\".",
            "itemtype": "property",
            "name": "spawnRect",
            "type": "pixi.geom.Rectangle",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 217,
            "description": "How the particles will be spawned. Valid types are \"point\", \"rectangle\",\n\"circle\", \"burst\".",
            "itemtype": "property",
            "name": "spawnType",
            "type": "String",
            "readonly": "",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 225,
            "description": "The starting alpha of all particles.",
            "itemtype": "property",
            "name": "startAlpha",
            "type": "Float",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 233,
            "description": "The starting scale of all particles.",
            "itemtype": "property",
            "name": "startScale",
            "type": "Float",
            "default": "1",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 240,
            "description": "The starting speed of all particles.",
            "itemtype": "property",
            "name": "startSpeed",
            "type": "Float",
            "default": "0",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 259,
            "description": "Kills all active particles immediately.",
            "itemtype": "method",
            "name": "cleanup",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 265,
            "description": "Destroys the emitter and all of its particles.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 271,
            "description": "Sets up the emitter based on the config settings.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "particleImages",
                    "description": "A texture or array of textures to use for the particles.",
                    "type": "Array<pixi.textures.Texture>"
                },
                {
                    "name": "config",
                    "description": "A configuration object containing settings for the emitter.",
                    "type": "Dynamic"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 279,
            "description": "Recycles an individual particle.",
            "itemtype": "method",
            "name": "recycle",
            "params": [
                {
                    "name": "particle",
                    "description": "The particle to recycle.",
                    "type": "Particle"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 286,
            "description": "Prevents emitter position interpolation in the next update.\nThis should be used if you made a major position change of your emitter's owner\nthat was not normal movement.",
            "itemtype": "method",
            "name": "resetPositionTracking",
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 294,
            "description": "Sets the rotation of the emitter to a new value.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "newRot",
                    "description": "The new rotation, in degrees.",
                    "type": "Float"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 301,
            "description": "Updates all particles spawned by this emitter and emits new ones.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "delta",
                    "description": "Time elapsed since the previous frame, in __seconds__.",
                    "type": "Float"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 308,
            "description": "Changes the position of the emitter's owner. You should call this if you are adding\nparticles to the world display object that your emitter's owner is moving around in.",
            "itemtype": "method",
            "name": "updateOwnerPos",
            "params": [
                {
                    "name": "x",
                    "description": "The new x value of the emitter's owner.",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The new y value of the emitter's owner.",
                    "type": "Float"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Emitter.hx",
            "line": 317,
            "description": "Changes the spawn position of the emitter.",
            "itemtype": "method",
            "name": "updateSpawnPos",
            "params": [
                {
                    "name": "x",
                    "description": "The new x value of the spawn position for the emitter.",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The new y value of the spawn position for the emitter.",
                    "type": "Float"
                }
            ],
            "class": "Emitter"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 6,
            "description": "Acceleration to apply to the particle.",
            "itemtype": "property",
            "name": "acceleration",
            "type": "pixi.geom.Point",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 12,
            "description": "The current age of the particle, in seconds.",
            "itemtype": "property",
            "name": "age",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 18,
            "description": "A simple easing function to be applied to all properties that\nare being interpolated.",
            "itemtype": "property",
            "name": "ease",
            "type": "Void->Void",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 25,
            "description": "The emitter that controls this particle.",
            "itemtype": "property",
            "name": "emitter",
            "type": "Emitter",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 31,
            "description": "The alpha of the particle at the end of its life.",
            "itemtype": "property",
            "name": "endAlpha",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 38,
            "description": "The scale of the particle at the start of its life.",
            "itemtype": "property",
            "name": "endScale",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 44,
            "description": "The speed of the particle at the end of its life.",
            "itemtype": "property",
            "name": "endSpeed",
            "type": "Number",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 50,
            "description": "Extra data that the emitter passes along for custom particles.",
            "itemtype": "property",
            "name": "extraData",
            "type": "Dynamic",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 56,
            "description": "The maximum lifetime of this particle, in seconds.",
            "itemtype": "property",
            "name": "maxLife",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 62,
            "description": "The alpha of the particle at the start of its life.",
            "itemtype": "property",
            "name": "startAlpha",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 68,
            "description": "The tint of the particle at the start of its life.",
            "itemtype": "property",
            "name": "startColor",
            "type": "Array<Int>",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 74,
            "description": "The scale of the particle at the start of its life.",
            "itemtype": "property",
            "name": "startScale",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 80,
            "description": "The speed of the particle at the start of its life.",
            "itemtype": "property",
            "name": "startSpeed",
            "type": "Float",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 86,
            "description": "The velocity of the particle. Speed may change, but the angle also\ncontained in velocity is constant.",
            "itemtype": "property",
            "name": "velocity",
            "type": "pixi.geom.Point",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 100,
            "description": "Sets the texture for the particle. This can be overridden to allow\nfor an animated particle.",
            "itemtype": "method",
            "name": "applyArt",
            "params": [
                {
                    "name": "art",
                    "description": "The texture to set.",
                    "type": "pixi.textures.Texture"
                }
            ],
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 108,
            "description": "Destroys the particle, removing references and preventing future use.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 114,
            "description": "Initializes the particle for use, based on the properties that have to\nhave been set already on the particle.",
            "itemtype": "method",
            "name": "init",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 121,
            "description": "Kills the particle, removing it from the display list\nand telling the emitter to recycle it.",
            "itemtype": "method",
            "name": "kill",
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/Particle.hx",
            "line": 128,
            "description": "Updates the particle.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "delta",
                    "description": "Time elapsed since the previous frame, in __seconds__.",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "The standard interpolation multiplier (0-1) used for all relevant particle\n                    properties. A value of -1 means the particle died of old age instead.",
                "type": "Float"
            },
            "class": "Particle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 6,
            "description": "Combines separate color components (0-255) into a single uint color.",
            "itemtype": "method",
            "name": "combineRGBComponents",
            "params": [
                {
                    "name": "r",
                    "description": "The red value of the color",
                    "type": "Int"
                },
                {
                    "name": "g",
                    "description": "The green value of the color",
                    "type": "Int"
                },
                {
                    "name": "b",
                    "description": "The blue value of the color",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "The color in the form of 0xRRGGBB",
                "type": "Int"
            },
            "static": 1,
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 17,
            "description": "Generates a custom ease function, based on the GreenSock custom ease, as demonstrated\nby the related tool at http://www.greensock.com/customease/.",
            "itemtype": "method",
            "name": "generateEase",
            "params": [
                {
                    "name": "segments",
                    "description": "An array of segments, as created by\nhttp://www.greensock.com/customease/.",
                    "type": "Array<Dynamic>"
                }
            ],
            "return": {
                "description": "A function that calculates the percentage of change at\n\t\t\t\t\ta given point in time (0-1 inclusive).",
                "type": "Float->Float"
            },
            "static": 1,
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 29,
            "description": "Gets a blend mode, ensuring that it is valid.",
            "itemtype": "method",
            "name": "getBlendMode",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the blend mode to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The blend mode as specified in the PIXI.blendModes enumeration.",
                "type": "Int"
            },
            "static": 1,
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 38,
            "description": "Converts a hex string from \"#AARRGGBB\", \"#RRGGBB\", \"0xAARRGGBB\", \"0xRRGGBB\",\n\"AARRGGBB\", or \"RRGGBB\" to an array of ints of 0-255 or Numbers from 0-1, as\n[r, g, b, (a)].",
            "itemtype": "method",
            "name": "hexToRGB",
            "params": [
                {
                    "name": "color",
                    "description": "The input color string.",
                    "type": "String"
                },
                {
                    "name": "output",
                    "description": "An array to put the output in. If omitted, a new array is created.",
                    "type": "Array<Int>"
                }
            ],
            "return": {
                "description": "The array of numeric color values.",
                "type": "Array<Int>"
            },
            "static": 1,
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 50,
            "description": "Returns the length (or magnitude) of this point.",
            "itemtype": "method",
            "name": "length",
            "static": 1,
            "params": [
                {
                    "name": "point",
                    "description": "The point to measure length",
                    "type": "pixi.geom.Point"
                }
            ],
            "return": {
                "description": "The length of this point.",
                "type": "Float"
            },
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 59,
            "description": "Reduces the point to a length of 1.",
            "itemtype": "method",
            "name": "normalize",
            "static": 1,
            "params": [
                {
                    "name": "point",
                    "description": "The point to normalize",
                    "type": "pixi.geom.Point"
                }
            ],
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 67,
            "description": "Rotates a point by a given angle.",
            "itemtype": "method",
            "name": "rotatePoint",
            "params": [
                {
                    "name": "angle",
                    "description": "The angle to rotate by in degrees",
                    "type": "Float"
                },
                {
                    "name": "p",
                    "description": "The point to rotate around 0,0.",
                    "type": "pixi.geom.Point"
                }
            ],
            "static": 1,
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/ParticleUtils.hx",
            "line": 76,
            "description": "Multiplies the x and y values of this point by a value.",
            "itemtype": "method",
            "name": "scaleBy",
            "static": 1,
            "params": [
                {
                    "name": "point",
                    "description": "The point to scaleBy",
                    "type": "pixi.geom.Point"
                },
                {
                    "name": "value",
                    "description": "The value to scale by.",
                    "type": "Float"
                }
            ],
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 6,
            "description": "The function representing the path the particle should take.",
            "itemtype": "property",
            "name": "path",
            "type": "Float->Float",
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 12,
            "description": "The initial rotation in degrees of the particle, because the direction of the path\nis based on that.",
            "itemtype": "property",
            "name": "initialRotation",
            "type": "Float",
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 19,
            "description": "The initial position of the particle, as all path movement is added to that.",
            "itemtype": "property",
            "name": "initialPosition",
            "type": "pixi.geom.Point",
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 25,
            "description": "Total single directional movement, due to speed.",
            "itemtype": "property",
            "name": "movement",
            "type": "Float",
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 56,
            "description": "Initializes the particle for use, based on the properties that have to\nhave been set already on the particle.",
            "itemtype": "method",
            "name": "init",
            "class": "PathParticle"
        },
        {
            "file": "pixi/plugins/particles/cloudkid/PathParticle.hx",
            "line": 63,
            "description": "Destroys the particle, removing references and preventing future use.",
            "itemtype": "method",
            "name": "destroy",
            "class": "PathParticle"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 29,
            "description": "The arc method creates an arc/curve (used to create circles, or parts of circles).",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x-coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "cy",
                    "description": "The y-coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Float"
                },
                {
                    "name": "startAngle",
                    "description": "The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)",
                    "type": "Float"
                },
                {
                    "name": "endAngle",
                    "description": "The ending angle, in radians",
                    "type": "Float"
                },
                {
                    "name": "anticlockwise",
                    "description": "Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 43,
            "description": "Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method.",
            "itemtype": "method",
            "name": "lineStyle",
            "params": [
                {
                    "name": "lineWidth",
                    "description": "width of the line to draw, will update the object's stored style",
                    "type": "Float"
                },
                {
                    "name": "color",
                    "description": "color of the line to draw, will update the object's stored style",
                    "type": "Int"
                },
                {
                    "name": "alpha",
                    "description": "[alpha] of the line to draw, will update the object's stored style",
                    "type": "Float"
                }
            ],
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 53,
            "description": "Moves the current drawing position to (x, y).",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "the X coordinate to move to",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "the Y coordinate to move to",
                    "type": "Float"
                }
            ],
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 62,
            "description": "Draws a line using the current line style from the current drawing position to (x, y);\nthe current drawing position is then set to (x, y).",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "the X coordinate to draw to",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "the Y coordinate to draw to",
                    "type": "Float"
                }
            ],
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 72,
            "description": "Calculate the points for a bezier curve.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cpX",
                    "description": "Control point x",
                    "type": "Float"
                },
                {
                    "name": "cpY",
                    "description": "Control point y",
                    "type": "Float"
                },
                {
                    "name": "cpX2",
                    "description": "Second Control point x",
                    "type": "Float"
                },
                {
                    "name": "cpY2",
                    "description": "Second Control point y",
                    "type": "Float"
                },
                {
                    "name": "toX",
                    "description": "Destination point x",
                    "type": "Float"
                },
                {
                    "name": "toY",
                    "description": "Destination point y",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 86,
            "description": "the arcTo() method creates an arc/curve between two tangents on the canvas.\n\n\"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "x1",
                    "description": "The x-coordinate of the beginning of the arc",
                    "type": "Float"
                },
                {
                    "name": "y1",
                    "description": "The y-coordinate of the beginning of the arc",
                    "type": "Float"
                },
                {
                    "name": "x2",
                    "description": "The x-coordinate of the end of the arc",
                    "type": "Float"
                },
                {
                    "name": "y2",
                    "description": "The y-coordinate of the end of the arc",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius of the arc",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 101,
            "description": "The arc() method creates an arc/curve (used to create circles, or parts of circles).",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "cx",
                    "description": "The x-coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "cy",
                    "description": "The y-coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Float"
                },
                {
                    "name": "startAngle",
                    "description": "The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)",
                    "type": "Float"
                },
                {
                    "name": "endAngle",
                    "description": "The ending angle, in radians",
                    "type": "Float"
                },
                {
                    "name": "anticlockwise",
                    "description": "Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.",
                    "type": "Float",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 115,
            "description": "Specifies a simple one-color fill that subsequent calls to other Graphics methods\n(such as lineTo() or drawCircle()) use when drawing.",
            "itemtype": "method",
            "name": "beginFill",
            "params": [
                {
                    "name": "color",
                    "description": "the color of the fill",
                    "type": "Int"
                },
                {
                    "name": "alpha",
                    "description": "the alpha of the fill",
                    "type": "Float",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 126,
            "description": "Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.",
            "itemtype": "method",
            "name": "endFill",
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 134,
            "itemtype": "method",
            "name": "drawRect",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the top-left of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the top-left of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 145,
            "itemtype": "method",
            "name": "drawRoundedRect",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the top-left of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the top-left of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "Radius of the rectangle corners",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 157,
            "description": "Draws a circle.",
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the center of the circle",
                    "type": "Float"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 168,
            "description": "Draws an ellipse.",
            "itemtype": "method",
            "name": "drawEllipse",
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate of the center of the ellipse",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate of the center of the ellipse",
                    "type": "Float"
                },
                {
                    "name": "width",
                    "description": "The half width of the ellipse",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The half height of the ellipse",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 180,
            "description": "Draws a polygon using the given path.",
            "itemtype": "method",
            "name": "drawPolygon",
            "params": [
                {
                    "name": "path",
                    "description": "The path data used to construct the polygon.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 189,
            "description": "Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 197,
            "description": "Updates texture size based on canvas size",
            "itemtype": "method",
            "name": "updateCachedSpriteTexture",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 204,
            "description": "Destroys a previous cached sprite.",
            "itemtype": "method",
            "name": "destroyCachedSprite",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 211,
            "description": "Update the bounds of the object",
            "itemtype": "method",
            "name": "updateBounds",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 218,
            "description": "Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.",
            "itemtype": "method",
            "name": "drawShape",
            "params": [
                {
                    "name": "shape",
                    "description": "The Shape object to draw.",
                    "type": "Circle|Rectangle|Ellipse|Line|Polygon"
                }
            ],
            "return": {
                "description": "The generated GraphicsData object.",
                "type": "GraphicsData"
            },
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 230,
            "description": "The alpha value used when filling the Graphics object.",
            "itemtype": "property",
            "name": "fillAlpha",
            "type": "Float",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 238,
            "description": "The width (thickness) of any lines drawn.",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Float",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 246,
            "description": "The color of any lines drawn.",
            "itemtype": "property",
            "name": "lineColor",
            "type": "String",
            "default": "0",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 255,
            "description": "The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to reset the tint.",
            "itemtype": "property",
            "name": "tint",
            "type": "Int",
            "default": "0xFFFFFF",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 264,
            "description": "The blend mode to be applied to the graphic shape. Apply a value of PIXI.blendModes.NORMAL to reset the blend mode.",
            "itemtype": "property",
            "name": "blendMode",
            "type": "Int",
            "default": "PIXI.blendModes.NORMAL;",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 273,
            "description": "Whether this shape is being used as a mask.",
            "itemtype": "property",
            "name": "isMask",
            "type": "Bool",
            "class": "Graphics"
        },
        {
            "file": "pixi/primitives/Graphics.hx",
            "line": 281,
            "description": "The bounds' padding used for bounds calculation.",
            "itemtype": "property",
            "name": "boundsPadding",
            "type": "Float",
            "class": "Graphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 18,
            "description": "Resizes the canvas to the specified width and height.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "the new width of the canvas",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the new height of the canvas",
                    "type": "Float"
                }
            ],
            "class": "CanvasBuffer"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 27,
            "description": "The width of the Canvas in pixels.",
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "class": "CanvasBuffer"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 35,
            "description": "The height of the Canvas in pixels.",
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "class": "CanvasBuffer"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 43,
            "description": "The Canvas object that belongs to this CanvasBuffer.",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement",
            "class": "CanvasBuffer"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasBuffer.hx",
            "line": 51,
            "description": "A CanvasRenderingContext2D object representing a two-dimensional rendering context.",
            "itemtype": "property",
            "name": "context",
            "type": "CanvasRenderingContext2D",
            "class": "CanvasBuffer"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasMaskManager.hx",
            "line": 13,
            "description": "This method adds it to the current stack of masks",
            "itemtype": "method",
            "name": "pushMask",
            "params": [
                {
                    "name": "maskData",
                    "description": "the maskData that will be pushed"
                },
                {
                    "name": "context",
                    "description": "the 2d drawing method of the canvas",
                    "type": "Context2D"
                }
            ],
            "class": "CanvasMaskManager"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasMaskManager.hx",
            "line": 22,
            "description": "Restores the current drawing context to the state it was before the mask was applied",
            "itemtype": "method",
            "name": "popMask",
            "params": [
                {
                    "name": "context",
                    "description": "the 2d drawing method of the canvas",
                    "type": "Context2D"
                }
            ],
            "class": "CanvasMaskManager"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 10,
            "description": "Number of steps which will be used as a cap when rounding colors",
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 15,
            "description": "Number of steps which will be used as a cap when rounding colors",
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 20,
            "description": "Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method",
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 27,
            "description": "Basically this method just needs a sprite and a color and tints the sprite\nwith the given color",
            "itemtype": "method",
            "name": "getTintedTexture",
            "params": [
                {
                    "name": "sprite",
                    "description": "the sprite to tint",
                    "type": "Sprite"
                },
                {
                    "name": "color",
                    "description": "the color to use to tint the sprite with",
                    "type": "Float"
                }
            ],
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 37,
            "description": "Tint a texture using the \"multiply\" operation",
            "itemtype": "method",
            "name": "tintWithMultiply",
            "params": [
                {
                    "name": "texture",
                    "description": "the texture to tint",
                    "type": "Texture"
                },
                {
                    "name": "color",
                    "description": "the color to use to tint the sprite with",
                    "type": "Int"
                },
                {
                    "name": "canvas",
                    "description": "the current canvas",
                    "type": "HTMLCanvasElement"
                }
            ],
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 46,
            "description": "Tint a texture using the \"overlay\" operation",
            "itemtype": "method",
            "name": "tintWithOverlay",
            "params": [
                {
                    "name": "texture",
                    "description": "the texture to tint",
                    "type": "Texture"
                },
                {
                    "name": "color",
                    "description": "the color to use to tint the sprite with",
                    "type": "Int"
                },
                {
                    "name": "canvas",
                    "description": "the current canvas",
                    "type": "HTMLCanvasElement"
                }
            ],
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 55,
            "description": "Tint a texture pixel per pixel",
            "itemtype": "method",
            "name": "tintPerPixel",
            "params": [
                {
                    "name": "texture",
                    "description": "the texture to tint",
                    "type": "Texture"
                },
                {
                    "name": "color",
                    "description": "the color to use to tint the sprite with",
                    "type": "Number"
                },
                {
                    "name": "canvas",
                    "description": "the current canvas",
                    "type": "HTMLCanvasElement"
                }
            ],
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/utils/CanvasTinter.hx",
            "line": 64,
            "description": "Rounds the specified color according to the PIXI.CanvasTinter.cacheStepsPerColorChannel",
            "itemtype": "method",
            "name": "roundColor",
            "params": [
                {
                    "name": "color",
                    "description": "the color to round, should be a hex color",
                    "type": "Float"
                }
            ],
            "class": "CanvasGraphics"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 27,
            "itemtype": "property",
            "name": "type",
            "type": "Int",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 33,
            "description": "The resolution of the canvas",
            "itemtype": "property",
            "name": "resolution",
            "type": "Float",
            "default": "1",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 42,
            "description": "This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\nIf the Stage is NOT transparent Pixi will use a canvas sized fillRect operation every frame to set the canvas background color.\nIf the Stage is transparent Pixi will use clearRect to clear the canvas every frame.\nDisable this by setting this to false. For example if your game has a canvas filling background image you often don't need this set.",
            "itemtype": "property",
            "name": "clearBeforeRender",
            "type": "Bool",
            "default": "",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 54,
            "description": "Whether the render view is transparent",
            "itemtype": "property",
            "name": "transparent",
            "type": "Bool",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 62,
            "description": "The width of the canvas view",
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "default": "800",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 71,
            "description": "The height of the canvas view",
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "default": "600",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 80,
            "description": "The canvas element that everything is drawn to",
            "itemtype": "property",
            "name": "view",
            "type": "CanvasElement",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 88,
            "description": "The canvas 2d context that everything is drawn with",
            "itemtype": "property",
            "name": "context",
            "type": "CanvasRenderingContext2D 2d Context",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 95,
            "description": "Boolean flag controlling canvas refresh.",
            "itemtype": "property",
            "name": "refresh",
            "type": "Bool",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 103,
            "description": "Instance of a PIXI.CanvasMaskManager, handles masking when using the canvas renderer",
            "itemtype": "property",
            "name": "maskManager",
            "type": "CanvasMaskManager",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 110,
            "description": "The render session is just a bunch of parameter used for rendering",
            "itemtype": "property",
            "name": "renderSession",
            "type": "Dynamic",
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 117,
            "description": "Renders the stage to its canvas view",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "stage",
                    "description": "the Stage element to be rendered",
                    "type": "Stage"
                }
            ],
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/canvas/CanvasRenderer.hx",
            "line": 125,
            "description": "Resizes the canvas view to the specified width and height",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "the new width of the canvas view",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the new height of the canvas view",
                    "type": "Float"
                }
            ],
            "class": "CanvasRenderer"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 13,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 19,
            "itemtype": "property",
            "name": "program - The WebGL program.",
            "type": "Any",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 24,
            "itemtype": "property",
            "name": "fragmentSrc",
            "type": "Array",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 30,
            "itemtype": "property",
            "name": "vertexSrc",
            "type": "Array",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 36,
            "description": "Initialises the shader",
            "itemtype": "method",
            "name": "init",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/ComplexPrimitiveShader.hx",
            "line": 43,
            "description": "Destroys the shader",
            "itemtype": "method",
            "name": "destroy",
            "class": "ComplexPrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 13,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 19,
            "itemtype": "property",
            "name": "program - The WebGL program.",
            "type": "Any",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 24,
            "itemtype": "property",
            "name": "fragmentSrc - The fragment shader.",
            "type": "Array",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 29,
            "itemtype": "property",
            "name": "vertexSrc - The vertex shader",
            "type": "Array",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 34,
            "itemtype": "property",
            "name": "textureCount - A local texture counter for multi-texture shaders.",
            "type": "Number",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 39,
            "description": "Initialises the shader",
            "itemtype": "method",
            "name": "init",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiFastShader.hx",
            "line": 46,
            "description": "Destroys the shader",
            "itemtype": "method",
            "name": "destroy",
            "class": "PixiFastShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 13,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 19,
            "itemtype": "property",
            "name": "program - The WebGL program.",
            "type": "Any",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 24,
            "itemtype": "property",
            "name": "fragmentSrc - The fragment shader.",
            "type": "Array",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 29,
            "itemtype": "property",
            "name": "textureCount - A local texture counter for multi-texture shaders.",
            "type": "Number",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 34,
            "description": "The Default Vertex shader source",
            "itemtype": "property",
            "name": "defaultVertexSrc",
            "type": "String",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 41,
            "description": "Initialises the shader",
            "itemtype": "method",
            "name": "init",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 48,
            "description": "Destroys the shader",
            "itemtype": "method",
            "name": "destroy",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 55,
            "description": "Initialises the shader uniform values.\nUniforms are specified in the GLSL_ES Specification: http://www.khronos.org/registry/webgl/specs/latest/1.0/\nhttp://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf",
            "itemtype": "method",
            "name": "initUniforms",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 64,
            "description": "Initialises a Sampler2D uniform (which may only be available later on after initUniforms once the texture has loaded)",
            "itemtype": "method",
            "name": "initSampler2D",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PixiShader.hx",
            "line": 71,
            "description": "Updates the shader uniform values.",
            "itemtype": "method",
            "name": "syncUniforms",
            "class": "PixiShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 13,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 19,
            "itemtype": "property",
            "name": "program - The WebGL program.",
            "type": "Any",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 24,
            "itemtype": "property",
            "name": "fragmentSrc - The fragment shader.",
            "type": "Array",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 29,
            "itemtype": "property",
            "name": "vertexSrc - The vertex shader",
            "type": "Array",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 34,
            "description": "Initialises the shader",
            "itemtype": "method",
            "name": "init",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/PrimitiveShader.hx",
            "line": 41,
            "description": "Destroys the shader",
            "itemtype": "method",
            "name": "destroy",
            "class": "PrimitiveShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 13,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 19,
            "itemtype": "property",
            "name": "program - The WebGL program.",
            "type": "Any",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 24,
            "itemtype": "property",
            "name": "fragmentSrc - The fragment shader.",
            "type": "Array",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 29,
            "itemtype": "property",
            "name": "vertexSrc - The vertex shader",
            "type": "Array",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 34,
            "description": "Initialises the shader",
            "itemtype": "method",
            "name": "init",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/shaders/StripShader.hx",
            "line": 41,
            "description": "Destroys the shader",
            "itemtype": "method",
            "name": "destroy",
            "class": "StripShader"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 16,
            "itemtype": "property",
            "name": "gl",
            "type": "WebGLContext",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 22,
            "itemtype": "property",
            "name": "frameBuffer",
            "type": "Any",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 28,
            "itemtype": "property",
            "name": "texture",
            "type": "Any",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 34,
            "itemtype": "property",
            "name": "scaleMode",
            "type": "Number",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 40,
            "description": "Clears the filter texture",
            "itemtype": "method",
            "name": "clear",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 46,
            "description": "Resizes the texture to the specified width and height",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "the new width of the texture",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "the new height of the texture",
                    "type": "Number"
                }
            ],
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/FilterTexture.hx",
            "line": 55,
            "description": "Destroys the filter texture",
            "itemtype": "method",
            "name": "destroy",
            "class": "FilterTexture"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLBlendModeManager.hx",
            "line": 12,
            "description": "Sets the WebGL Context.",
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLBlendModeManager.hx",
            "line": 20,
            "description": "Sets-up the given blendMode from WebGL's point of view",
            "itemtype": "method",
            "name": "setBlendMode",
            "params": [
                {
                    "name": "blendMode",
                    "description": "the blendMode, should be a Pixi const, such as PIXI.BlendModes.ADD",
                    "type": "Number"
                }
            ],
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLBlendModeManager.hx",
            "line": 28,
            "description": "Destroys this object.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 16,
            "itemtype": "property",
            "name": "vertSize",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 22,
            "itemtype": "property",
            "name": "maxSize",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 28,
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 34,
            "description": "Holds the vertices",
            "itemtype": "property",
            "name": "vertices",
            "type": "Float32Array",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 42,
            "description": "Holds the indices",
            "itemtype": "property",
            "name": "indices",
            "type": "Uint16Array",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 50,
            "itemtype": "property",
            "name": "vertexBuffer",
            "type": "Object",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 56,
            "itemtype": "property",
            "name": "indexBuffer",
            "type": "Object",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 62,
            "itemtype": "property",
            "name": "lastIndexCount",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 68,
            "itemtype": "property",
            "name": "drawing",
            "type": "Boolean",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 74,
            "itemtype": "property",
            "name": "currentBatchSize",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 80,
            "itemtype": "property",
            "name": "currentBaseTexture",
            "type": "BaseTexture",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 86,
            "itemtype": "property",
            "name": "currentBlendMode",
            "type": "Number",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 92,
            "itemtype": "property",
            "name": "renderSession",
            "type": "Object",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 98,
            "itemtype": "property",
            "name": "shader",
            "type": "Object",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 104,
            "itemtype": "property",
            "name": "matrix",
            "type": "Matrix",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 110,
            "description": "Sets the WebGL Context.",
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 118,
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "",
                    "type": "WebGLSpriteBatch"
                },
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 125,
            "itemtype": "method",
            "name": "end",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 130,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "",
                    "type": "WebGLSpriteBatch"
                }
            ],
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 136,
            "itemtype": "method",
            "name": "renderSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 142,
            "description": "Renders the content and empties the current batch.",
            "itemtype": "method",
            "name": "flush",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 149,
            "itemtype": "method",
            "name": "stop",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFastSpriteBatch.hx",
            "line": 154,
            "itemtype": "method",
            "name": "start",
            "class": "WebGLFastSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 15,
            "description": "Initialises the context and the properties.",
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 23,
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "RenderSession"
                },
                {
                    "name": "buffer",
                    "description": "",
                    "type": "ArrayBuffer"
                }
            ],
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 30,
            "description": "Applies the filter and adds it to the current filter stack.",
            "itemtype": "method",
            "name": "pushFilter",
            "params": [
                {
                    "name": "filterBlock",
                    "description": "the filter that will be pushed to the current filter stack",
                    "type": "Object"
                }
            ],
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 38,
            "description": "Removes the last filter from the filter stack and doesn't return it.",
            "itemtype": "method",
            "name": "popFilter",
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 45,
            "description": "Applies the filter to the specified area.",
            "itemtype": "method",
            "name": "applyFilterPass",
            "params": [
                {
                    "name": "filter",
                    "description": "the filter that needs to be applied",
                    "type": "AbstractFilter"
                },
                {
                    "name": "filterArea",
                    "description": "TODO - might need an update",
                    "type": "Texture"
                },
                {
                    "name": "width",
                    "description": "the horizontal range of the filter",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "the vertical range of the filter",
                    "type": "Number"
                }
            ],
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 56,
            "description": "Initialises the shader buffers.",
            "itemtype": "method",
            "name": "initShaderBuffers",
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLFilterManager.hx",
            "line": 63,
            "description": "Destroys the filter and removes it from the filter stack.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLFilterManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLGraphics.hx",
            "line": 11,
            "itemtype": "method",
            "name": "reset",
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLGraphics.hx",
            "line": 16,
            "itemtype": "method",
            "name": "upload",
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "line": 11,
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "line": 17,
            "description": "Removes the last filter from the filter stack and doesn't return it.",
            "itemtype": "method",
            "name": "popMask",
            "params": [
                {
                    "name": "maskData",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "renderSession",
                    "description": "an object containing all the useful parameters",
                    "type": "Object"
                }
            ],
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "line": 26,
            "description": "Applies the Mask and adds it to the current filter stack.",
            "itemtype": "method",
            "name": "pushMask",
            "params": [
                {
                    "name": "maskData",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLMaskManager.hx",
            "line": 35,
            "description": "Destroys this object.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLMaskManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 11,
            "itemtype": "property",
            "name": "maxAttibs",
            "type": "Number",
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 17,
            "itemtype": "property",
            "name": "attribState",
            "type": "Array",
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 23,
            "itemtype": "property",
            "name": "tempAttribState",
            "type": "Array",
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 29,
            "itemtype": "property",
            "name": "stack",
            "type": "Array",
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 35,
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 41,
            "description": "Takes the attributes given in parameters.",
            "itemtype": "method",
            "name": "setAttribs",
            "params": [
                {
                    "name": "attribs",
                    "description": "attribs",
                    "type": "Array"
                }
            ],
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 49,
            "description": "Sets the current shader.",
            "itemtype": "method",
            "name": "setShader",
            "params": [
                {
                    "name": "shader",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLShaderManager.hx",
            "line": 57,
            "description": "Destroys this object.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLShaderManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 16,
            "itemtype": "property",
            "name": "vertSize",
            "type": "Number",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 22,
            "description": "The number of images in the SpriteBatch before it flushes",
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 29,
            "description": "Holds the vertices",
            "itemtype": "property",
            "name": "vertices",
            "type": "Float32Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 37,
            "description": "Holds the indices",
            "itemtype": "property",
            "name": "indices",
            "type": "Uint16Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 45,
            "itemtype": "property",
            "name": "lastIndexCount",
            "type": "Number",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 51,
            "itemtype": "property",
            "name": "drawing",
            "type": "Boolean",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 57,
            "itemtype": "property",
            "name": "currentBatchSize",
            "type": "Number",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 63,
            "itemtype": "property",
            "name": "currentBaseTexture",
            "type": "BaseTexture",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 69,
            "itemtype": "property",
            "name": "dirty",
            "type": "Boolean",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 75,
            "itemtype": "property",
            "name": "textures",
            "type": "Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 81,
            "itemtype": "property",
            "name": "blendModes",
            "type": "Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 87,
            "itemtype": "property",
            "name": "shaders",
            "type": "Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 93,
            "itemtype": "property",
            "name": "sprites",
            "type": "Array",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 99,
            "itemtype": "property",
            "name": "defaultShader",
            "type": "AbstractFilter",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 105,
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 111,
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "renderSession",
                    "description": "The RenderSession object",
                    "type": "Object"
                }
            ],
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 117,
            "itemtype": "method",
            "name": "end",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 122,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "sprite",
                    "description": "the sprite to render when using this spritebatch",
                    "type": "Sprite"
                }
            ],
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 128,
            "description": "Renders a TilingSprite using the spriteBatch.",
            "itemtype": "method",
            "name": "renderTilingSprite",
            "params": [
                {
                    "name": "tilingSprite",
                    "description": "the tilingSprite to render",
                    "type": "TilingSprite"
                }
            ],
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 136,
            "description": "Renders the content and empties the current batch.",
            "itemtype": "method",
            "name": "flush",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 143,
            "itemtype": "method",
            "name": "renderBatch",
            "params": [
                {
                    "name": "texture",
                    "description": "",
                    "type": "Texture"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 151,
            "itemtype": "method",
            "name": "stop",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 156,
            "itemtype": "method",
            "name": "start",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLSpriteBatch.hx",
            "line": 161,
            "description": "Destroys the SpriteBatch.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLSpriteBatch"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 12,
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "gl",
                    "description": "the current WebGL drawing context",
                    "type": "WebGLContext"
                }
            ],
            "class": "WebGLStencilManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 18,
            "description": "Applies the Mask and adds it to the current filter stack.",
            "itemtype": "method",
            "name": "pushStencil",
            "params": [
                {
                    "name": "graphics",
                    "description": "",
                    "type": "Graphics"
                },
                {
                    "name": "webGLData",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "WebGLStencilManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 28,
            "itemtype": "method",
            "name": "popStencil",
            "params": [
                {
                    "name": "graphics",
                    "description": "",
                    "type": "Graphics"
                },
                {
                    "name": "webGLData",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "WebGLStencilManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 36,
            "description": "TODO this does not belong here!",
            "itemtype": "method",
            "name": "bindGraphics",
            "params": [
                {
                    "name": "graphics",
                    "description": "",
                    "type": "Graphics"
                },
                {
                    "name": "webGLData",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "renderSession",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "WebGLStencilManager"
        },
        {
            "file": "pixi/renderers/webgl/utils/WebGLStencilManager.hx",
            "line": 46,
            "description": "Destroys this object.",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLStencilManager"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 39,
            "itemtype": "property",
            "name": "type",
            "type": "Int",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 45,
            "description": "The resolution of the renderer",
            "itemtype": "property",
            "name": "resolution",
            "type": "Float",
            "default": "1",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 54,
            "description": "Whether the render view is transparent",
            "itemtype": "property",
            "name": "transparent",
            "type": "Bool",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 62,
            "description": "The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering.",
            "itemtype": "property",
            "name": "preserveDrawingBuffer",
            "type": "Bool",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 70,
            "description": "This sets if the WebGLRenderer will clear the context texture or not before the new render pass. If true:\nIf the Stage is NOT transparent, Pixi will clear to alpha (0, 0, 0, 0).\nIf the Stage is transparent, Pixi will clear to the target Stage's background color.\nDisable this by setting this to false. For example: if your game has a canvas filling background image, you often don't need this set.",
            "itemtype": "property",
            "name": "clearBeforeRender",
            "type": "Bool",
            "default": "",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 82,
            "description": "The width of the canvas view",
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "default": "800",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 91,
            "description": "The height of the canvas view",
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "default": "600",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 100,
            "description": "The canvas element that everything is drawn to",
            "itemtype": "property",
            "name": "view",
            "type": "HTMLCanvasElement",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 108,
            "itemtype": "property",
            "name": "contextLostBound",
            "type": "Function",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 114,
            "itemtype": "property",
            "name": "contextRestoredBound",
            "type": "Function",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 120,
            "itemtype": "property",
            "name": "projection",
            "type": "Point",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 126,
            "itemtype": "property",
            "name": "offset",
            "type": "Point",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 132,
            "description": "Deals with managing the shader programs and their attribs",
            "itemtype": "property",
            "name": "shaderManager",
            "type": "WebGLShaderManager",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 139,
            "description": "Manages the rendering of sprites",
            "itemtype": "property",
            "name": "spriteBatch",
            "type": "WebGLSpriteBatch",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 146,
            "description": "Manages the masks using the stencil buffer",
            "itemtype": "property",
            "name": "maskManager",
            "type": "WebGLMaskManager",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 153,
            "description": "Manages the filters",
            "itemtype": "property",
            "name": "filterManager",
            "type": "WebGLFilterManager",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 160,
            "description": "Manages the stencil buffer",
            "itemtype": "property",
            "name": "stencilManager",
            "type": "WebGLStencilManager",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 167,
            "description": "Manages the blendModes",
            "itemtype": "property",
            "name": "blendModeManager",
            "type": "WebGLBlendModeManager",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 174,
            "description": "TODO remove",
            "itemtype": "property",
            "name": "renderSession",
            "type": "Dynamic",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 181,
            "itemtype": "method",
            "name": "initContext",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 186,
            "description": "Renders the stage to its webGL view",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "stage",
                    "description": "the Stage element to be rendered",
                    "type": "Stage"
                }
            ],
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 194,
            "description": "Renders a Display Object.",
            "itemtype": "method",
            "name": "renderDisplayObject",
            "params": [
                {
                    "name": "displayObject",
                    "description": "The DisplayObject to render",
                    "type": "DisplayObject"
                },
                {
                    "name": "projection",
                    "description": "The projection",
                    "type": "Point"
                },
                {
                    "name": "buffer",
                    "description": "a standard WebGL buffer",
                    "type": "Array"
                }
            ],
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 204,
            "description": "resizes the webGL view to the specified width and height",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "the new width of the webGL view",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "the new height of the webGL view",
                    "type": "Float"
                }
            ],
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 213,
            "description": "Updates and Creates a WebGL texture for the renderers context.",
            "itemtype": "method",
            "name": "updateTexture",
            "params": [
                {
                    "name": "texture",
                    "description": "the texture to update",
                    "type": "Texture"
                }
            ],
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 221,
            "description": "Removes everything from the renderer (event listeners, spritebatch, etc...)",
            "itemtype": "method",
            "name": "destroy",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/renderers/webgl/WebGLRenderer.hx",
            "line": 228,
            "description": "Maps Pixi blend modes to WebGL blend modes.",
            "itemtype": "method",
            "name": "mapBlendModes",
            "class": "WebGLRenderer"
        },
        {
            "file": "pixi/spine/AnimationState.hx",
            "line": 28,
            "description": "Set the current animation. Any queued animations are cleared.",
            "class": "Spine"
        },
        {
            "file": "pixi/spine/AnimationState.hx",
            "line": 35,
            "params": [
                {
                    "name": "delay",
                    "description": "May be <= 0 to use duration of previous animation minus any mix duration plus the negative delay."
                }
            ],
            "class": "Spine"
        },
        {
            "file": "pixi/spine/Spine.hx",
            "line": 20,
            "description": "If this flag is set to true, the spine animation will be autoupdated every time\nthe object id drawn. The down side of this approach is that the delta time is\nautomatically calculated and you could miss out on cool effects like slow motion,\npause, skip ahead and the sorts. Most of these effects can be achieved even with\nautoupdate enabled but are harder to achieve.",
            "itemtype": "property",
            "name": "autoUpdate",
            "type": "{ Bool }",
            "default": "true",
            "class": "Spine"
        },
        {
            "file": "pixi/spine/Spine.hx",
            "line": 33,
            "description": "Update the spine skeleton and its animations by delta time (dt)",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "dt",
                    "description": "Delta time. Time by which the animation should be updated",
                    "type": "Float"
                }
            ],
            "class": "Spine"
        },
        {
            "file": "pixi/spine/SpineTextureLoader.hx",
            "line": 18,
            "description": "Starts loading a base texture as per spine specification",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "page",
                    "description": "Atlas page to which texture belongs",
                    "type": "spine.AtlasPage"
                },
                {
                    "name": "file",
                    "description": "The file to load, this is just the file path relative to the base path configured in the constructor",
                    "type": "String"
                }
            ],
            "class": "SpineTextureLoader"
        },
        {
            "file": "pixi/spine/SpineTextureLoader.hx",
            "line": 27,
            "description": "Unloads a previously loaded texture as per spine specification",
            "itemtype": "method",
            "name": "unload",
            "params": [
                {
                    "name": "texture",
                    "description": "Texture object to destroy",
                    "type": "BaseTexture"
                }
            ],
            "class": "SpineTextureLoader"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 22,
            "description": "Set the style of the text\nstyle.font {String} The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)\n[style.align='left'] {String} Alignment for multiline text ('left', 'center' or 'right'), does not affect single lines of text",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "style",
                    "description": "The style parameters, contained as properties of an object",
                    "type": "BitmapTextStyle"
                }
            ],
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 32,
            "description": "Set the copy for the text object. To split a line you can use '\\n'",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The copy that you would like the text to display",
                    "type": "String"
                }
            ],
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 40,
            "description": "[read-only] The width of the overall text, different from fontSize,\nwhich is defined in the style object",
            "itemtype": "property",
            "name": "textWidth",
            "type": "Float",
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 49,
            "description": "[read-only] The height of the overall text, different from fontSize,\nwhich is defined in the style object",
            "itemtype": "property",
            "name": "textHeight",
            "type": "Float",
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 58,
            "description": "Text value",
            "type": "String",
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/BitmapText.hx",
            "line": 65,
            "description": "The style parameters",
            "params": [
                {
                    "name": "style.font",
                    "description": "The size (optional) and bitmap font id (required) eq 'Arial' or '20px Arial' (must have loaded previously)",
                    "type": "String"
                },
                {
                    "name": "style.align",
                    "description": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'left'"
                }
            ],
            "class": "BitmapText"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 33,
            "description": "Set the style of the text",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "style",
                    "description": "The style parameters",
                    "type": "TextStyle",
                    "props": [
                        {
                            "name": "font",
                            "description": "default 'bold 20px Arial' The style and size of the font",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "fill",
                            "description": "A canvas fillstyle that will be used on the text e.g '#00FF00'",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'black'"
                        },
                        {
                            "name": "align",
                            "description": "Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'left'"
                        },
                        {
                            "name": "stroke",
                            "description": "A canvas fillstyle that will be used on the text stroke e.g ''#FCFF00'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "strokeThickness",
                            "description": "A number that represents the thickness of the stroke. Default is 0 (no stroke)",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "wordWrap",
                            "description": "Indicates if word wrap should be used",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "wordWrapWidth",
                            "description": "The width at which text will wrap, it needs wordWrap to be set to true",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "100"
                        },
                        {
                            "name": "dropShadow",
                            "description": "Set a drop shadow for the text",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "dropShadowColor",
                            "description": "A fill style to be used on the dropshadow e.g 'red', '#00FF00'",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'#000000'"
                        },
                        {
                            "name": "dropShadowAngle",
                            "description": "Set a angle of the drop shadow",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "Math.PI/4"
                        },
                        {
                            "name": "dropShadowDistance",
                            "description": "Set a distance of the drop shadow",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "5"
                        }
                    ]
                }
            ],
            "class": "Text"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 52,
            "description": "Set the copy for the text object. To split a line you can use '\\n'",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The copy that you would like the text to display",
                    "type": "String"
                }
            ],
            "class": "Text"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 60,
            "description": "Destroys this text object",
            "itemtype": "method",
            "name": "destroy",
            "params": [
                {
                    "name": "destroyBaseTexture",
                    "description": "whether to destroy the base texture as well",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "class": "Text"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 68,
            "description": "Text value",
            "type": "String",
            "class": "Text"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 74,
            "description": "The canvas element that everything is drawn to",
            "itemtype": "property",
            "name": "canvas",
            "type": "CanvasElement",
            "class": "Text"
        },
        {
            "file": "pixi/text/Text.hx",
            "line": 81,
            "description": "The canvas 2d context that everything is drawn with",
            "itemtype": "property",
            "name": "context",
            "type": "CanvasRenderingContext2D",
            "class": "Text"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 20,
            "description": "The Resolution of the texture.",
            "itemtype": "property",
            "name": "resolution",
            "type": "Float",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 28,
            "description": "[read-only] The width of the base texture set when the image has loaded",
            "itemtype": "property",
            "name": "width",
            "type": "Float",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 35,
            "description": "[read-only] The height of the base texture set when the image has loaded",
            "itemtype": "property",
            "name": "height",
            "type": "Float",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 42,
            "description": "The scale mode to apply when scaling this texture",
            "itemtype": "property",
            "name": "scaleMode",
            "type": "Float",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 49,
            "description": "[read-only] Describes if the base texture has loaded or not",
            "itemtype": "property",
            "name": "hasLoaded",
            "type": "Bool",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 56,
            "description": "The source that is loaded to create the texture",
            "itemtype": "property",
            "name": "source",
            "type": "Dynamic",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 67,
            "description": "Destroys this base texture",
            "itemtype": "method",
            "name": "destroy",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 74,
            "description": "Sets all glTextures to be dirty.",
            "itemtype": "method",
            "name": "dirty",
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 81,
            "description": "Changes the source image of the texture",
            "itemtype": "method",
            "name": "updateSourceImage",
            "params": [
                {
                    "name": "newSrc",
                    "description": "the path of the image",
                    "type": "String"
                }
            ],
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 89,
            "description": "Helper function that returns a base texture based on an image url\nIf the image is not in the base texture cache it will be created and loaded",
            "static": 1,
            "itemtype": "method",
            "name": "fromImage",
            "params": [
                {
                    "name": "imageUrl",
                    "description": "The image url of the texture",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "BaseTexture"
            },
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/BaseTexture.hx",
            "line": 102,
            "description": "Helper function that returns a base texture based on a canvas element\nIf the image is not in the base texture cache it will be created and loaded",
            "static": 1,
            "itemtype": "method",
            "name": "fromCanvas",
            "params": [
                {
                    "name": "canvas",
                    "description": "The canvas element source of the texture",
                    "type": "Canvas"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "BaseTexture"
            },
            "class": "BaseTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 45,
            "description": "This function will draw the display object to the texture.",
            "itemtype": "method",
            "name": "renderWebGL/renderCanvas",
            "params": [
                {
                    "name": "displayObject",
                    "description": "The display object to render this texture on",
                    "type": "DisplayObject"
                },
                {
                    "name": "matrix",
                    "description": "Optional matrix to apply to the display object before rendering.",
                    "type": "Matrix",
                    "optional": true
                },
                {
                    "name": "clear",
                    "description": "If true the texture will be cleared before the displayObject is drawn",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 55,
            "description": "Resize the RenderTexture.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The width to resize to.",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "The height to resize to.",
                    "type": "Float"
                },
                {
                    "name": "updateBase",
                    "description": "Should the baseTexture.width and height values be resized as well?",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 65,
            "description": "Clears the RenderTexture.",
            "itemtype": "method",
            "name": "clear",
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 72,
            "description": "Will return a a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that.",
            "itemtype": "method",
            "name": "getBase64",
            "return": {
                "description": "A base64 encoded string of the texture.",
                "type": "String"
            },
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 80,
            "description": "Creates a Canvas element, renders this RenderTexture to it and then returns it.",
            "itemtype": "method",
            "name": "getCanvas",
            "return": {
                "description": "A Canvas element with the texture rendered on.",
                "type": "CanvasElement"
            },
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 88,
            "description": "Will return a HTML Image of the texture",
            "itemtype": "method",
            "name": "getImage",
            "return": {
                "description": "",
                "type": "HTMLImage"
            },
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 96,
            "description": "The renderer this RenderTexture uses. A RenderTexture can only belong to one renderer at the moment if its webGL.",
            "itemtype": "property",
            "name": "renderer",
            "type": "CanvasRenderer|WebGLRenderer",
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/RenderTexture.hx",
            "line": 104,
            "description": "The Resolution of the texture.",
            "itemtype": "property",
            "name": "resolution",
            "type": "Number",
            "class": "RenderTexture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 23,
            "description": "Does this Texture have any frame data assigned to it?",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 28,
            "description": "The base texture that this texture uses.",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 33,
            "description": "The frame specifies the region of the base texture that this texture uses",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 38,
            "description": "The trim point",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 43,
            "description": "This will let the renderer know if the texture is valid. If its not then it cannot be rendered.",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 48,
            "description": "The WebGL UV data cache.",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 53,
            "description": "The width of the Texture in pixels.",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 58,
            "description": "The height of the Texture in pixels.",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 63,
            "description": "This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)",
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 69,
            "description": "Destroys this texture",
            "itemtype": "method",
            "name": "destroy",
            "params": [
                {
                    "name": "destroyBase",
                    "description": "Whether to destroy the base texture as well",
                    "type": "Bool"
                }
            ],
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 77,
            "description": "Specifies the region of the baseTexture that this texture will use.",
            "itemtype": "method",
            "name": "setFrame",
            "params": [
                {
                    "name": "frame",
                    "description": "The frame of the texture to set it to",
                    "type": "Rectangle"
                }
            ],
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 85,
            "description": "Helper function that returns a texture based on a frame id\nIf the frame id is not in the texture cache an error will be thrown",
            "static": 1,
            "itemtype": "method",
            "name": "fromFrame",
            "params": [
                {
                    "name": "frameId",
                    "description": "The frame id of the texture",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Texture"
            },
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 96,
            "description": "Helper function that returns a texture based on an image url\nIf the image is not in the texture cache it will be  created and loaded",
            "static": 1,
            "itemtype": "method",
            "name": "fromImage",
            "params": [
                {
                    "name": "imageUrl",
                    "description": "The image url of the texture",
                    "type": "String"
                },
                {
                    "name": "crossorigin",
                    "description": "Whether requests should be treated as crossorigin",
                    "type": "Bool"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Texture"
            },
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 109,
            "description": "Helper function that returns a texture based on a canvas element\nIf the canvas is not in the texture cache it will be  created and loaded",
            "static": 1,
            "itemtype": "method",
            "name": "fromCanvas",
            "params": [
                {
                    "name": "canvas",
                    "description": "The canvas element source of the texture",
                    "type": "Canvas"
                },
                {
                    "name": "scaleMode",
                    "description": "Should be one of the PIXI.scaleMode consts",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Texture"
            },
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 121,
            "description": "Adds a texture to the textureCache.",
            "static": 1,
            "itemtype": "method",
            "name": "addTextureToCache",
            "params": [
                {
                    "name": "texture",
                    "description": "",
                    "type": "Texture"
                },
                {
                    "name": "id",
                    "description": "the id that the texture will be stored against.",
                    "type": "String"
                }
            ],
            "class": "Texture"
        },
        {
            "file": "pixi/textures/Texture.hx",
            "line": 131,
            "description": "Remove a texture from the textureCache.",
            "static": 1,
            "itemtype": "method",
            "name": "removeTextureFromCache",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the texture to be removed",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the texture that was removed",
                "type": "Texture"
            },
            "class": "Texture"
        },
        {
            "file": "pixi/textures/VideoTexture.hx",
            "line": 15,
            "description": "Mimic Pixi BaseTexture.from.... method.",
            "params": [
                {
                    "name": "video",
                    "description": ""
                },
                {
                    "name": "scaleMode",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "PIXI.VideoTexture"
            },
            "class": "Detector"
        },
        {
            "file": "pixi/textures/VideoTexture.hx",
            "line": 23,
            "description": "Mimic PIXI Texture.from... method.",
            "params": [
                {
                    "name": "video",
                    "description": ""
                },
                {
                    "name": "scaleMode",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "PIXI.Texture"
            },
            "class": "Detector"
        },
        {
            "file": "pixi/utils/Detector.hx",
            "line": 14,
            "description": "This helper function will automatically detect which renderer you should be using.\nWebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\nthe browser then this function will return a canvas renderer",
            "static": 1,
            "itemtype": "method",
            "name": "autoDetectRenderer",
            "params": [
                {
                    "name": "width=800",
                    "description": "the width of the renderers view",
                    "type": "Float"
                },
                {
                    "name": "height=600",
                    "description": "the height of the renderers view",
                    "type": "Float"
                },
                {
                    "name": "options",
                    "description": "The optional renderer parameters",
                    "type": "RenderingOptions",
                    "optional": true,
                    "props": [
                        {
                            "name": "view",
                            "description": "the canvas to use as a view, optional",
                            "type": "HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "transparent",
                            "description": "If the render view is transparent, default false",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "antialias",
                            "description": "sets antialias (only applicable in chrome at the moment)",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "preserveDrawingBuffer",
                            "description": "enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "resolution",
                            "description": "the resolution of the renderer retina would be 2",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ],
            "return": {
                "description": "CanvasRenderer|WebGLRenderer"
            },
            "class": "Detector"
        },
        {
            "file": "pixi/utils/Detector.hx",
            "line": 33,
            "description": "This helper function will automatically detect which renderer you should be using.\nThis function is very similar to the autoDetectRenderer function except that is will return a canvas renderer for android.\nEven thought both android chrome supports webGL the canvas implementation perform better at the time of writing.\nThis function will likely change and update as webGL performance improves on these devices.",
            "static": 1,
            "itemtype": "method",
            "name": "autoDetectRecommendedRenderer",
            "params": [
                {
                    "name": "width=800",
                    "description": "the width of the renderers view",
                    "type": "Float"
                },
                {
                    "name": "height=600",
                    "description": "the height of the renderers view",
                    "type": "Float"
                },
                {
                    "name": "options",
                    "description": "The optional renderer parameters",
                    "type": "RenderingOptions",
                    "optional": true,
                    "props": [
                        {
                            "name": "view",
                            "description": "the canvas to use as a view, optional",
                            "type": "HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "transparent",
                            "description": "If the render view is transparent, default false",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "antialias",
                            "description": "sets antialias (only applicable in chrome at the moment)",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "preserveDrawingBuffer",
                            "description": "enables drawing buffer preservation, enable this if you need to call toDataUrl on the webgl context",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "resolution",
                            "description": "the resolution of the renderer retina would be 2",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ],
            "return": {
                "description": "CanvasRenderer|WebGLRenderer"
            },
            "class": "Detector"
        },
        {
            "file": "pixi/utils/Detector.hx",
            "line": 60,
            "description": "canvas specific",
            "class": "Detector"
        },
        {
            "file": "pixi/utils/Detector.hx",
            "line": 65,
            "description": "webgl specific",
            "class": "Detector"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 18,
            "description": "Stops the propagation of events up the scene graph (prevents bubbling).",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 25,
            "description": "Stops the propagation of events to sibling listeners (no longer calls any listeners).",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 32,
            "description": "Tracks the state of bubbling propagation. Do not\nset this directly, instead use `event.stopPropagation()`",
            "itemtype": "property",
            "name": "stopped",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 43,
            "description": "Tracks the state of sibling listener propagation. Do not\nset this directly, instead use `event.stopImmediatePropagation()`",
            "itemtype": "property",
            "name": "stoppedImmediate",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 54,
            "description": "The original target the event triggered on.",
            "itemtype": "property",
            "name": "target",
            "type": "Dynamic",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 63,
            "description": "The string name of the event that this represents.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 72,
            "description": "The data that was passed in with this event.",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/Event.hx",
            "line": 84,
            "description": "The timestamp when the event occurred.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 20,
            "description": "Return a list of assigned event listeners.",
            "itemtype": "method",
            "name": "listeners",
            "params": [
                {
                    "name": "eventName",
                    "description": "The events that should be listed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of listener functions",
                "type": "Array<Dynamic>"
            },
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 29,
            "description": "Emit an event to all registered event listeners.",
            "itemtype": "method",
            "name": "emit",
            "alias": "dispatchEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": "The name of the event.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Dynamic"
                }
            ],
            "return": {
                "description": "Indication if we've emitted an event.",
                "type": "Bool"
            },
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 41,
            "description": "Register a new EventListener for the given event.",
            "itemtype": "method",
            "name": "on",
            "alias": "addEventListener",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function.",
                    "type": "Functon"
                }
            ],
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 52,
            "description": "Add an EventListener that's only called once.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function.",
                    "type": "Function"
                }
            ],
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 61,
            "description": "Remove event listeners.",
            "itemtype": "method",
            "name": "off",
            "alias": "removeEventListener",
            "params": [
                {
                    "name": "eventName",
                    "description": "The event we want to remove.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener that we need to find.",
                    "type": "Function"
                }
            ],
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/EventTarget.hx",
            "line": 72,
            "description": "Remove all listeners or only the listeners for the specified event.",
            "itemtype": "method",
            "name": "removeAllListeners",
            "params": [
                {
                    "name": "eventName",
                    "description": "The event you want to remove all listeners for.",
                    "type": "String"
                }
            ],
            "class": "EventTarget"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 8,
            "description": "Stats DOM element",
            "itemtype": "property",
            "name": "domElement",
            "type": "DivElement",
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 15,
            "description": "https://github.com/mrdoob/stats.js/ (JS stats)\nhttps://github.com/luizbills/stats.js.hx (Original Haxe Externs",
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 21,
            "description": "Begin stats",
            "itemtype": "method",
            "name": "begin",
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 28,
            "description": "End stats",
            "itemtype": "method",
            "name": "end",
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 35,
            "description": "Update stats",
            "itemtype": "method",
            "name": "update",
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Stats.hx",
            "line": 42,
            "description": "Sets the display mode.",
            "itemtype": "method",
            "name": "setMode",
            "params": [
                {
                    "name": "value",
                    "description": "0: fps, 1: ms",
                    "type": "Int"
                }
            ],
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 6,
            "description": "Converts a hex color number to an [R, G, B] array",
            "itemtype": "method",
            "name": "hex2rgb",
            "params": [
                {
                    "name": "hex",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Array<Float>"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 15,
            "description": "Converts a color as an [R, G, B] array to a hex number",
            "itemtype": "method",
            "name": "rgb2hex",
            "params": [
                {
                    "name": "rgb",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Float"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 24,
            "description": "Checks whether the Canvas BlendModes are supported by the current browser",
            "itemtype": "method",
            "name": "canUseNewCanvasBlendModes",
            "return": {
                "description": "whether they are supported",
                "type": "Bool"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 32,
            "description": "Given a number, this function returns the closest number that is a power of two\nthis function is taken from Starling Framework as its pretty neat ;)",
            "itemtype": "method",
            "name": "getNextPowerOfTwo",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "the closest number that is a power of two",
                "type": "Float"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 42,
            "description": "checks if the given width and height make a power of two texture",
            "itemtype": "method",
            "name": "isPowerOfTwo",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/utils/Utils.hx",
            "line": 52,
            "description": "A wrapper for ajax requests to be handled cross browser",
            "itemtype": "method",
            "name": "AjaxRequest",
            "class": "InteractionData"
        },
        {
            "file": "pixi/DomDefinitions.hx",
            "line": 3,
            "description": "Because macros cannot access the JS package, put\na bunch of dummy typedefs so compilation will go through.",
            "class": "InteractionData"
        },
        {
            "file": "pixi/InteractionData.hx",
            "line": 19,
            "description": "This point stores the global coords of where the touch/mouse event happened",
            "itemtype": "property",
            "name": "global",
            "type": "Point",
            "class": "InteractionData"
        },
        {
            "file": "pixi/InteractionData.hx",
            "line": 27,
            "description": "The target Sprite that was interacted with",
            "itemtype": "property",
            "name": "target",
            "type": "Sprite",
            "class": "InteractionData"
        },
        {
            "file": "pixi/InteractionData.hx",
            "line": 35,
            "description": "When passed to an event handler, this will be the original DOM Event that was captured",
            "itemtype": "property",
            "name": "originalEvent",
            "type": "Event",
            "class": "InteractionData"
        },
        {
            "file": "pixi/InteractionData.hx",
            "line": 43,
            "description": "This will return the local coordinates of the specified displayObject for this InteractionData",
            "itemtype": "method",
            "name": "getLocalPosition",
            "params": [
                {
                    "name": "displayObject",
                    "description": "The DisplayObject that you would like the local coords off",
                    "type": "DisplayObject"
                },
                {
                    "name": "point",
                    "description": "A Point object in which to store the value, optional (otherwise will create a new point)",
                    "type": "Point",
                    "optional": true
                }
            ],
            "return": {
                "description": "A point containing the coordinates of the InteractionData position relative to the DisplayObject",
                "type": "Point"
            },
            "class": "InteractionData"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 19,
            "description": "A reference to the stage",
            "itemtype": "property",
            "name": "stage",
            "type": "Stage",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 27,
            "description": "The mouse data",
            "itemtype": "property",
            "name": "mouse",
            "type": "InteractionData",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 35,
            "description": "An object that stores current touches (InteractionData) by id reference",
            "itemtype": "property",
            "name": "touches",
            "type": "Dynamic",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 43,
            "itemtype": "property",
            "name": "mouseoverEnabled",
            "type": "Bool",
            "default": "true",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 50,
            "description": "Tiny little interactiveData pool !",
            "itemtype": "property",
            "name": "pool",
            "type": "Array<Dynamic>",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 58,
            "itemtype": "property",
            "name": "onMouseMove",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 64,
            "itemtype": "property",
            "name": "onMouseDown",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 70,
            "itemtype": "property",
            "name": "onMouseOut",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 76,
            "itemtype": "property",
            "name": "onMouseUp",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 82,
            "itemtype": "property",
            "name": "onTouchStart",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 88,
            "itemtype": "property",
            "name": "onTouchEnd",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 94,
            "itemtype": "property",
            "name": "onTouchMove",
            "type": "InteractionData -> Void",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 100,
            "itemtype": "property",
            "name": "last",
            "type": "Float",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 106,
            "description": "The css style of the cursor that is being used",
            "itemtype": "property",
            "name": "currentCursorStyle",
            "type": "String",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 113,
            "description": "Is set to true when the mouse is moved out of the canvas",
            "itemtype": "property",
            "name": "mouseOut",
            "type": "Bool",
            "default": "false",
            "class": "InteractionManager"
        },
        {
            "file": "pixi/InteractionManager.hx",
            "line": 121,
            "itemtype": "property",
            "name": "resolution",
            "type": "Float",
            "class": "InteractionManager"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pixi/textures/VideoTexture.hx:15"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pixi/textures/VideoTexture.hx:23"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pixi/utils/EventTarget.hx:20"
        },
        {
            "message": "unknown tag: alias",
            "line": " pixi/utils/EventTarget.hx:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pixi/utils/EventTarget.hx:29"
        },
        {
            "message": "unknown tag: alias",
            "line": " pixi/utils/EventTarget.hx:41"
        },
        {
            "message": "unknown tag: alias",
            "line": " pixi/utils/EventTarget.hx:61"
        },
        {
            "message": "Missing item type\nThe texture used for the displacemtent map * must be power of 2 texture at the moment",
            "line": " pixi/filters/AlphaMaskFilter.hx:20"
        },
        {
            "message": "Missing item type\nSets the strength of both the blurX and blurY properties simultaneously",
            "line": " pixi/filters/BlurFilter.hx:16"
        },
        {
            "message": "Missing item type\nSets the strength of the blurX property",
            "line": " pixi/filters/BlurFilter.hx:21"
        },
        {
            "message": "Missing item type\nSets the strength of the blurX property",
            "line": " pixi/filters/BlurFilter.hx:26"
        },
        {
            "message": "Missing item type\nSets the strength of both the blur. Default: 2",
            "line": " pixi/filters/BlurXFilter.hx:15"
        },
        {
            "message": "Missing item type\nSets the strength of both the blur. Default: 2",
            "line": " pixi/filters/BlurYFilter.hx:15"
        },
        {
            "message": "Missing item type\nSets the matrix of the color matrix filter",
            "line": " pixi/filters/ColorMatrixFilter.hx:17"
        },
        {
            "message": "Missing item type\nThe number of steps to reduce the palette by.",
            "line": " pixi/filters/ColorStepFilter.hx:15"
        },
        {
            "message": "Missing item type\nSets the matrix of the color matrix filter",
            "line": " pixi/filters/ConvolutionFilter.hx:21"
        },
        {
            "message": "Missing item type\nWidth of the object you are transforming",
            "line": " pixi/filters/ConvolutionFilter.hx:26"
        },
        {
            "message": "Missing item type\nHeight of the object you are transforming",
            "line": " pixi/filters/ConvolutionFilter.hx:31"
        },
        {
            "message": "Missing item type\nSets the strength of both the blur. Default: 2",
            "line": " pixi/filters/CrossHatchFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe texture used for the displacemtent map * must be power of 2 texture at the moment",
            "line": " pixi/filters/DisplacementFilter.hx:21"
        },
        {
            "message": "Missing item type\nThe multiplier used to scale the displacement result from the map calculation.",
            "line": " pixi/filters/DisplacementFilter.hx:26"
        },
        {
            "message": "Missing item type\nThe offset used to move the displacement map.",
            "line": " pixi/filters/DisplacementFilter.hx:31"
        },
        {
            "message": "Missing item type\nThe scale of the effect.",
            "line": " pixi/filters/DotScreenFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe radius of the effect.",
            "line": " pixi/filters/DotScreenFilter.hx:20"
        },
        {
            "message": "Missing item type\nThe renderable state of this FilterBlock.",
            "line": " pixi/filters/FilterBlock.hx:14"
        },
        {
            "message": "Missing item type\nThe visible state of this FilterBlock.",
            "line": " pixi/filters/FilterBlock.hx:19"
        },
        {
            "message": "Missing item type\nThe strength of the gray. 1 will make the object black and white, 0 will make the object its normal color",
            "line": " pixi/filters/GrayFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe strength of the invert. 1 will fully invert the colors, 0 will make the object its normal color",
            "line": " pixi/filters/InvertFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe texture used for the displacemtent map * must be power of 2 texture.",
            "line": " pixi/filters/NormalMapFilter.hx:21"
        },
        {
            "message": "Missing item type\nThe multiplier used to scale the displacement result from the map calculation.",
            "line": " pixi/filters/NormalMapFilter.hx:26"
        },
        {
            "message": "Missing item type\nThe offset used to move the displacement map.",
            "line": " pixi/filters/NormalMapFilter.hx:31"
        },
        {
            "message": "Missing item type\nThis a point that describes the size of the blocs. x is the width of the block and y is the the height.",
            "line": " pixi/filters/PixelateFilter.hx:17"
        },
        {
            "message": "Missing item type\nThe angle of the split.",
            "line": " pixi/filters/RGBSplitFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe strength of the sepia. 1 will apply the full sepia effect, 0 will make the object its normal color/",
            "line": " pixi/filters/SepiaFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe strength of the blur. Default: 2",
            "line": " pixi/filters/SmartBlurFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe strength of the blur.",
            "line": " pixi/filters/TiltShiftFilter.hx:14"
        },
        {
            "message": "Missing item type\nThe X and Y value to end the effect at.",
            "line": " pixi/filters/TiltShiftFilter.hx:19"
        },
        {
            "message": "Missing item type\nThe strength of the gradient blur.",
            "line": " pixi/filters/TiltShiftFilter.hx:24"
        },
        {
            "message": "Missing item type\nThe X and Y value to start the effect at.",
            "line": " pixi/filters/TiltShiftFilter.hx:29"
        },
        {
            "message": "Missing item type\nThe strength of the blur.",
            "line": " pixi/filters/TiltShiftXFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe X value to end the effect at.",
            "line": " pixi/filters/TiltShiftXFilter.hx:20"
        },
        {
            "message": "Missing item type\nThe strength of the gradient blur.",
            "line": " pixi/filters/TiltShiftXFilter.hx:25"
        },
        {
            "message": "Missing item type\nThe X value to start the effect at.",
            "line": " pixi/filters/TiltShiftXFilter.hx:30"
        },
        {
            "message": "Missing item type\nThe strength of the blur.",
            "line": " pixi/filters/TiltShiftYFilter.hx:15"
        },
        {
            "message": "Missing item type\nThe Y value to end the effect at.",
            "line": " pixi/filters/TiltShiftYFilter.hx:20"
        },
        {
            "message": "Missing item type\nThe strength of the gradient blur.",
            "line": " pixi/filters/TiltShiftYFilter.hx:25"
        },
        {
            "message": "Missing item type\nThe Y value to start the effect at.",
            "line": " pixi/filters/TiltShiftYFilter.hx:30"
        },
        {
            "message": "Missing item type\nThis point describes the the offset of the twist.",
            "line": " pixi/filters/TwistFilter.hx:17"
        },
        {
            "message": "Missing item type\nThe angle of the twist.",
            "line": " pixi/filters/TwistFilter.hx:22"
        },
        {
            "message": "Missing item type\nThe radius of the twist.",
            "line": " pixi/filters/TwistFilter.hx:27"
        },
        {
            "message": "Missing item type\nParsed json response",
            "line": " pixi/loaders/AtlasLoader.hx:54"
        },
        {
            "message": "Missing item type\nParsed json response",
            "line": " pixi/loaders/JsonLoader.hx:55"
        },
        {
            "message": "Missing item type\nXDomainRequest for cross origin",
            "line": " pixi/loaders/JsonLoader.hx:60"
        },
        {
            "message": "Missing item type\nParsed json response",
            "line": " pixi/loaders/SpriteSheetLoader.hx:67"
        },
        {
            "message": "Missing item type\nNumber of steps which will be used as a cap when rounding colors",
            "line": " pixi/renderers/canvas/utils/CanvasTinter.hx:10"
        },
        {
            "message": "Missing item type\nNumber of steps which will be used as a cap when rounding colors",
            "line": " pixi/renderers/canvas/utils/CanvasTinter.hx:15"
        },
        {
            "message": "Missing item type\nWhether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method",
            "line": " pixi/renderers/canvas/utils/CanvasTinter.hx:20"
        },
        {
            "message": "Missing item type\nSet the current animation. Any queued animations are cleared.",
            "line": " pixi/spine/AnimationState.hx:28"
        },
        {
            "message": "Missing item type",
            "line": " pixi/spine/AnimationState.hx:35"
        },
        {
            "message": "Missing item type\nText value",
            "line": " pixi/text/BitmapText.hx:58"
        },
        {
            "message": "Missing item type\nThe style parameters",
            "line": " pixi/text/BitmapText.hx:65"
        },
        {
            "message": "Missing item type\nText value",
            "line": " pixi/text/Text.hx:68"
        },
        {
            "message": "Missing item type\nDoes this Texture have any frame data assigned to it?",
            "line": " pixi/textures/Texture.hx:23"
        },
        {
            "message": "Missing item type\nThe base texture that this texture uses.",
            "line": " pixi/textures/Texture.hx:28"
        },
        {
            "message": "Missing item type\nThe frame specifies the region of the base texture that this texture uses",
            "line": " pixi/textures/Texture.hx:33"
        },
        {
            "message": "Missing item type\nThe trim point",
            "line": " pixi/textures/Texture.hx:38"
        },
        {
            "message": "Missing item type\nThis will let the renderer know if the texture is valid. If its not then it cannot be rendered.",
            "line": " pixi/textures/Texture.hx:43"
        },
        {
            "message": "Missing item type\nThe WebGL UV data cache.",
            "line": " pixi/textures/Texture.hx:48"
        },
        {
            "message": "Missing item type\nThe width of the Texture in pixels.",
            "line": " pixi/textures/Texture.hx:53"
        },
        {
            "message": "Missing item type\nThe height of the Texture in pixels.",
            "line": " pixi/textures/Texture.hx:58"
        },
        {
            "message": "Missing item type\nThis is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\nirrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)",
            "line": " pixi/textures/Texture.hx:63"
        },
        {
            "message": "Missing item type\nMimic Pixi BaseTexture.from.... method.",
            "line": " pixi/textures/VideoTexture.hx:15"
        },
        {
            "message": "Missing item type\nMimic PIXI Texture.from... method.",
            "line": " pixi/textures/VideoTexture.hx:23"
        },
        {
            "message": "Missing item type\ncanvas specific",
            "line": " pixi/utils/Detector.hx:60"
        },
        {
            "message": "Missing item type\nwebgl specific",
            "line": " pixi/utils/Detector.hx:65"
        },
        {
            "message": "Missing item type\nhttps://github.com/mrdoob/stats.js/ (JS stats)\nhttps://github.com/luizbills/stats.js.hx (Original Haxe Externs",
            "line": " pixi/utils/Stats.hx:15"
        },
        {
            "message": "Missing item type\nBecause macros cannot access the JS package, put\na bunch of dummy typedefs so compilation will go through.",
            "line": " pixi/DomDefinitions.hx:3"
        }
    ]
}